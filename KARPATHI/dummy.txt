0None
=====================================================================================================================================
1None
=====================================================================================================================================
2None
=====================================================================================================================================
3TorchObject(nn.Identity, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
4TorchObject(OneHot, {'_eye': array([[1., 0., 0., ..., 0., 0., 0.],
       [0., 1., 0., ..., 0., 0., 0.],
       [0., 0., 1., ..., 0., 0., 0.],
       ...,
       [0., 0., 0., ..., 1., 0., 0.],
       [0., 0., 0., ..., 0., 1., 0.],
       [0., 0., 0., ..., 0., 0., 1.]]), 'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64), 'outputSize': 80})
=====================================================================================================================================
5TorchObject(nn.Linear, 
  {'_type': 'torch.DoubleTensor', 'weight': array([[-1.15368918,...]]), 
                                  'gradInput': array([], dtype=float64), 
                                  'gradWeight': array([[ 2.64428312e-04,  0.00000000e+00, -3.98102997e-03]]), 
                                  'bias': array([ 1.71159573e-02]), 
                                  'gradBias': array([-1.01062279e-01]), 'output': array([], dtype=float64)})
=====================================================================================================================================
6None
=====================================================================================================================================
7TorchObject(nn.Identity, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
8TorchObject(nn.Linear, 
  {'_type': 'torch.DoubleTensor', 
                                  'weight': array([[-5.28128335e-01,... ]]), 
                                  'gradInput': array([], dtype=float64), 
                                  'gradWeight': array([[]]), 
                                  'bias': array([]), 
                                  'gradBias': array([ -1.01062279e-01]), 
                                  'output': array([], dtype=float64)})
=====================================================================================================================================
9TorchObject(nn.CAddTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
10TorchObject(nn.Reshape, {'_type': 'torch.DoubleTensor', 'batchsize': array([139930513759096,               4,             128]), 'gradInput': array([], dtype=float64), 'nelement': 512, 'output': array([], dtype=float64), 'size': array([  4, 128])})
=====================================================================================================================================
11TorchObject(nn.SplitTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64), 'dimension': 2})
=====================================================================================================================================
12None
=====================================================================================================================================
13None
=====================================================================================================================================
14TorchObject(nn.Sigmoid, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
15None
=====================================================================================================================================
16TorchObject(nn.Identity, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
17TorchObject(nn.CMulTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
18None
=====================================================================================================================================
19TorchObject(nn.Sigmoid, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
20None
=====================================================================================================================================
21TorchObject(nn.Tanh, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
22TorchObject(nn.CMulTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
23TorchObject(nn.CAddTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
24None
=====================================================================================================================================
25TorchObject(nn.Sigmoid, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
26TorchObject(nn.Tanh, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
27TorchObject(nn.CMulTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
28TorchObject(nn.Dropout, {'_type': 'torch.DoubleTensor', 'noise': array([], dtype=float64), 'gradInput': array([], dtype=float64), 'stochastic_inference': False, 'p': 0.25, 'v2': True, 'train': True, 'output': array([], dtype=float64)})
=====================================================================================================================================
29TorchObject(nn.Linear, {'_type': 'torch.DoubleTensor', 'weight': array([[-0.06919175,  0.18326708,  1.80651785, ...,  0.16659419,
         1.00685242, -0.10985722],
       [-0.09051932,  0.24305932, -0.41855945, ..., -0.03449549,
         0.26272089, -0.02355628],
       [-0.26539281, -0.26051004, -0.03883474, ..., -0.09812725,
        -0.12265363, -0.44463116],
       ...,
       [ 0.03525119,  0.28334649, -0.15794154, ...,  0.2024343 ,
        -0.40686046, -0.02651542],
       [ 0.1676938 , -0.13152262,  0.16007808, ..., -0.33719361,
         0.19939234, -0.12565719],
       [-0.25152665,  0.17951384,  0.01644752, ..., -0.05101764,
        -0.15320648, -0.12817856]]), 'gradInput': array([], dtype=float64), 'gradWeight': array([[-0.00883792, -0.0041271 , -0.00094198, ..., -0.00500719,
         0.00627682, -0.00431993],
       [ 0.00115362, -0.00184632, -0.00063329, ..., -0.0036928 ,
        -0.00185605, -0.00260217],
       [ 0.01904971, -0.00066909,  0.00386045, ..., -0.00180253,
         0.00639587, -0.00626572],
       ...,
       [-0.00062348,  0.0089563 ,  0.00540801, ..., -0.00443832,
        -0.01022103,  0.0050901 ],
       [-0.00294129,  0.02761759,  0.00103918, ..., -0.00626463,
        -0.00566457, -0.00694591],
       [-0.00368164,  0.01187978, -0.0376624 , ..., -0.01658583,
        -0.00950336, -0.02181806]]), 'bias': array([-8.26455276e-02,  
       -2.59005093e-01,  3.61126400e-01,  1.86988222e-01,  6.38192769e-02,
        6.15944887e-02,  1.41084952e-01, -1.45061667e-01, -2.26878498e-02]), 'gradBias': array([-1.93164238e-02,  4.93930060e-03, -4.82302971e-02,  1.45729180e-02,
        4.16065776e-03,  2.66495256e-02, -2.55146861e-02,  9.67293504e-03,,
       -5.01216555e-02,  1.58013244e-02,  1.26476360e-02,  2.05070019e-02]), 'output': array([], dtype=float64)})
=====================================================================================================================================
30None
=====================================================================================================================================
31TorchObject(nn.Identity, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
32TorchObject(nn.Linear, {'_type': 'torch.DoubleTensor', 
  'weight': array([[-5.69351568e-01]]), 
  'gradInput': array([], dtype=float64), 
  'gradWeight': array([[-0.0475566 ]]),
  'bias': array([-1.38280114e-01,-1.26081480e-01, -3.00721245e-02]), 
  'gradBias': array([-1.93164238e-02, 7.77548542e-03,]), 
  'output': array([], dtype=float64)})
=====================================================================================================================================
33TorchObject(nn.CAddTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
34TorchObject(nn.Reshape, {'_type': 'torch.DoubleTensor', 'batchsize': array([139930513759096,               4,             128]), 'gradInput': array([], dtype=float64), 'nelement': 512, 'output': array([], dtype=float64), 'size': array([  4, 128])})
=====================================================================================================================================
35TorchObject(nn.SplitTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64), 'dimension': 2})
=====================================================================================================================================
36None
=====================================================================================================================================
37None
=====================================================================================================================================
38TorchObject(nn.Sigmoid, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
39None
=====================================================================================================================================
40TorchObject(nn.Identity, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
41TorchObject(nn.CMulTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
42None
=====================================================================================================================================
43TorchObject(nn.Sigmoid, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
44None
=====================================================================================================================================
45TorchObject(nn.Tanh, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
46TorchObject(nn.CMulTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
47TorchObject(nn.CAddTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
48None
=====================================================================================================================================
49TorchObject(nn.Sigmoid, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
50TorchObject(nn.Tanh, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
51TorchObject(nn.CMulTable, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': []})
=====================================================================================================================================
52TorchObject(nn.Dropout, {'_type': 'torch.DoubleTensor', 'noise': array([], dtype=float64), 'gradInput': array([], dtype=float64), 'stochastic_inference': False, 'p': 0.25, 'v2': True, 'train': True, 'output': array([], dtype=float64)})
=====================================================================================================================================
53TorchObject(nn.Linear, {'_type': 'torch.DoubleTensor', 'weight': array([[-0.25298506, -0.96687454, -0.31605553, ..., -3.80558087,
         0.83323394, -0.28156163],
       [ 2.66575575, -1.88053853,  0.18110848, ..., -3.49543904,
         1.01943205,  1.09528353],
       [-0.2948681 , -0.05657739, -0.0222372 , ..., -1.7126257 ,
        -0.05121434, -0.25548124],
       ...,
       [ 0.71410915, -1.19657246,  0.02185838, ..., -0.13426802,
         0.39484389, -0.19540462],
       [ 2.3799661 , -1.69127171,  0.11300454, ..., -3.09885563,
         0.83439379,  0.68330479],
       [-0.13196768, -0.03716581,  0.20439626, ..., -1.31541902,
         0.62834452, -0.20349774]]), 'gradInput': array([], dtype=float64), 'gradWeight': array([[-6.60142574e-02,  3.25729017e-03, -8.23281636e-04, ...,
        -3.37035540e-04,  8.53530578e-03, -4.02689628e-02],
       [-1.95559876e-11,  3.16079305e-11, -5.73616989e-11, ...,
         2.02102786e-10, -1.36072970e-10, -1.60302177e-11],
       [-1.10626389e-01,  3.48892709e-02,  1.08349850e-01, ...,
         3.57468710e-02,  9.40253182e-03, -8.08564620e-03],
       ...,
       [-2.57189986e-03,  2.64420459e-03, -6.24358218e-03, ...,
        -3.00207561e-04, -2.02714551e-04,  8.38717213e-03],
       [-8.25897066e-09,  6.94918526e-09, -8.67184093e-09, ...,
         4.11700545e-08, -2.65016227e-08, -2.09280749e-09],
       [ 1.88980860e-02, -1.31255177e-02,  2.47231135e-03, ...,
         1.28589983e-03, -4.14395259e-04,  1.97649702e-02]]), 'bias': array([-0.59233313, -7.55265653,  0.71322551, -1.31019976,  0.02722996,
       -7.60063947, -1.06606318, -0.31642232, -0.40152537, -2.7426458 ,
       -0.42156452, -0.68670959, -0.3547747 , -3.0041904 , -0.16855289,
        0.30981021, -0.51549645, -1.55551129, -2.49644851, -2.5064541 ,
       -2.77720096, -2.73078385, -3.1646998 , -0.34262266, -1.22813034,
       -2.11516473, -5.75650113, -7.69336224, -1.25305804, -7.89458232,
       -3.08994133, -5.53007496, -7.7273039 , -4.84969759, -7.625871  ,
        0.30688816,  0.08408848, -0.18234608, -0.15303987, -0.11517929,
       -0.03193207, -0.33342609,  0.44614669, -0.06738337, -0.79073167,
       -0.67310156, -0.12730481, -0.21337768,  0.27874613, -0.05354979,
       -0.20200625, -1.08701674, -0.16546052,  0.45997494,  0.74474096,
       -0.6608348 , -0.69197818,  0.16502968, -1.03031739, -0.56883079,
       -1.11376337, -9.25719785, -7.93971175, -9.13082605, -1.88596882,
       -7.47962851, -4.39886684, -0.55013183, -1.8460849 , -0.63994439,
       -4.97729631, -5.6575282 , -3.56322859, -5.65775501, -1.44980701,
       -7.52630155, -7.78563279, -0.9389581 , -3.06290287, -1.51333332]), 'gradBias': array([ 5.25924624e-02,  1.42331273e-09,  1.07708988e-01, -8.50101058e-02,
       -1.00872231e-01,  1.13187028e-09, -3.26612961e-03,  1.71010995e-03,
        1.51356758e-03,  3.81759567e-07,  6.54274703e-02, -2.03816437e-02,
        5.60926095e-02,  1.36654442e-07,  9.35062606e-06,  9.31871585e-04,
        2.43692080e-05,  1.87014228e-06,  4.61407400e-07,  2.10718760e-07,
        2.08945051e-07,  1.81569607e-07,  1.02008000e-07,  5.12670665e-06,
        9.64461821e-03, -1.31565308e-02,  4.97514433e-09,  1.19242217e-09,
        5.09351646e-02,  1.36688802e-09,  8.63547325e-08,  7.63028278e-09,
        1.32041085e-09,  2.04415250e-08,  1.55238901e-09,  3.49249321e-03,
        5.53437455e-02,  3.25874288e-03,  5.61536528e-02, -3.23633197e-01,
       -1.13601936e-01,  2.64633328e-02, -8.30065169e-03,  2.50527519e-01,
       -3.02869860e-02,  4.13048151e-02, -2.17723637e-01, -6.53314743e-03,
        3.58837471e-02, -2.77367609e-03,  2.26895419e-02,  1.46979778e-02,
       -2.99779450e-01,  5.21816555e-02,  1.55024876e-01,  1.77716728e-01,
        1.82832812e-01,  1.02714487e-01,  8.14647829e-03, -3.43619899e-01,
        1.47598519e-02,  5.73505816e-10,  1.30256020e-09,  5.83508358e-10,
        1.45361991e-04,  1.26400166e-09,  9.75333273e-09,  2.68470305e-05,
        4.85470460e-04,  2.45891411e-06,  9.78831437e-09,  5.64256456e-09,
        8.78553697e-08,  5.46260540e-09,  1.71580952e-04,  1.31373370e-09,
        1.17263712e-09,  1.44998433e-02,  2.12953881e-07,  3.81547442e-03]), 'output': array([], dtype=float64)})
=====================================================================================================================================
54TorchObject(nn.LogSoftMax, {'output': array([], dtype=float64), '_type': 'torch.DoubleTensor', 'gradInput': array([], dtype=float64)})
=====================================================================================================================================
55None
=====================================================================================================================================
