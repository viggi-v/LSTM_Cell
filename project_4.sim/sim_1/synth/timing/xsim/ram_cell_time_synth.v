// Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2018.1 (lin64) Build 2188600 Wed Apr  4 18:39:19 MDT 2018
// Date        : Fri Jul 20 12:26:12 2018
// Host        : viggi running 64-bit Ubuntu 16.04.4 LTS
// Command     : write_verilog -mode timesim -nolib -sdf_anno true -force -file
//               /home/vighnesh/project_4/project_4.sim/sim_1/synth/timing/xsim/ram_cell_time_synth.v
// Design      : ram_cell
// Purpose     : This verilog netlist is a timing simulation representation of the design and should not be modified or
//               synthesized. Please ensure that this netlist is used with the corresponding SDF file.
// Device      : xc7a200tsbg484-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps
`define XIL_TIMING

module RAM32X1D_UNIQ_BASE_
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1000
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1001
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1002
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1003
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1004
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1005
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1006
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1007
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1008
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1009
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1010
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1011
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1012
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1013
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1014
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1015
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1016
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1017
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1018
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1019
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD1020
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD766
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD767
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD768
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD769
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD770
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD771
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD772
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD773
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD774
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD775
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD776
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD777
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD778
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD779
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD780
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD781
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD782
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD783
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD784
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD785
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD786
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD787
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD788
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD789
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD790
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD791
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD792
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD793
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD794
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD795
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD796
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD797
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD798
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD799
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD800
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD801
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD802
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD803
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD804
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD805
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD806
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD807
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD808
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD809
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD810
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD811
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD812
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD813
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD814
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD815
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD816
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD817
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD818
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD819
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD820
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD821
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD822
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD823
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD824
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD825
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD826
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD827
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD828
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD829
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD830
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD831
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD832
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD833
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD834
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD835
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD836
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD837
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD838
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD839
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD840
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD841
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD842
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD843
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD844
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD845
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD846
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD847
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD848
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD849
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD850
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD851
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD852
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD853
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD854
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD855
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD856
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD857
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD858
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD859
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD860
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD861
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD862
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD863
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD864
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD865
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD866
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD867
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD868
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD869
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD870
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD871
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD872
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD873
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD874
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD875
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD876
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD877
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD878
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD879
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD880
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD881
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD882
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD883
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD884
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD885
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD886
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD887
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD888
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD889
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD890
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD891
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD892
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD893
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD894
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD895
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD896
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD897
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD898
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD899
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD900
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD901
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD902
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD903
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD904
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD905
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD906
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD907
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD908
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD909
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD910
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD911
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD912
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD913
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD914
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD915
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD916
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD917
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD918
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD919
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD920
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD921
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD922
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD923
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD924
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD925
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD926
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD927
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD928
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD929
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD930
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD931
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD932
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD933
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD934
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD935
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD936
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD937
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD938
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD939
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD940
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD941
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD942
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD943
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD944
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD945
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD946
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD947
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD948
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD949
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD950
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD951
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD952
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD953
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD954
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD955
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD956
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD957
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD958
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD959
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD960
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD961
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD962
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD963
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD964
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD965
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD966
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD967
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD968
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD969
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD970
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD971
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD972
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD973
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD974
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD975
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD976
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD977
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD978
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD979
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD980
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD981
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD982
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD983
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD984
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD985
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD986
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD987
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD988
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD989
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD990
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD991
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD992
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD993
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD994
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD995
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD996
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD997
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD998
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module RAM32X1D_HD999
   (DPO,
    SPO,
    A0,
    A1,
    A2,
    A3,
    A4,
    D,
    DPRA0,
    DPRA1,
    DPRA2,
    DPRA3,
    DPRA4,
    WCLK,
    WE);
  output DPO;
  output SPO;
  input A0;
  input A1;
  input A2;
  input A3;
  input A4;
  input D;
  input DPRA0;
  input DPRA1;
  input DPRA2;
  input DPRA3;
  input DPRA4;
  input WCLK;
  input WE;

  wire A0;
  wire A1;
  wire A2;
  wire A3;
  wire A4;
  wire D;
  wire DPO;
  wire DPRA0;
  wire DPRA1;
  wire DPRA2;
  wire DPRA3;
  wire DPRA4;
  wire SPO;
  wire WCLK;
  wire WE;

  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    DP
       (.CLK(WCLK),
        .I(D),
        .O(DPO),
        .RADR0(DPRA0),
        .RADR1(DPRA1),
        .RADR2(DPRA2),
        .RADR3(DPRA3),
        .RADR4(DPRA4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
  RAMD32 #(
    .INIT(32'h00000000),
    .IS_CLK_INVERTED(1'b0)) 
    SP
       (.CLK(WCLK),
        .I(D),
        .O(SPO),
        .RADR0(A0),
        .RADR1(A1),
        .RADR2(A2),
        .RADR3(A3),
        .RADR4(A4),
        .WADR0(A0),
        .WADR1(A1),
        .WADR2(A2),
        .WADR3(A3),
        .WADR4(A4),
        .WE(WE));
endmodule

module dual_port_ram
   (ACC_reg,
    data_out_10,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv1[0] ,
    wr_en,
    addr_in_0,
    \mul_count_reg[0]_rep ,
    \mul_count_reg[1]_rep__0 ,
    \mul_count_reg[2]_rep ,
    \mul_count_reg[3]_rep__0 ,
    read,
    addr_in_1);
  output ACC_reg;
  output [15:0]data_out_10;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv1[0] ;
  input wr_en;
  input [3:0]addr_in_0;
  input \mul_count_reg[0]_rep ;
  input \mul_count_reg[1]_rep__0 ;
  input \mul_count_reg[2]_rep ;
  input \mul_count_reg[3]_rep__0 ;
  input [0:0]read;
  input [1:0]addr_in_1;

  wire ACC_reg;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire CLK_IBUF_BUFG;
  wire [3:0]addr_in_0;
  wire [1:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire \mul_count_reg[0]_rep ;
  wire \mul_count_reg[1]_rep__0 ;
  wire \mul_count_reg[2]_rep ;
  wire \mul_count_reg[3]_rep__0 ;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire [0:0]read;
  wire wr_en;
  wire [15:0]\wv1[0] ;

  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_33__0
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(ACC_reg_14));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_34__0
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(ACC_reg_13));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_35__0
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(ACC_reg_12));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_36__0
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(ACC_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_37__0
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(ACC_reg_10));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_38__0
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(ACC_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_39__0
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(ACC_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_40__0
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(ACC_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_41__0
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(ACC_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_42__0
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(ACC_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_43__0
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(ACC_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_44__0
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(ACC_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_45__0
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(ACC_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_46__0
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(ACC_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_47__0
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(ACC_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_48__0
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(ACC_reg));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_UNIQ_BASE_ ram_reg_0_15_0_0
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD766 ram_reg_0_15_10_10
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD767 ram_reg_0_15_11_11
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD768 ram_reg_0_15_12_12
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD769 ram_reg_0_15_13_13
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD770 ram_reg_0_15_14_14
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD771 ram_reg_0_15_15_15
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(read),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD772 ram_reg_0_15_1_1
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD773 ram_reg_0_15_2_2
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD774 ram_reg_0_15_3_3
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD775 ram_reg_0_15_4_4
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD776 ram_reg_0_15_5_5
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD777 ram_reg_0_15_6_6
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD778 ram_reg_0_15_7_7
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD779 ram_reg_0_15_8_8
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD780 ram_reg_0_15_9_9
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[0] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(\mul_count_reg[1]_rep__0 ),
        .DPRA2(\mul_count_reg[2]_rep ),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_0
   (ACC_reg,
    data_out_10,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv1[1] ,
    wr_en,
    out,
    read);
  output ACC_reg;
  output [15:0]data_out_10;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv1[1] ;
  input wr_en;
  input [3:0]out;
  input [3:0]read;

  wire ACC_reg;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire CLK_IBUF_BUFG;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire [3:0]out;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire [3:0]read;
  wire wr_en;
  wire [15:0]\wv1[1] ;

  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_33__1
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(ACC_reg_14));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_34__1
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(ACC_reg_13));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_35__1
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(ACC_reg_12));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_36__1
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(ACC_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_37__1
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(ACC_reg_10));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_38__1
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(ACC_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_39__1
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(ACC_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_40__1
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(ACC_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_41__1
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(ACC_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_42__1
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(ACC_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_43__1
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(ACC_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_44__1
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(ACC_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_45__1
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(ACC_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_46__1
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(ACC_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_47__1
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(ACC_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_48__1
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(ACC_reg));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD781 ram_reg_0_15_0_0
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD782 ram_reg_0_15_10_10
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD783 ram_reg_0_15_11_11
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD784 ram_reg_0_15_12_12
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD785 ram_reg_0_15_13_13
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD786 ram_reg_0_15_14_14
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD787 ram_reg_0_15_15_15
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD788 ram_reg_0_15_1_1
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD789 ram_reg_0_15_2_2
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD790 ram_reg_0_15_3_3
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD791 ram_reg_0_15_4_4
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD792 ram_reg_0_15_5_5
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD793 ram_reg_0_15_6_6
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD794 ram_reg_0_15_7_7
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD795 ram_reg_0_15_8_8
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD796 ram_reg_0_15_9_9
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[1] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_1
   (ACC_reg,
    data_out_10,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv1[2] ,
    wr_en,
    addr_in_0,
    \mul_count_reg[0]_rep ,
    addr_in_1);
  output ACC_reg;
  output [15:0]data_out_10;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv1[2] ;
  input wr_en;
  input [3:0]addr_in_0;
  input \mul_count_reg[0]_rep ;
  input [2:0]addr_in_1;

  wire ACC_reg;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire CLK_IBUF_BUFG;
  wire [3:0]addr_in_0;
  wire [2:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire \mul_count_reg[0]_rep ;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire wr_en;
  wire [15:0]\wv1[2] ;

  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_33__2
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(ACC_reg_14));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_34__2
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(ACC_reg_13));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_35__2
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(ACC_reg_12));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_36__2
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(ACC_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_37__2
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(ACC_reg_10));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_38__2
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(ACC_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_39__2
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(ACC_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_40__2
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(ACC_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_41__2
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(ACC_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_42__2
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(ACC_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_43__2
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(ACC_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_44__2
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(ACC_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_45__2
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(ACC_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_46__2
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(ACC_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_47__2
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(ACC_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_48__2
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(ACC_reg));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD797 ram_reg_0_15_0_0
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD798 ram_reg_0_15_10_10
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD799 ram_reg_0_15_11_11
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD800 ram_reg_0_15_12_12
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD801 ram_reg_0_15_13_13
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD802 ram_reg_0_15_14_14
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD803 ram_reg_0_15_15_15
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD804 ram_reg_0_15_1_1
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD805 ram_reg_0_15_2_2
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD806 ram_reg_0_15_3_3
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD807 ram_reg_0_15_4_4
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD808 ram_reg_0_15_5_5
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD809 ram_reg_0_15_6_6
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD810 ram_reg_0_15_7_7
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD811 ram_reg_0_15_8_8
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD812 ram_reg_0_15_9_9
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv1[2] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_10
   (MULTR0,
    data_out_10,
    MULTR0_0,
    MULTR0_1,
    MULTR0_2,
    MULTR0_3,
    MULTR0_4,
    MULTR0_5,
    MULTR0_6,
    MULTR0_7,
    MULTR0_8,
    MULTR0_9,
    MULTR0_10,
    MULTR0_11,
    MULTR0_12,
    MULTR0_13,
    MULTR0_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv3[3] ,
    wr_en,
    out,
    read,
    addr_in_1,
    \mul_count_reg[3]_rep );
  output MULTR0;
  output [15:0]data_out_10;
  output MULTR0_0;
  output MULTR0_1;
  output MULTR0_2;
  output MULTR0_3;
  output MULTR0_4;
  output MULTR0_5;
  output MULTR0_6;
  output MULTR0_7;
  output MULTR0_8;
  output MULTR0_9;
  output MULTR0_10;
  output MULTR0_11;
  output MULTR0_12;
  output MULTR0_13;
  output MULTR0_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv3[3] ;
  input wr_en;
  input [3:0]out;
  input [3:0]read;
  input [1:0]addr_in_1;
  input [0:0]\mul_count_reg[3]_rep ;

  wire CLK_IBUF_BUFG;
  wire MULTR0;
  wire MULTR0_0;
  wire MULTR0_1;
  wire MULTR0_10;
  wire MULTR0_11;
  wire MULTR0_12;
  wire MULTR0_13;
  wire MULTR0_14;
  wire MULTR0_2;
  wire MULTR0_3;
  wire MULTR0_4;
  wire MULTR0_5;
  wire MULTR0_6;
  wire MULTR0_7;
  wire MULTR0_8;
  wire MULTR0_9;
  wire [1:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire [0:0]\mul_count_reg[3]_rep ;
  wire [3:0]out;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire [3:0]read;
  wire wr_en;
  wire [15:0]\wv3[3] ;

  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_33__2
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(MULTR0_14));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_34__2
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(MULTR0_13));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_35__2
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(MULTR0_12));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_36__2
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(MULTR0_11));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_37__2
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(MULTR0_10));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_38__2
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(MULTR0_9));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_39__2
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(MULTR0_8));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_40__2
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(MULTR0_7));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_41__2
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(MULTR0_6));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_42__2
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(MULTR0_5));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_43__2
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(MULTR0_4));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_44__2
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(MULTR0_3));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_45__2
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(MULTR0_2));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_46__2
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(MULTR0_1));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_47__2
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(MULTR0_0));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_48__2
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(MULTR0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD941 ram_reg_0_15_0_0
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD942 ram_reg_0_15_10_10
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD943 ram_reg_0_15_11_11
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD944 ram_reg_0_15_12_12
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD945 ram_reg_0_15_13_13
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD946 ram_reg_0_15_14_14
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD947 ram_reg_0_15_15_15
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD948 ram_reg_0_15_1_1
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD949 ram_reg_0_15_2_2
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD950 ram_reg_0_15_3_3
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD951 ram_reg_0_15_4_4
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(addr_in_1[0]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD952 ram_reg_0_15_5_5
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD953 ram_reg_0_15_6_6
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD954 ram_reg_0_15_7_7
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD955 ram_reg_0_15_8_8
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD956 ram_reg_0_15_9_9
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[3] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(\mul_count_reg[3]_rep ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_11
   (B,
    data_out_10,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv4[0] ,
    wr_en,
    addr_in_0,
    \mul_count_reg[0]_rep__0 ,
    \mul_count_reg[1]_rep ,
    addr_in_1);
  output [15:0]B;
  output [15:0]data_out_10;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv4[0] ;
  input wr_en;
  input [3:0]addr_in_0;
  input \mul_count_reg[0]_rep__0 ;
  input \mul_count_reg[1]_rep ;
  input [1:0]addr_in_1;

  wire [15:0]B;
  wire CLK_IBUF_BUFG;
  wire [3:0]addr_in_0;
  wire [1:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire \mul_count_reg[0]_rep__0 ;
  wire \mul_count_reg[1]_rep ;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire wr_en;
  wire [15:0]\wv4[0] ;

  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_10__7
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(B[6]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_11__7
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(B[5]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_12__7
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(B[4]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_13__7
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(B[3]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_14__7
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(B[2]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_15__7
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(B[1]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_16__7
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(B[0]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_1__7
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(B[15]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_2__7
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(B[14]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_3__7
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(B[13]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_4__7
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(B[12]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_5__7
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(B[11]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_6__7
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(B[10]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_7__7
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(B[9]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_8__7
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(B[8]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_9__7
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(B[7]));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD957 ram_reg_0_15_0_0
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD958 ram_reg_0_15_10_10
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD959 ram_reg_0_15_11_11
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD960 ram_reg_0_15_12_12
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD961 ram_reg_0_15_13_13
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD962 ram_reg_0_15_14_14
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD963 ram_reg_0_15_15_15
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD964 ram_reg_0_15_1_1
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD965 ram_reg_0_15_2_2
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD966 ram_reg_0_15_3_3
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD967 ram_reg_0_15_4_4
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD968 ram_reg_0_15_5_5
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD969 ram_reg_0_15_6_6
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD970 ram_reg_0_15_7_7
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD971 ram_reg_0_15_8_8
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD972 ram_reg_0_15_9_9
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[0] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(\mul_count_reg[0]_rep__0 ),
        .DPRA1(\mul_count_reg[1]_rep ),
        .DPRA2(addr_in_1[0]),
        .DPRA3(addr_in_1[1]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_12
   (B,
    data_out_10,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv4[1] ,
    wr_en,
    out,
    addr_in_1);
  output [15:0]B;
  output [15:0]data_out_10;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv4[1] ;
  input wr_en;
  input [3:0]out;
  input [3:0]addr_in_1;

  wire [15:0]B;
  wire CLK_IBUF_BUFG;
  wire [3:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire [3:0]out;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire wr_en;
  wire [15:0]\wv4[1] ;

  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_10__8
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(B[6]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_11__8
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(B[5]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_12__8
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(B[4]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_13__8
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(B[3]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_14__8
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(B[2]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_15__8
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(B[1]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_16__8
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(B[0]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_1__8
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(B[15]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_2__8
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(B[14]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_3__8
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(B[13]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_4__8
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(B[12]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_5__8
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(B[11]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_6__8
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(B[10]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_7__8
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(B[9]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_8__8
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(B[8]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_9__8
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(B[7]));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD973 ram_reg_0_15_0_0
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD974 ram_reg_0_15_10_10
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD975 ram_reg_0_15_11_11
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD976 ram_reg_0_15_12_12
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD977 ram_reg_0_15_13_13
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD978 ram_reg_0_15_14_14
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD979 ram_reg_0_15_15_15
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD980 ram_reg_0_15_1_1
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD981 ram_reg_0_15_2_2
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD982 ram_reg_0_15_3_3
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD983 ram_reg_0_15_4_4
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD984 ram_reg_0_15_5_5
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD985 ram_reg_0_15_6_6
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD986 ram_reg_0_15_7_7
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD987 ram_reg_0_15_8_8
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD988 ram_reg_0_15_9_9
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[1] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_13
   (B,
    data_out_10,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv4[2] ,
    wr_en,
    addr_in_0,
    addr_in_1,
    \mul_count_reg[3]_rep__0 );
  output [15:0]B;
  output [15:0]data_out_10;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv4[2] ;
  input wr_en;
  input [3:0]addr_in_0;
  input [3:0]addr_in_1;
  input [0:0]\mul_count_reg[3]_rep__0 ;

  wire [15:0]B;
  wire CLK_IBUF_BUFG;
  wire [3:0]addr_in_0;
  wire [3:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire [0:0]\mul_count_reg[3]_rep__0 ;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire wr_en;
  wire [15:0]\wv4[2] ;

  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_10__9
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(B[6]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_11__9
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(B[5]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_12__9
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(B[4]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_13__9
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(B[3]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_14__9
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(B[2]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_15__9
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(B[1]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_16__9
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(B[0]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_1__9
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(B[15]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_2__9
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(B[14]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_3__9
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(B[13]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_4__9
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(B[12]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_5__9
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(B[11]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_6__9
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(B[10]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_7__9
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(B[9]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_8__9
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(B[8]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_9__9
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(B[7]));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD989 ram_reg_0_15_0_0
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD990 ram_reg_0_15_10_10
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD991 ram_reg_0_15_11_11
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD992 ram_reg_0_15_12_12
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD993 ram_reg_0_15_13_13
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD994 ram_reg_0_15_14_14
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD995 ram_reg_0_15_15_15
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(\mul_count_reg[3]_rep__0 ),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD996 ram_reg_0_15_1_1
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD997 ram_reg_0_15_2_2
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD998 ram_reg_0_15_3_3
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD999 ram_reg_0_15_4_4
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1000 ram_reg_0_15_5_5
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1001 ram_reg_0_15_6_6
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1002 ram_reg_0_15_7_7
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1003 ram_reg_0_15_8_8
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1004 ram_reg_0_15_9_9
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv4[2] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_14
   (wr_en,
    B,
    data_out_10,
    state_OBUF,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv4[3] ,
    out,
    addr_in_1);
  output wr_en;
  output [15:0]B;
  output [15:0]data_out_10;
  input [1:0]state_OBUF;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv4[3] ;
  input [3:0]out;
  input [3:0]addr_in_1;

  wire [15:0]B;
  wire CLK_IBUF_BUFG;
  wire [3:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire [3:0]out;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire [1:0]state_OBUF;
  wire wr_en;
  wire [15:0]\wv4[3] ;

  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_10__10
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(B[6]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_11__10
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(B[5]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_12__10
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(B[4]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_13__10
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(B[3]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_14__10
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(B[2]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_15__10
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(B[1]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_16__10
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(B[0]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_1__10
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(B[15]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_2__10
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(B[14]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_3__10
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(B[13]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_4__10
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(B[12]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_5__10
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(B[11]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_6__10
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(B[10]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_7__10
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(B[9]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_8__10
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(B[8]));
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_9__10
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(B[7]));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1005 ram_reg_0_15_0_0
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  LUT2 #(
    .INIT(4'h2)) 
    ram_reg_0_15_0_0_i_2
       (.I0(state_OBUF[0]),
        .I1(state_OBUF[1]),
        .O(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1006 ram_reg_0_15_10_10
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1007 ram_reg_0_15_11_11
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1008 ram_reg_0_15_12_12
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1009 ram_reg_0_15_13_13
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1010 ram_reg_0_15_14_14
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1011 ram_reg_0_15_15_15
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1012 ram_reg_0_15_1_1
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1013 ram_reg_0_15_2_2
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1014 ram_reg_0_15_3_3
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1015 ram_reg_0_15_4_4
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1016 ram_reg_0_15_5_5
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1017 ram_reg_0_15_6_6
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1018 ram_reg_0_15_7_7
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1019 ram_reg_0_15_8_8
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD1020 ram_reg_0_15_9_9
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv4[3] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(addr_in_1[0]),
        .DPRA1(addr_in_1[1]),
        .DPRA2(addr_in_1[2]),
        .DPRA3(addr_in_1[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_2
   (ACC_reg,
    data_out_10,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv1[3] ,
    wr_en,
    out,
    read,
    addr_in_1);
  output ACC_reg;
  output [15:0]data_out_10;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv1[3] ;
  input wr_en;
  input [3:0]out;
  input [2:0]read;
  input [0:0]addr_in_1;

  wire ACC_reg;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire CLK_IBUF_BUFG;
  wire [0:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire [3:0]out;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire [2:0]read;
  wire wr_en;
  wire [15:0]\wv1[3] ;

  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_33__3
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(ACC_reg_14));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_34__3
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(ACC_reg_13));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_35__3
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(ACC_reg_12));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_36__3
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(ACC_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_37__3
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(ACC_reg_10));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_38__3
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(ACC_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_39__3
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(ACC_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_40__3
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(ACC_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_41__3
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(ACC_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_42__3
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(ACC_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_43__3
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(ACC_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_44__3
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(ACC_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_45__3
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(ACC_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_46__3
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(ACC_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_47__3
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(ACC_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_48__3
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(ACC_reg));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD813 ram_reg_0_15_0_0
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD814 ram_reg_0_15_10_10
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD815 ram_reg_0_15_11_11
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD816 ram_reg_0_15_12_12
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD817 ram_reg_0_15_13_13
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD818 ram_reg_0_15_14_14
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD819 ram_reg_0_15_15_15
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD820 ram_reg_0_15_1_1
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD821 ram_reg_0_15_2_2
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD822 ram_reg_0_15_3_3
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD823 ram_reg_0_15_4_4
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD824 ram_reg_0_15_5_5
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD825 ram_reg_0_15_6_6
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD826 ram_reg_0_15_7_7
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD827 ram_reg_0_15_8_8
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD828 ram_reg_0_15_9_9
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv1[3] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_3
   (ACC_reg,
    data_out_10,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv2[0] ,
    wr_en,
    addr_in_0,
    \mul_count_reg[0]_rep ,
    addr_in_1);
  output ACC_reg;
  output [15:0]data_out_10;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv2[0] ;
  input wr_en;
  input [3:0]addr_in_0;
  input \mul_count_reg[0]_rep ;
  input [2:0]addr_in_1;

  wire ACC_reg;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire CLK_IBUF_BUFG;
  wire [3:0]addr_in_0;
  wire [2:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire \mul_count_reg[0]_rep ;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire wr_en;
  wire [15:0]\wv2[0] ;

  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_33__4
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(ACC_reg_14));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_34__4
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(ACC_reg_13));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_35__4
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(ACC_reg_12));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_36__4
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(ACC_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_37__4
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(ACC_reg_10));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_38__4
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(ACC_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_39__4
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(ACC_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_40__4
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(ACC_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_41__4
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(ACC_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_42__4
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(ACC_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_43__4
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(ACC_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_44__4
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(ACC_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_45__4
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(ACC_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_46__4
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(ACC_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_47__4
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(ACC_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_48__4
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(ACC_reg));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD829 ram_reg_0_15_0_0
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD830 ram_reg_0_15_10_10
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD831 ram_reg_0_15_11_11
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD832 ram_reg_0_15_12_12
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD833 ram_reg_0_15_13_13
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD834 ram_reg_0_15_14_14
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD835 ram_reg_0_15_15_15
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD836 ram_reg_0_15_1_1
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD837 ram_reg_0_15_2_2
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD838 ram_reg_0_15_3_3
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD839 ram_reg_0_15_4_4
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD840 ram_reg_0_15_5_5
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD841 ram_reg_0_15_6_6
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD842 ram_reg_0_15_7_7
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD843 ram_reg_0_15_8_8
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD844 ram_reg_0_15_9_9
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[0] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_4
   (ACC_reg,
    data_out_10,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv2[1] ,
    wr_en,
    out,
    read);
  output ACC_reg;
  output [15:0]data_out_10;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv2[1] ;
  input wr_en;
  input [3:0]out;
  input [3:0]read;

  wire ACC_reg;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire CLK_IBUF_BUFG;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire [3:0]out;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire [3:0]read;
  wire wr_en;
  wire [15:0]\wv2[1] ;

  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_33__5
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(ACC_reg_14));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_34__5
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(ACC_reg_13));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_35__5
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(ACC_reg_12));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_36__5
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(ACC_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_37__5
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(ACC_reg_10));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_38__5
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(ACC_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_39__5
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(ACC_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_40__5
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(ACC_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_41__5
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(ACC_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_42__5
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(ACC_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_43__5
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(ACC_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_44__5
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(ACC_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_45__5
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(ACC_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_46__5
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(ACC_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_47__5
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(ACC_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_48__5
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(ACC_reg));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD845 ram_reg_0_15_0_0
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD846 ram_reg_0_15_10_10
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD847 ram_reg_0_15_11_11
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD848 ram_reg_0_15_12_12
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD849 ram_reg_0_15_13_13
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD850 ram_reg_0_15_14_14
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD851 ram_reg_0_15_15_15
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD852 ram_reg_0_15_1_1
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD853 ram_reg_0_15_2_2
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD854 ram_reg_0_15_3_3
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD855 ram_reg_0_15_4_4
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD856 ram_reg_0_15_5_5
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD857 ram_reg_0_15_6_6
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD858 ram_reg_0_15_7_7
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD859 ram_reg_0_15_8_8
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD860 ram_reg_0_15_9_9
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[1] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_5
   (ACC_reg,
    data_out_10,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv2[2] ,
    wr_en,
    addr_in_0,
    \mul_count_reg[0]_rep ,
    addr_in_1);
  output ACC_reg;
  output [15:0]data_out_10;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv2[2] ;
  input wr_en;
  input [3:0]addr_in_0;
  input \mul_count_reg[0]_rep ;
  input [2:0]addr_in_1;

  wire ACC_reg;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire CLK_IBUF_BUFG;
  wire [3:0]addr_in_0;
  wire [2:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire \mul_count_reg[0]_rep ;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire wr_en;
  wire [15:0]\wv2[2] ;

  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_33__6
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(ACC_reg_14));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_34__6
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(ACC_reg_13));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_35__6
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(ACC_reg_12));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_36__6
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(ACC_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_37__6
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(ACC_reg_10));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_38__6
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(ACC_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_39__6
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(ACC_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_40__6
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(ACC_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_41__6
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(ACC_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_42__6
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(ACC_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_43__6
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(ACC_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_44__6
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(ACC_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_45__6
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(ACC_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_46__6
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(ACC_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_47__6
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(ACC_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_48__6
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(ACC_reg));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD861 ram_reg_0_15_0_0
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD862 ram_reg_0_15_10_10
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD863 ram_reg_0_15_11_11
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD864 ram_reg_0_15_12_12
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD865 ram_reg_0_15_13_13
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD866 ram_reg_0_15_14_14
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD867 ram_reg_0_15_15_15
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD868 ram_reg_0_15_1_1
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD869 ram_reg_0_15_2_2
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD870 ram_reg_0_15_3_3
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD871 ram_reg_0_15_4_4
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD872 ram_reg_0_15_5_5
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD873 ram_reg_0_15_6_6
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD874 ram_reg_0_15_7_7
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD875 ram_reg_0_15_8_8
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD876 ram_reg_0_15_9_9
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv2[2] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_6
   (ACC_reg,
    data_out_10,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv2[3] ,
    wr_en,
    out,
    read,
    addr_in_1);
  output ACC_reg;
  output [15:0]data_out_10;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv2[3] ;
  input wr_en;
  input [3:0]out;
  input [2:0]read;
  input [0:0]addr_in_1;

  wire ACC_reg;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire CLK_IBUF_BUFG;
  wire [0:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire [3:0]out;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire [2:0]read;
  wire wr_en;
  wire [15:0]\wv2[3] ;

  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_33__7
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(ACC_reg_14));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_34__7
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(ACC_reg_13));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_35__7
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(ACC_reg_12));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_36__7
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(ACC_reg_11));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_37__7
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(ACC_reg_10));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_38__7
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(ACC_reg_9));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_39__7
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(ACC_reg_8));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_40__7
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(ACC_reg_7));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_41__7
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(ACC_reg_6));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_42__7
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(ACC_reg_5));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_43__7
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(ACC_reg_4));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_44__7
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(ACC_reg_3));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_45__7
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(ACC_reg_2));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_46__7
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(ACC_reg_1));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_47__7
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(ACC_reg_0));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h8)) 
    ACC_reg_i_48__7
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(ACC_reg));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD877 ram_reg_0_15_0_0
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD878 ram_reg_0_15_10_10
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD879 ram_reg_0_15_11_11
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD880 ram_reg_0_15_12_12
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD881 ram_reg_0_15_13_13
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD882 ram_reg_0_15_14_14
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD883 ram_reg_0_15_15_15
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD884 ram_reg_0_15_1_1
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD885 ram_reg_0_15_2_2
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD886 ram_reg_0_15_3_3
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD887 ram_reg_0_15_4_4
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD888 ram_reg_0_15_5_5
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD889 ram_reg_0_15_6_6
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD890 ram_reg_0_15_7_7
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD891 ram_reg_0_15_8_8
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD892 ram_reg_0_15_9_9
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv2[3] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(addr_in_1),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_7
   (MULTR0,
    data_out_10,
    MULTR0_0,
    MULTR0_1,
    MULTR0_2,
    MULTR0_3,
    MULTR0_4,
    MULTR0_5,
    MULTR0_6,
    MULTR0_7,
    MULTR0_8,
    MULTR0_9,
    MULTR0_10,
    MULTR0_11,
    MULTR0_12,
    MULTR0_13,
    MULTR0_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv3[0] ,
    wr_en,
    addr_in_0,
    \mul_count_reg[0]_rep ,
    addr_in_1);
  output MULTR0;
  output [15:0]data_out_10;
  output MULTR0_0;
  output MULTR0_1;
  output MULTR0_2;
  output MULTR0_3;
  output MULTR0_4;
  output MULTR0_5;
  output MULTR0_6;
  output MULTR0_7;
  output MULTR0_8;
  output MULTR0_9;
  output MULTR0_10;
  output MULTR0_11;
  output MULTR0_12;
  output MULTR0_13;
  output MULTR0_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv3[0] ;
  input wr_en;
  input [3:0]addr_in_0;
  input \mul_count_reg[0]_rep ;
  input [2:0]addr_in_1;

  wire CLK_IBUF_BUFG;
  wire MULTR0;
  wire MULTR0_0;
  wire MULTR0_1;
  wire MULTR0_10;
  wire MULTR0_11;
  wire MULTR0_12;
  wire MULTR0_13;
  wire MULTR0_14;
  wire MULTR0_2;
  wire MULTR0_3;
  wire MULTR0_4;
  wire MULTR0_5;
  wire MULTR0_6;
  wire MULTR0_7;
  wire MULTR0_8;
  wire MULTR0_9;
  wire [3:0]addr_in_0;
  wire [2:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire \mul_count_reg[0]_rep ;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire wr_en;
  wire [15:0]\wv3[0] ;

  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_33
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(MULTR0_14));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_34
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(MULTR0_13));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_35
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(MULTR0_12));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_36
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(MULTR0_11));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_37
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(MULTR0_10));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_38
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(MULTR0_9));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_39
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(MULTR0_8));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_40
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(MULTR0_7));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_41
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(MULTR0_6));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_42
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(MULTR0_5));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_43
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(MULTR0_4));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_44
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(MULTR0_3));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_45
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(MULTR0_2));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_46
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(MULTR0_1));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_47
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(MULTR0_0));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_48
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(MULTR0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD893 ram_reg_0_15_0_0
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD894 ram_reg_0_15_10_10
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD895 ram_reg_0_15_11_11
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD896 ram_reg_0_15_12_12
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD897 ram_reg_0_15_13_13
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD898 ram_reg_0_15_14_14
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD899 ram_reg_0_15_15_15
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD900 ram_reg_0_15_1_1
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD901 ram_reg_0_15_2_2
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD902 ram_reg_0_15_3_3
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD903 ram_reg_0_15_4_4
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD904 ram_reg_0_15_5_5
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD905 ram_reg_0_15_6_6
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD906 ram_reg_0_15_7_7
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD907 ram_reg_0_15_8_8
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD908 ram_reg_0_15_9_9
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[0] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_8
   (MULTR0,
    data_out_10,
    MULTR0_0,
    MULTR0_1,
    MULTR0_2,
    MULTR0_3,
    MULTR0_4,
    MULTR0_5,
    MULTR0_6,
    MULTR0_7,
    MULTR0_8,
    MULTR0_9,
    MULTR0_10,
    MULTR0_11,
    MULTR0_12,
    MULTR0_13,
    MULTR0_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv3[1] ,
    wr_en,
    out,
    read);
  output MULTR0;
  output [15:0]data_out_10;
  output MULTR0_0;
  output MULTR0_1;
  output MULTR0_2;
  output MULTR0_3;
  output MULTR0_4;
  output MULTR0_5;
  output MULTR0_6;
  output MULTR0_7;
  output MULTR0_8;
  output MULTR0_9;
  output MULTR0_10;
  output MULTR0_11;
  output MULTR0_12;
  output MULTR0_13;
  output MULTR0_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv3[1] ;
  input wr_en;
  input [3:0]out;
  input [3:0]read;

  wire CLK_IBUF_BUFG;
  wire MULTR0;
  wire MULTR0_0;
  wire MULTR0_1;
  wire MULTR0_10;
  wire MULTR0_11;
  wire MULTR0_12;
  wire MULTR0_13;
  wire MULTR0_14;
  wire MULTR0_2;
  wire MULTR0_3;
  wire MULTR0_4;
  wire MULTR0_5;
  wire MULTR0_6;
  wire MULTR0_7;
  wire MULTR0_8;
  wire MULTR0_9;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire [3:0]out;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire [3:0]read;
  wire wr_en;
  wire [15:0]\wv3[1] ;

  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_33__0
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(MULTR0_14));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_34__0
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(MULTR0_13));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_35__0
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(MULTR0_12));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_36__0
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(MULTR0_11));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_37__0
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(MULTR0_10));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_38__0
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(MULTR0_9));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_39__0
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(MULTR0_8));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_40__0
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(MULTR0_7));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_41__0
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(MULTR0_6));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_42__0
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(MULTR0_5));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_43__0
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(MULTR0_4));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_44__0
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(MULTR0_3));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_45__0
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(MULTR0_2));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_46__0
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(MULTR0_1));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_47__0
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(MULTR0_0));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_48__0
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(MULTR0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD909 ram_reg_0_15_0_0
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD910 ram_reg_0_15_10_10
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD911 ram_reg_0_15_11_11
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD912 ram_reg_0_15_12_12
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD913 ram_reg_0_15_13_13
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD914 ram_reg_0_15_14_14
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD915 ram_reg_0_15_15_15
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD916 ram_reg_0_15_1_1
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD917 ram_reg_0_15_2_2
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD918 ram_reg_0_15_3_3
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD919 ram_reg_0_15_4_4
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD920 ram_reg_0_15_5_5
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD921 ram_reg_0_15_6_6
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD922 ram_reg_0_15_7_7
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD923 ram_reg_0_15_8_8
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD924 ram_reg_0_15_9_9
       (.A0(out[0]),
        .A1(out[1]),
        .A2(out[2]),
        .A3(out[3]),
        .A4(1'b0),
        .D(\wv3[1] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(read[0]),
        .DPRA1(read[1]),
        .DPRA2(read[2]),
        .DPRA3(read[3]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

(* ORIG_REF_NAME = "dual_port_ram" *) 
module dual_port_ram_9
   (MULTR0,
    data_out_10,
    MULTR0_0,
    MULTR0_1,
    MULTR0_2,
    MULTR0_3,
    MULTR0_4,
    MULTR0_5,
    MULTR0_6,
    MULTR0_7,
    MULTR0_8,
    MULTR0_9,
    MULTR0_10,
    MULTR0_11,
    MULTR0_12,
    MULTR0_13,
    MULTR0_14,
    cestat_OBUF,
    CLK_IBUF_BUFG,
    \wv3[2] ,
    wr_en,
    addr_in_0,
    \mul_count_reg[0]_rep ,
    addr_in_1,
    \mul_count_reg[2]_rep__0 );
  output MULTR0;
  output [15:0]data_out_10;
  output MULTR0_0;
  output MULTR0_1;
  output MULTR0_2;
  output MULTR0_3;
  output MULTR0_4;
  output MULTR0_5;
  output MULTR0_6;
  output MULTR0_7;
  output MULTR0_8;
  output MULTR0_9;
  output MULTR0_10;
  output MULTR0_11;
  output MULTR0_12;
  output MULTR0_13;
  output MULTR0_14;
  input cestat_OBUF;
  input CLK_IBUF_BUFG;
  input [15:0]\wv3[2] ;
  input wr_en;
  input [3:0]addr_in_0;
  input \mul_count_reg[0]_rep ;
  input [2:0]addr_in_1;
  input [0:0]\mul_count_reg[2]_rep__0 ;

  wire CLK_IBUF_BUFG;
  wire MULTR0;
  wire MULTR0_0;
  wire MULTR0_1;
  wire MULTR0_10;
  wire MULTR0_11;
  wire MULTR0_12;
  wire MULTR0_13;
  wire MULTR0_14;
  wire MULTR0_2;
  wire MULTR0_3;
  wire MULTR0_4;
  wire MULTR0_5;
  wire MULTR0_6;
  wire MULTR0_7;
  wire MULTR0_8;
  wire MULTR0_9;
  wire [3:0]addr_in_0;
  wire [2:0]addr_in_1;
  wire cestat_OBUF;
  wire [15:0]data_out_10;
  wire \mul_count_reg[0]_rep ;
  wire [0:0]\mul_count_reg[2]_rep__0 ;
  wire ram_reg_0_15_0_0_n_1;
  wire ram_reg_0_15_10_10_n_1;
  wire ram_reg_0_15_11_11_n_1;
  wire ram_reg_0_15_12_12_n_1;
  wire ram_reg_0_15_13_13_n_1;
  wire ram_reg_0_15_14_14_n_1;
  wire ram_reg_0_15_15_15_n_1;
  wire ram_reg_0_15_1_1_n_1;
  wire ram_reg_0_15_2_2_n_1;
  wire ram_reg_0_15_3_3_n_1;
  wire ram_reg_0_15_4_4_n_1;
  wire ram_reg_0_15_5_5_n_1;
  wire ram_reg_0_15_6_6_n_1;
  wire ram_reg_0_15_7_7_n_1;
  wire ram_reg_0_15_8_8_n_1;
  wire ram_reg_0_15_9_9_n_1;
  wire wr_en;
  wire [15:0]\wv3[2] ;

  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_33__1
       (.I0(data_out_10[15]),
        .I1(cestat_OBUF),
        .O(MULTR0_14));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_34__1
       (.I0(data_out_10[14]),
        .I1(cestat_OBUF),
        .O(MULTR0_13));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_35__1
       (.I0(data_out_10[13]),
        .I1(cestat_OBUF),
        .O(MULTR0_12));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_36__1
       (.I0(data_out_10[12]),
        .I1(cestat_OBUF),
        .O(MULTR0_11));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_37__1
       (.I0(data_out_10[11]),
        .I1(cestat_OBUF),
        .O(MULTR0_10));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_38__1
       (.I0(data_out_10[10]),
        .I1(cestat_OBUF),
        .O(MULTR0_9));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_39__1
       (.I0(data_out_10[9]),
        .I1(cestat_OBUF),
        .O(MULTR0_8));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_40__1
       (.I0(data_out_10[8]),
        .I1(cestat_OBUF),
        .O(MULTR0_7));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_41__1
       (.I0(data_out_10[7]),
        .I1(cestat_OBUF),
        .O(MULTR0_6));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_42__1
       (.I0(data_out_10[6]),
        .I1(cestat_OBUF),
        .O(MULTR0_5));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_43__1
       (.I0(data_out_10[5]),
        .I1(cestat_OBUF),
        .O(MULTR0_4));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_44__1
       (.I0(data_out_10[4]),
        .I1(cestat_OBUF),
        .O(MULTR0_3));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_45__1
       (.I0(data_out_10[3]),
        .I1(cestat_OBUF),
        .O(MULTR0_2));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_46__1
       (.I0(data_out_10[2]),
        .I1(cestat_OBUF),
        .O(MULTR0_1));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_47__1
       (.I0(data_out_10[1]),
        .I1(cestat_OBUF),
        .O(MULTR0_0));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h8)) 
    MULTR0_i_48__1
       (.I0(data_out_10[0]),
        .I1(cestat_OBUF),
        .O(MULTR0));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD925 ram_reg_0_15_0_0
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [0]),
        .DPO(data_out_10[0]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_0_0_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD926 ram_reg_0_15_10_10
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [10]),
        .DPO(data_out_10[10]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_10_10_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD927 ram_reg_0_15_11_11
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [11]),
        .DPO(data_out_10[11]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_11_11_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD928 ram_reg_0_15_12_12
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [12]),
        .DPO(data_out_10[12]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_12_12_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD929 ram_reg_0_15_13_13
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [13]),
        .DPO(data_out_10[13]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_13_13_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD930 ram_reg_0_15_14_14
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [14]),
        .DPO(data_out_10[14]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_14_14_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD931 ram_reg_0_15_15_15
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [15]),
        .DPO(data_out_10[15]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(addr_in_1[1]),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_15_15_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD932 ram_reg_0_15_1_1
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [1]),
        .DPO(data_out_10[1]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_1_1_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD933 ram_reg_0_15_2_2
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [2]),
        .DPO(data_out_10[2]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_2_2_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD934 ram_reg_0_15_3_3
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [3]),
        .DPO(data_out_10[3]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_3_3_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD935 ram_reg_0_15_4_4
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [4]),
        .DPO(data_out_10[4]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_4_4_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD936 ram_reg_0_15_5_5
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [5]),
        .DPO(data_out_10[5]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_5_5_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD937 ram_reg_0_15_6_6
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [6]),
        .DPO(data_out_10[6]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_6_6_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD938 ram_reg_0_15_7_7
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [7]),
        .DPO(data_out_10[7]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_7_7_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD939 ram_reg_0_15_8_8
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [8]),
        .DPO(data_out_10[8]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_8_8_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
  (* INIT = "32'h00000000" *) 
  (* XILINX_LEGACY_PRIM = "RAM16X1D" *) 
  RAM32X1D_HD940 ram_reg_0_15_9_9
       (.A0(addr_in_0[0]),
        .A1(addr_in_0[1]),
        .A2(addr_in_0[2]),
        .A3(addr_in_0[3]),
        .A4(1'b0),
        .D(\wv3[2] [9]),
        .DPO(data_out_10[9]),
        .DPRA0(\mul_count_reg[0]_rep ),
        .DPRA1(addr_in_1[0]),
        .DPRA2(\mul_count_reg[2]_rep__0 ),
        .DPRA3(addr_in_1[2]),
        .DPRA4(1'b0),
        .SPO(ram_reg_0_15_9_9_n_1),
        .WCLK(CLK_IBUF_BUFG),
        .WE(wr_en));
endmodule

module mm_unit
   (P,
    \S4[1][32] ,
    \S4[2][32] ,
    \S4[3][32] ,
    done_OBUF,
    CLK_IBUF_BUFG,
    RST_IBUF,
    B,
    \write_count_reg[0] ,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_0 ,
    cestat_OBUF,
    state_OBUF,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 );
  output [32:0]P;
  output [32:0]\S4[1][32] ;
  output [32:0]\S4[2][32] ;
  output [32:0]\S4[3][32] ;
  output done_OBUF;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [15:0]B;
  input [15:0]\write_count_reg[0] ;
  input [15:0]\write_count_reg[0]_rep ;
  input [15:0]\write_count_reg[0]_0 ;
  input cestat_OBUF;
  input [1:0]state_OBUF;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;

  wire [15:0]A_signal;
  wire [15:0]B;
  wire CLK_IBUF_BUFG;
  wire [32:0]P;
  wire RST_IBUF;
  wire [32:0]\S4[1][32] ;
  wire [32:0]\S4[2][32] ;
  wire [32:0]\S4[3][32] ;
  wire cestat_OBUF;
  wire common_enable;
  wire common_enable_i_1_n_0;
  wire done_OBUF;
  wire done_signal;
  wire done_signal_i_1_n_0;
  wire loop_counter;
  wire \loop_counter[0]_i_1_n_0 ;
  wire \loop_counter[1]_i_1__2_n_0 ;
  wire \loop_counter[2]_i_1_n_0 ;
  wire \loop_counter[3]_i_2__2_n_0 ;
  wire \loop_counter_reg_n_0_[0] ;
  wire \loop_counter_reg_n_0_[1] ;
  wire \loop_counter_reg_n_0_[2] ;
  wire \loop_counter_reg_n_0_[3] ;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]state_OBUF;
  wire [15:0]\write_count_reg[0] ;
  wire [15:0]\write_count_reg[0]_0 ;
  wire [15:0]\write_count_reg[0]_rep ;

  LUT2 #(
    .INIT(4'h4)) 
    common_enable_i_1
       (.I0(done_signal),
        .I1(common_enable),
        .O(common_enable_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    common_enable_reg
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(common_enable_i_1_n_0),
        .Q(common_enable),
        .S(RST_IBUF));
  LUT2 #(
    .INIT(4'hE)) 
    done_signal_i_1
       (.I0(done_signal),
        .I1(done_OBUF),
        .O(done_signal_i_1_n_0));
  FDRE #(
    .INIT(1'b0)) 
    done_signal_reg
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(done_signal_i_1_n_0),
        .Q(done_OBUF),
        .R(RST_IBUF));
  simple_multiplier_26 \generate_mac_units[0].mul0 
       (.A(A_signal),
        .B(B),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .P(P),
        .RST_IBUF(RST_IBUF),
        .common_enable(common_enable));
  simple_multiplier_27 \generate_mac_units[1].mul0 
       (.A(A_signal),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\S4[1][32] (\S4[1][32] ),
        .common_enable(common_enable),
        .\write_count_reg[0] (\write_count_reg[0] ));
  simple_multiplier_28 \generate_mac_units[2].mul0 
       (.A(A_signal),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\S4[2][32] (\S4[2][32] ),
        .common_enable(common_enable),
        .\write_count_reg[0]_rep (\write_count_reg[0]_rep ));
  simple_multiplier_29 \generate_mac_units[3].mul0 
       (.A(A_signal),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .Q(\loop_counter_reg_n_0_[3] ),
        .RST_IBUF(RST_IBUF),
        .\S4[3][32] (\S4[3][32] ),
        .common_enable(common_enable),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0 ),
        .\mul_count_reg[2]_rep__0_0 (\mul_count_reg[2]_rep__0_0 ),
        .\mul_count_reg[2]_rep__0_1 (\mul_count_reg[2]_rep__0_1 ),
        .\mul_count_reg[2]_rep__0_10 (\mul_count_reg[2]_rep__0_10 ),
        .\mul_count_reg[2]_rep__0_11 (\mul_count_reg[2]_rep__0_11 ),
        .\mul_count_reg[2]_rep__0_12 (\mul_count_reg[2]_rep__0_12 ),
        .\mul_count_reg[2]_rep__0_13 (\mul_count_reg[2]_rep__0_13 ),
        .\mul_count_reg[2]_rep__0_14 (\mul_count_reg[2]_rep__0_14 ),
        .\mul_count_reg[2]_rep__0_2 (\mul_count_reg[2]_rep__0_2 ),
        .\mul_count_reg[2]_rep__0_3 (\mul_count_reg[2]_rep__0_3 ),
        .\mul_count_reg[2]_rep__0_4 (\mul_count_reg[2]_rep__0_4 ),
        .\mul_count_reg[2]_rep__0_5 (\mul_count_reg[2]_rep__0_5 ),
        .\mul_count_reg[2]_rep__0_6 (\mul_count_reg[2]_rep__0_6 ),
        .\mul_count_reg[2]_rep__0_7 (\mul_count_reg[2]_rep__0_7 ),
        .\mul_count_reg[2]_rep__0_8 (\mul_count_reg[2]_rep__0_8 ),
        .\mul_count_reg[2]_rep__0_9 (\mul_count_reg[2]_rep__0_9 ),
        .\write_count_reg[0] (\write_count_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT4 #(
    .INIT(16'h00BF)) 
    \loop_counter[0]_i_1 
       (.I0(\loop_counter_reg_n_0_[2] ),
        .I1(\loop_counter_reg_n_0_[1] ),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[0] ),
        .O(\loop_counter[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT4 #(
    .INIT(16'h0FB0)) 
    \loop_counter[1]_i_1__2 
       (.I0(\loop_counter_reg_n_0_[2] ),
        .I1(\loop_counter_reg_n_0_[3] ),
        .I2(\loop_counter_reg_n_0_[1] ),
        .I3(\loop_counter_reg_n_0_[0] ),
        .O(\loop_counter[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \loop_counter[2]_i_1 
       (.I0(\loop_counter_reg_n_0_[2] ),
        .I1(\loop_counter_reg_n_0_[1] ),
        .I2(\loop_counter_reg_n_0_[0] ),
        .O(\loop_counter[2]_i_1_n_0 ));
  LUT3 #(
    .INIT(8'hB8)) 
    \loop_counter[3]_i_1 
       (.I0(done_signal),
        .I1(done_OBUF),
        .I2(cestat_OBUF),
        .O(loop_counter));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT4 #(
    .INIT(16'h6AA2)) 
    \loop_counter[3]_i_2__2 
       (.I0(\loop_counter_reg_n_0_[3] ),
        .I1(\loop_counter_reg_n_0_[1] ),
        .I2(\loop_counter_reg_n_0_[0] ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .O(\loop_counter[3]_i_2__2_n_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \loop_counter[3]_i_3 
       (.I0(state_OBUF[0]),
        .I1(\loop_counter_reg_n_0_[2] ),
        .I2(\loop_counter_reg_n_0_[1] ),
        .I3(\loop_counter_reg_n_0_[0] ),
        .I4(\loop_counter_reg_n_0_[3] ),
        .I5(state_OBUF[1]),
        .O(done_signal));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(loop_counter),
        .D(\loop_counter[0]_i_1_n_0 ),
        .Q(\loop_counter_reg_n_0_[0] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(loop_counter),
        .D(\loop_counter[1]_i_1__2_n_0 ),
        .Q(\loop_counter_reg_n_0_[1] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(loop_counter),
        .D(\loop_counter[2]_i_1_n_0 ),
        .Q(\loop_counter_reg_n_0_[2] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(loop_counter),
        .D(\loop_counter[3]_i_2__2_n_0 ),
        .Q(\loop_counter_reg_n_0_[3] ),
        .R(RST_IBUF));
endmodule

module mma_unit
   (cestat_OBUF,
    Q,
    \ACC_reg[32] ,
    \ACC_reg[32]_0 ,
    \ACC_reg[32]_1 ,
    CLK_IBUF_BUFG,
    RST_IBUF,
    state_OBUF,
    P,
    \mul_count_reg[2]_rep__0 ,
    ACC_reg,
    ACC_reg_0,
    ACC_reg_1,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    ACC_reg_2,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_rep_0 ,
    \write_count_reg[0]_rep_1 ,
    \write_count_reg[0]_rep_2 ,
    \write_count_reg[0]_rep_3 ,
    \write_count_reg[0]_rep_4 ,
    \write_count_reg[0]_rep_5 ,
    \write_count_reg[0]_rep_6 ,
    \write_count_reg[0]_rep_7 ,
    \write_count_reg[0]_rep_8 ,
    \write_count_reg[0]_rep_9 ,
    \write_count_reg[0]_rep_10 ,
    \write_count_reg[0]_rep_11 ,
    \write_count_reg[0]_rep_12 ,
    \write_count_reg[0]_rep_13 ,
    \write_count_reg[0]_rep_14 ,
    ACC_reg_3,
    \write_count_reg[0] ,
    \write_count_reg[0]_0 ,
    \write_count_reg[0]_1 ,
    \write_count_reg[0]_2 ,
    \write_count_reg[0]_3 ,
    \write_count_reg[0]_4 ,
    \write_count_reg[0]_5 ,
    \write_count_reg[0]_6 ,
    \write_count_reg[0]_7 ,
    \write_count_reg[0]_8 ,
    \write_count_reg[0]_9 ,
    \write_count_reg[0]_10 ,
    \write_count_reg[0]_11 ,
    \write_count_reg[0]_12 ,
    \write_count_reg[0]_13 ,
    \write_count_reg[0]_14 ,
    ACC_reg_4,
    \write_count_reg[0]_rep_15 ,
    \write_count_reg[0]_rep_16 ,
    \write_count_reg[0]_rep_17 ,
    \write_count_reg[0]_rep_18 ,
    \write_count_reg[0]_rep_19 ,
    \write_count_reg[0]_rep_20 ,
    \write_count_reg[0]_rep_21 ,
    \write_count_reg[0]_rep_22 ,
    \write_count_reg[0]_rep_23 ,
    \write_count_reg[0]_rep_24 ,
    \write_count_reg[0]_rep_25 ,
    \write_count_reg[0]_rep_26 ,
    \write_count_reg[0]_rep_27 ,
    \write_count_reg[0]_rep_28 ,
    \write_count_reg[0]_rep_29 ,
    \write_count_reg[0]_rep_30 ,
    ACC_reg_5,
    \write_count_reg[0]_15 ,
    \write_count_reg[0]_16 ,
    \write_count_reg[0]_17 ,
    \write_count_reg[0]_18 ,
    \write_count_reg[0]_19 ,
    \write_count_reg[0]_20 ,
    \write_count_reg[0]_21 ,
    \write_count_reg[0]_22 ,
    \write_count_reg[0]_23 ,
    \write_count_reg[0]_24 ,
    \write_count_reg[0]_25 ,
    \write_count_reg[0]_26 ,
    \write_count_reg[0]_27 ,
    \write_count_reg[0]_28 ,
    \write_count_reg[0]_29 ,
    \write_count_reg[0]_30 );
  output cestat_OBUF;
  output [32:0]Q;
  output [32:0]\ACC_reg[32] ;
  output [32:0]\ACC_reg[32]_0 ;
  output [32:0]\ACC_reg[32]_1 ;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]state_OBUF;
  input [15:0]P;
  input \mul_count_reg[2]_rep__0 ;
  input [15:0]ACC_reg;
  input [15:0]ACC_reg_0;
  input [15:0]ACC_reg_1;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]ACC_reg_2;
  input \write_count_reg[0]_rep ;
  input \write_count_reg[0]_rep_0 ;
  input \write_count_reg[0]_rep_1 ;
  input \write_count_reg[0]_rep_2 ;
  input \write_count_reg[0]_rep_3 ;
  input \write_count_reg[0]_rep_4 ;
  input \write_count_reg[0]_rep_5 ;
  input \write_count_reg[0]_rep_6 ;
  input \write_count_reg[0]_rep_7 ;
  input \write_count_reg[0]_rep_8 ;
  input \write_count_reg[0]_rep_9 ;
  input \write_count_reg[0]_rep_10 ;
  input \write_count_reg[0]_rep_11 ;
  input \write_count_reg[0]_rep_12 ;
  input \write_count_reg[0]_rep_13 ;
  input \write_count_reg[0]_rep_14 ;
  input [15:0]ACC_reg_3;
  input \write_count_reg[0] ;
  input \write_count_reg[0]_0 ;
  input \write_count_reg[0]_1 ;
  input \write_count_reg[0]_2 ;
  input \write_count_reg[0]_3 ;
  input \write_count_reg[0]_4 ;
  input \write_count_reg[0]_5 ;
  input \write_count_reg[0]_6 ;
  input \write_count_reg[0]_7 ;
  input \write_count_reg[0]_8 ;
  input \write_count_reg[0]_9 ;
  input \write_count_reg[0]_10 ;
  input \write_count_reg[0]_11 ;
  input \write_count_reg[0]_12 ;
  input \write_count_reg[0]_13 ;
  input \write_count_reg[0]_14 ;
  input [15:0]ACC_reg_4;
  input \write_count_reg[0]_rep_15 ;
  input \write_count_reg[0]_rep_16 ;
  input \write_count_reg[0]_rep_17 ;
  input \write_count_reg[0]_rep_18 ;
  input \write_count_reg[0]_rep_19 ;
  input \write_count_reg[0]_rep_20 ;
  input \write_count_reg[0]_rep_21 ;
  input \write_count_reg[0]_rep_22 ;
  input \write_count_reg[0]_rep_23 ;
  input \write_count_reg[0]_rep_24 ;
  input \write_count_reg[0]_rep_25 ;
  input \write_count_reg[0]_rep_26 ;
  input \write_count_reg[0]_rep_27 ;
  input \write_count_reg[0]_rep_28 ;
  input \write_count_reg[0]_rep_29 ;
  input \write_count_reg[0]_rep_30 ;
  input [15:0]ACC_reg_5;
  input \write_count_reg[0]_15 ;
  input \write_count_reg[0]_16 ;
  input \write_count_reg[0]_17 ;
  input \write_count_reg[0]_18 ;
  input \write_count_reg[0]_19 ;
  input \write_count_reg[0]_20 ;
  input \write_count_reg[0]_21 ;
  input \write_count_reg[0]_22 ;
  input \write_count_reg[0]_23 ;
  input \write_count_reg[0]_24 ;
  input \write_count_reg[0]_25 ;
  input \write_count_reg[0]_26 ;
  input \write_count_reg[0]_27 ;
  input \write_count_reg[0]_28 ;
  input \write_count_reg[0]_29 ;
  input \write_count_reg[0]_30 ;

  wire [15:0]ACC_reg;
  wire [32:0]\ACC_reg[32] ;
  wire [32:0]\ACC_reg[32]_0 ;
  wire [32:0]\ACC_reg[32]_1 ;
  wire [15:0]ACC_reg_0;
  wire [15:0]ACC_reg_1;
  wire [15:0]ACC_reg_2;
  wire [15:0]ACC_reg_3;
  wire [15:0]ACC_reg_4;
  wire [15:0]ACC_reg_5;
  wire CE_common_i_1__1_n_0;
  wire CE_common_reg_n_0;
  wire CLK_IBUF_BUFG;
  wire \FSM_sequential_present_state[0]_i_1__1_n_0 ;
  wire \FSM_sequential_present_state[1]_i_1__1_n_0 ;
  wire \FSM_sequential_present_state[1]_i_2__1_n_0 ;
  wire \FSM_sequential_present_state[1]_i_3__1_n_0 ;
  wire \FSM_sequential_present_state[1]_i_4__1_n_0 ;
  wire [15:0]P;
  wire [32:0]Q;
  wire RST_IBUF;
  wire cestat_OBUF;
  wire [3:0]loop_counter;
  wire \loop_counter[3]_i_1__2_n_0 ;
  wire \loop_counter_reg_n_0_[0] ;
  wire \loop_counter_reg_n_0_[1] ;
  wire \loop_counter_reg_n_0_[2] ;
  wire \loop_counter_reg_n_0_[3] ;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  (* RTL_KEEP = "yes" *) wire [1:0]present_state__0;
  wire [1:0]state_OBUF;
  wire \write_count_reg[0] ;
  wire \write_count_reg[0]_0 ;
  wire \write_count_reg[0]_1 ;
  wire \write_count_reg[0]_10 ;
  wire \write_count_reg[0]_11 ;
  wire \write_count_reg[0]_12 ;
  wire \write_count_reg[0]_13 ;
  wire \write_count_reg[0]_14 ;
  wire \write_count_reg[0]_15 ;
  wire \write_count_reg[0]_16 ;
  wire \write_count_reg[0]_17 ;
  wire \write_count_reg[0]_18 ;
  wire \write_count_reg[0]_19 ;
  wire \write_count_reg[0]_2 ;
  wire \write_count_reg[0]_20 ;
  wire \write_count_reg[0]_21 ;
  wire \write_count_reg[0]_22 ;
  wire \write_count_reg[0]_23 ;
  wire \write_count_reg[0]_24 ;
  wire \write_count_reg[0]_25 ;
  wire \write_count_reg[0]_26 ;
  wire \write_count_reg[0]_27 ;
  wire \write_count_reg[0]_28 ;
  wire \write_count_reg[0]_29 ;
  wire \write_count_reg[0]_3 ;
  wire \write_count_reg[0]_30 ;
  wire \write_count_reg[0]_4 ;
  wire \write_count_reg[0]_5 ;
  wire \write_count_reg[0]_6 ;
  wire \write_count_reg[0]_7 ;
  wire \write_count_reg[0]_8 ;
  wire \write_count_reg[0]_9 ;
  wire \write_count_reg[0]_rep ;
  wire \write_count_reg[0]_rep_0 ;
  wire \write_count_reg[0]_rep_1 ;
  wire \write_count_reg[0]_rep_10 ;
  wire \write_count_reg[0]_rep_11 ;
  wire \write_count_reg[0]_rep_12 ;
  wire \write_count_reg[0]_rep_13 ;
  wire \write_count_reg[0]_rep_14 ;
  wire \write_count_reg[0]_rep_15 ;
  wire \write_count_reg[0]_rep_16 ;
  wire \write_count_reg[0]_rep_17 ;
  wire \write_count_reg[0]_rep_18 ;
  wire \write_count_reg[0]_rep_19 ;
  wire \write_count_reg[0]_rep_2 ;
  wire \write_count_reg[0]_rep_20 ;
  wire \write_count_reg[0]_rep_21 ;
  wire \write_count_reg[0]_rep_22 ;
  wire \write_count_reg[0]_rep_23 ;
  wire \write_count_reg[0]_rep_24 ;
  wire \write_count_reg[0]_rep_25 ;
  wire \write_count_reg[0]_rep_26 ;
  wire \write_count_reg[0]_rep_27 ;
  wire \write_count_reg[0]_rep_28 ;
  wire \write_count_reg[0]_rep_29 ;
  wire \write_count_reg[0]_rep_3 ;
  wire \write_count_reg[0]_rep_30 ;
  wire \write_count_reg[0]_rep_4 ;
  wire \write_count_reg[0]_rep_5 ;
  wire \write_count_reg[0]_rep_6 ;
  wire \write_count_reg[0]_rep_7 ;
  wire \write_count_reg[0]_rep_8 ;
  wire \write_count_reg[0]_rep_9 ;

  LUT5 #(
    .INIT(32'h002AAA2A)) 
    CE_common_i_1__1
       (.I0(CE_common_reg_n_0),
        .I1(present_state__0[0]),
        .I2(\FSM_sequential_present_state[1]_i_3__1_n_0 ),
        .I3(present_state__0[1]),
        .I4(\FSM_sequential_present_state[1]_i_2__1_n_0 ),
        .O(CE_common_i_1__1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    CE_common_reg
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(CE_common_i_1__1_n_0),
        .Q(CE_common_reg_n_0),
        .S(RST_IBUF));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \FSM_sequential_present_state[0]_i_1__1 
       (.I0(cestat_OBUF),
        .I1(present_state__0[0]),
        .I2(\FSM_sequential_present_state[1]_i_3__1_n_0 ),
        .I3(present_state__0[1]),
        .I4(\FSM_sequential_present_state[1]_i_2__1_n_0 ),
        .I5(present_state__0[0]),
        .O(\FSM_sequential_present_state[0]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'hFFCCFFFFB888B888)) 
    \FSM_sequential_present_state[1]_i_1__1 
       (.I0(\FSM_sequential_present_state[1]_i_2__1_n_0 ),
        .I1(present_state__0[1]),
        .I2(\FSM_sequential_present_state[1]_i_3__1_n_0 ),
        .I3(present_state__0[0]),
        .I4(cestat_OBUF),
        .I5(present_state__0[1]),
        .O(\FSM_sequential_present_state[1]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \FSM_sequential_present_state[1]_i_2__1 
       (.I0(state_OBUF[1]),
        .I1(\loop_counter_reg_n_0_[3] ),
        .I2(\FSM_sequential_present_state[1]_i_4__1_n_0 ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .I4(state_OBUF[0]),
        .I5(present_state__0[0]),
        .O(\FSM_sequential_present_state[1]_i_2__1_n_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \FSM_sequential_present_state[1]_i_3__1 
       (.I0(state_OBUF[0]),
        .I1(\loop_counter_reg_n_0_[2] ),
        .I2(\loop_counter_reg_n_0_[0] ),
        .I3(\loop_counter_reg_n_0_[1] ),
        .I4(\loop_counter_reg_n_0_[3] ),
        .I5(state_OBUF[1]),
        .O(\FSM_sequential_present_state[1]_i_3__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_present_state[1]_i_4__1 
       (.I0(\loop_counter_reg_n_0_[1] ),
        .I1(\loop_counter_reg_n_0_[0] ),
        .O(\FSM_sequential_present_state[1]_i_4__1_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:11,iSTATE0:00,iSTATE1:10,iSTATE2:01" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_present_state_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(\FSM_sequential_present_state[0]_i_1__1_n_0 ),
        .Q(present_state__0[0]),
        .R(RST_IBUF));
  (* FSM_ENCODED_STATES = "iSTATE:11,iSTATE0:00,iSTATE1:10,iSTATE2:01" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_present_state_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(\FSM_sequential_present_state[1]_i_1__1_n_0 ),
        .Q(present_state__0[1]),
        .R(RST_IBUF));
  multiplier_with_adder \generate_mac_units[0].mul0 
       (.ACC_reg(ACC_reg_1),
        .ACC_reg_0(ACC_reg_2),
        .CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .Q(Q),
        .RST_IBUF(RST_IBUF),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0 ),
        .\mul_count_reg[2]_rep__0_0 (\mul_count_reg[2]_rep__0_0 ),
        .\mul_count_reg[2]_rep__0_1 (\mul_count_reg[2]_rep__0_1 ),
        .\mul_count_reg[2]_rep__0_10 (\mul_count_reg[2]_rep__0_10 ),
        .\mul_count_reg[2]_rep__0_11 (\mul_count_reg[2]_rep__0_11 ),
        .\mul_count_reg[2]_rep__0_12 (\mul_count_reg[2]_rep__0_12 ),
        .\mul_count_reg[2]_rep__0_13 (\mul_count_reg[2]_rep__0_13 ),
        .\mul_count_reg[2]_rep__0_14 (\mul_count_reg[2]_rep__0_14 ),
        .\mul_count_reg[2]_rep__0_2 (\mul_count_reg[2]_rep__0_2 ),
        .\mul_count_reg[2]_rep__0_3 (\mul_count_reg[2]_rep__0_3 ),
        .\mul_count_reg[2]_rep__0_4 (\mul_count_reg[2]_rep__0_4 ),
        .\mul_count_reg[2]_rep__0_5 (\mul_count_reg[2]_rep__0_5 ),
        .\mul_count_reg[2]_rep__0_6 (\mul_count_reg[2]_rep__0_6 ),
        .\mul_count_reg[2]_rep__0_7 (\mul_count_reg[2]_rep__0_7 ),
        .\mul_count_reg[2]_rep__0_8 (\mul_count_reg[2]_rep__0_8 ),
        .\mul_count_reg[2]_rep__0_9 (\mul_count_reg[2]_rep__0_9 ),
        .out(present_state__0),
        .\write_count_reg[0]_rep (\write_count_reg[0]_rep ),
        .\write_count_reg[0]_rep_0 (\write_count_reg[0]_rep_0 ),
        .\write_count_reg[0]_rep_1 (\write_count_reg[0]_rep_1 ),
        .\write_count_reg[0]_rep_10 (\write_count_reg[0]_rep_10 ),
        .\write_count_reg[0]_rep_11 (\write_count_reg[0]_rep_11 ),
        .\write_count_reg[0]_rep_12 (\write_count_reg[0]_rep_12 ),
        .\write_count_reg[0]_rep_13 (\write_count_reg[0]_rep_13 ),
        .\write_count_reg[0]_rep_14 (\write_count_reg[0]_rep_14 ),
        .\write_count_reg[0]_rep_2 (\write_count_reg[0]_rep_2 ),
        .\write_count_reg[0]_rep_3 (\write_count_reg[0]_rep_3 ),
        .\write_count_reg[0]_rep_4 (\write_count_reg[0]_rep_4 ),
        .\write_count_reg[0]_rep_5 (\write_count_reg[0]_rep_5 ),
        .\write_count_reg[0]_rep_6 (\write_count_reg[0]_rep_6 ),
        .\write_count_reg[0]_rep_7 (\write_count_reg[0]_rep_7 ),
        .\write_count_reg[0]_rep_8 (\write_count_reg[0]_rep_8 ),
        .\write_count_reg[0]_rep_9 (\write_count_reg[0]_rep_9 ));
  multiplier_with_adder_23 \generate_mac_units[1].mul0 
       (.ACC_reg(ACC_reg_0),
        .\ACC_reg[32]_0 (\ACC_reg[32] ),
        .ACC_reg_0(ACC_reg_3),
        .CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0 ),
        .\mul_count_reg[2]_rep__0_0 (\mul_count_reg[2]_rep__0_0 ),
        .\mul_count_reg[2]_rep__0_1 (\mul_count_reg[2]_rep__0_1 ),
        .\mul_count_reg[2]_rep__0_10 (\mul_count_reg[2]_rep__0_10 ),
        .\mul_count_reg[2]_rep__0_11 (\mul_count_reg[2]_rep__0_11 ),
        .\mul_count_reg[2]_rep__0_12 (\mul_count_reg[2]_rep__0_12 ),
        .\mul_count_reg[2]_rep__0_13 (\mul_count_reg[2]_rep__0_13 ),
        .\mul_count_reg[2]_rep__0_14 (\mul_count_reg[2]_rep__0_14 ),
        .\mul_count_reg[2]_rep__0_2 (\mul_count_reg[2]_rep__0_2 ),
        .\mul_count_reg[2]_rep__0_3 (\mul_count_reg[2]_rep__0_3 ),
        .\mul_count_reg[2]_rep__0_4 (\mul_count_reg[2]_rep__0_4 ),
        .\mul_count_reg[2]_rep__0_5 (\mul_count_reg[2]_rep__0_5 ),
        .\mul_count_reg[2]_rep__0_6 (\mul_count_reg[2]_rep__0_6 ),
        .\mul_count_reg[2]_rep__0_7 (\mul_count_reg[2]_rep__0_7 ),
        .\mul_count_reg[2]_rep__0_8 (\mul_count_reg[2]_rep__0_8 ),
        .\mul_count_reg[2]_rep__0_9 (\mul_count_reg[2]_rep__0_9 ),
        .out(present_state__0),
        .\write_count_reg[0] (\write_count_reg[0] ),
        .\write_count_reg[0]_0 (\write_count_reg[0]_0 ),
        .\write_count_reg[0]_1 (\write_count_reg[0]_1 ),
        .\write_count_reg[0]_10 (\write_count_reg[0]_10 ),
        .\write_count_reg[0]_11 (\write_count_reg[0]_11 ),
        .\write_count_reg[0]_12 (\write_count_reg[0]_12 ),
        .\write_count_reg[0]_13 (\write_count_reg[0]_13 ),
        .\write_count_reg[0]_14 (\write_count_reg[0]_14 ),
        .\write_count_reg[0]_2 (\write_count_reg[0]_2 ),
        .\write_count_reg[0]_3 (\write_count_reg[0]_3 ),
        .\write_count_reg[0]_4 (\write_count_reg[0]_4 ),
        .\write_count_reg[0]_5 (\write_count_reg[0]_5 ),
        .\write_count_reg[0]_6 (\write_count_reg[0]_6 ),
        .\write_count_reg[0]_7 (\write_count_reg[0]_7 ),
        .\write_count_reg[0]_8 (\write_count_reg[0]_8 ),
        .\write_count_reg[0]_9 (\write_count_reg[0]_9 ));
  multiplier_with_adder_24 \generate_mac_units[2].mul0 
       (.ACC_reg(ACC_reg),
        .\ACC_reg[32]_0 (\ACC_reg[32]_0 ),
        .ACC_reg_0(ACC_reg_4),
        .CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0 ),
        .\mul_count_reg[2]_rep__0_0 (\mul_count_reg[2]_rep__0_0 ),
        .\mul_count_reg[2]_rep__0_1 (\mul_count_reg[2]_rep__0_1 ),
        .\mul_count_reg[2]_rep__0_10 (\mul_count_reg[2]_rep__0_10 ),
        .\mul_count_reg[2]_rep__0_11 (\mul_count_reg[2]_rep__0_11 ),
        .\mul_count_reg[2]_rep__0_12 (\mul_count_reg[2]_rep__0_12 ),
        .\mul_count_reg[2]_rep__0_13 (\mul_count_reg[2]_rep__0_13 ),
        .\mul_count_reg[2]_rep__0_14 (\mul_count_reg[2]_rep__0_14 ),
        .\mul_count_reg[2]_rep__0_2 (\mul_count_reg[2]_rep__0_2 ),
        .\mul_count_reg[2]_rep__0_3 (\mul_count_reg[2]_rep__0_3 ),
        .\mul_count_reg[2]_rep__0_4 (\mul_count_reg[2]_rep__0_4 ),
        .\mul_count_reg[2]_rep__0_5 (\mul_count_reg[2]_rep__0_5 ),
        .\mul_count_reg[2]_rep__0_6 (\mul_count_reg[2]_rep__0_6 ),
        .\mul_count_reg[2]_rep__0_7 (\mul_count_reg[2]_rep__0_7 ),
        .\mul_count_reg[2]_rep__0_8 (\mul_count_reg[2]_rep__0_8 ),
        .\mul_count_reg[2]_rep__0_9 (\mul_count_reg[2]_rep__0_9 ),
        .out(present_state__0),
        .\write_count_reg[0]_rep (\write_count_reg[0]_rep_15 ),
        .\write_count_reg[0]_rep_0 (\write_count_reg[0]_rep_16 ),
        .\write_count_reg[0]_rep_1 (\write_count_reg[0]_rep_17 ),
        .\write_count_reg[0]_rep_10 (\write_count_reg[0]_rep_26 ),
        .\write_count_reg[0]_rep_11 (\write_count_reg[0]_rep_27 ),
        .\write_count_reg[0]_rep_12 (\write_count_reg[0]_rep_28 ),
        .\write_count_reg[0]_rep_13 (\write_count_reg[0]_rep_29 ),
        .\write_count_reg[0]_rep_14 (\write_count_reg[0]_rep_30 ),
        .\write_count_reg[0]_rep_2 (\write_count_reg[0]_rep_18 ),
        .\write_count_reg[0]_rep_3 (\write_count_reg[0]_rep_19 ),
        .\write_count_reg[0]_rep_4 (\write_count_reg[0]_rep_20 ),
        .\write_count_reg[0]_rep_5 (\write_count_reg[0]_rep_21 ),
        .\write_count_reg[0]_rep_6 (\write_count_reg[0]_rep_22 ),
        .\write_count_reg[0]_rep_7 (\write_count_reg[0]_rep_23 ),
        .\write_count_reg[0]_rep_8 (\write_count_reg[0]_rep_24 ),
        .\write_count_reg[0]_rep_9 (\write_count_reg[0]_rep_25 ));
  multiplier_with_adder_25 \generate_mac_units[3].mul0 
       (.ACC_reg(ACC_reg_5),
        .\ACC_reg[32]_0 (\ACC_reg[32]_1 ),
        .CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .P(P),
        .RST_IBUF(RST_IBUF),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0 ),
        .\mul_count_reg[2]_rep__0_0 (\mul_count_reg[2]_rep__0_0 ),
        .\mul_count_reg[2]_rep__0_1 (\mul_count_reg[2]_rep__0_1 ),
        .\mul_count_reg[2]_rep__0_10 (\mul_count_reg[2]_rep__0_10 ),
        .\mul_count_reg[2]_rep__0_11 (\mul_count_reg[2]_rep__0_11 ),
        .\mul_count_reg[2]_rep__0_12 (\mul_count_reg[2]_rep__0_12 ),
        .\mul_count_reg[2]_rep__0_13 (\mul_count_reg[2]_rep__0_13 ),
        .\mul_count_reg[2]_rep__0_14 (\mul_count_reg[2]_rep__0_14 ),
        .\mul_count_reg[2]_rep__0_2 (\mul_count_reg[2]_rep__0_2 ),
        .\mul_count_reg[2]_rep__0_3 (\mul_count_reg[2]_rep__0_3 ),
        .\mul_count_reg[2]_rep__0_4 (\mul_count_reg[2]_rep__0_4 ),
        .\mul_count_reg[2]_rep__0_5 (\mul_count_reg[2]_rep__0_5 ),
        .\mul_count_reg[2]_rep__0_6 (\mul_count_reg[2]_rep__0_6 ),
        .\mul_count_reg[2]_rep__0_7 (\mul_count_reg[2]_rep__0_7 ),
        .\mul_count_reg[2]_rep__0_8 (\mul_count_reg[2]_rep__0_8 ),
        .\mul_count_reg[2]_rep__0_9 (\mul_count_reg[2]_rep__0_9 ),
        .\mul_count_reg[3]_rep__0 (cestat_OBUF),
        .out(present_state__0),
        .state_OBUF(state_OBUF),
        .\write_count_reg[0] (\write_count_reg[0]_15 ),
        .\write_count_reg[0]_0 (\write_count_reg[0]_16 ),
        .\write_count_reg[0]_1 (\write_count_reg[0]_17 ),
        .\write_count_reg[0]_10 (\write_count_reg[0]_26 ),
        .\write_count_reg[0]_11 (\write_count_reg[0]_27 ),
        .\write_count_reg[0]_12 (\write_count_reg[0]_28 ),
        .\write_count_reg[0]_13 (\write_count_reg[0]_29 ),
        .\write_count_reg[0]_14 (\write_count_reg[0]_30 ),
        .\write_count_reg[0]_2 (\write_count_reg[0]_18 ),
        .\write_count_reg[0]_3 (\write_count_reg[0]_19 ),
        .\write_count_reg[0]_4 (\write_count_reg[0]_20 ),
        .\write_count_reg[0]_5 (\write_count_reg[0]_21 ),
        .\write_count_reg[0]_6 (\write_count_reg[0]_22 ),
        .\write_count_reg[0]_7 (\write_count_reg[0]_23 ),
        .\write_count_reg[0]_8 (\write_count_reg[0]_24 ),
        .\write_count_reg[0]_9 (\write_count_reg[0]_25 ));
  LUT6 #(
    .INIT(64'h0000FFF40000FFFF)) 
    \loop_counter[0]_i_1__2 
       (.I0(present_state__0[1]),
        .I1(present_state__0[0]),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .I4(\loop_counter_reg_n_0_[0] ),
        .I5(\loop_counter_reg_n_0_[1] ),
        .O(loop_counter[0]));
  LUT6 #(
    .INIT(64'h0000FFF4FFBF0000)) 
    \loop_counter[1]_i_1__1 
       (.I0(present_state__0[1]),
        .I1(present_state__0[0]),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .I4(\loop_counter_reg_n_0_[0] ),
        .I5(\loop_counter_reg_n_0_[1] ),
        .O(loop_counter[1]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \loop_counter[2]_i_1__2 
       (.I0(\loop_counter_reg_n_0_[2] ),
        .I1(\loop_counter_reg_n_0_[1] ),
        .I2(\loop_counter_reg_n_0_[0] ),
        .O(loop_counter[2]));
  LUT3 #(
    .INIT(8'h48)) 
    \loop_counter[3]_i_1__2 
       (.I0(present_state__0[1]),
        .I1(cestat_OBUF),
        .I2(present_state__0[0]),
        .O(\loop_counter[3]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h0FF0F0F0F0B0F0F0)) 
    \loop_counter[3]_i_2__1 
       (.I0(present_state__0[1]),
        .I1(present_state__0[0]),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[1] ),
        .I4(\loop_counter_reg_n_0_[0] ),
        .I5(\loop_counter_reg_n_0_[2] ),
        .O(loop_counter[3]));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__2_n_0 ),
        .D(loop_counter[0]),
        .Q(\loop_counter_reg_n_0_[0] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__2_n_0 ),
        .D(loop_counter[1]),
        .Q(\loop_counter_reg_n_0_[1] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__2_n_0 ),
        .D(loop_counter[2]),
        .Q(\loop_counter_reg_n_0_[2] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__2_n_0 ),
        .D(loop_counter[3]),
        .Q(\loop_counter_reg_n_0_[3] ),
        .R(RST_IBUF));
endmodule

module mmx_unit
   (P,
    \S1[1][32] ,
    \S1[2][32] ,
    \S1[3][32] ,
    ACC_reg,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    CLK_IBUF_BUFG,
    RST_IBUF,
    state_OBUF,
    cestat_OBUF,
    addr_in_1,
    \input_vector[7][15] ,
    \input_vector[6][15] ,
    \input_vector[5][15] ,
    \input_vector[4][15] ,
    \input_vector[3][15] ,
    \input_vector[2][15] ,
    \mul_count_reg[1]_rep__0 ,
    \input_vector[1][15] ,
    \input_vector[0][15] ,
    \input_vector[7][14] ,
    \input_vector[6][14] ,
    \input_vector[5][14] ,
    \input_vector[4][14] ,
    \input_vector[3][14] ,
    \input_vector[2][14] ,
    \input_vector[1][14] ,
    \input_vector[0][14] ,
    \input_vector[7][13] ,
    \input_vector[6][13] ,
    \input_vector[5][13] ,
    \input_vector[4][13] ,
    \input_vector[3][13] ,
    \input_vector[2][13] ,
    \input_vector[1][13] ,
    \input_vector[0][13] ,
    \input_vector[7][12] ,
    \input_vector[6][12] ,
    \input_vector[5][12] ,
    \input_vector[4][12] ,
    \input_vector[3][12] ,
    \input_vector[2][12] ,
    \input_vector[1][12] ,
    \input_vector[0][12] ,
    \input_vector[7][11] ,
    \input_vector[6][11] ,
    \input_vector[5][11] ,
    \input_vector[4][11] ,
    \input_vector[3][11] ,
    \input_vector[2][11] ,
    \input_vector[1][11] ,
    \input_vector[0][11] ,
    \input_vector[7][10] ,
    \input_vector[6][10] ,
    \input_vector[5][10] ,
    \input_vector[4][10] ,
    \input_vector[3][10] ,
    \input_vector[2][10] ,
    \input_vector[1][10] ,
    \input_vector[0][10] ,
    \input_vector[7][9] ,
    \input_vector[6][9] ,
    \input_vector[5][9] ,
    \input_vector[4][9] ,
    \input_vector[3][9] ,
    \input_vector[2][9] ,
    \input_vector[1][9] ,
    \input_vector[0][9] ,
    \input_vector[7][8] ,
    \input_vector[6][8] ,
    \input_vector[5][8] ,
    \input_vector[4][8] ,
    \input_vector[3][8] ,
    \input_vector[2][8] ,
    \input_vector[1][8] ,
    \input_vector[0][8] ,
    \input_vector[7][7] ,
    \input_vector[6][7] ,
    \input_vector[5][7] ,
    \input_vector[4][7] ,
    \input_vector[3][7] ,
    \input_vector[2][7] ,
    \input_vector[1][7] ,
    \input_vector[0][7] ,
    \input_vector[7][6] ,
    \input_vector[6][6] ,
    \input_vector[5][6] ,
    \input_vector[4][6] ,
    \input_vector[3][6] ,
    \input_vector[2][6] ,
    \input_vector[1][6] ,
    \input_vector[0][6] ,
    \input_vector[7][5] ,
    \input_vector[6][5] ,
    \input_vector[5][5] ,
    \input_vector[4][5] ,
    \input_vector[3][5] ,
    \input_vector[2][5] ,
    \input_vector[1][5] ,
    \input_vector[0][5] ,
    \input_vector[7][4] ,
    \input_vector[6][4] ,
    \input_vector[5][4] ,
    \input_vector[4][4] ,
    \input_vector[3][4] ,
    \input_vector[2][4] ,
    \input_vector[1][4] ,
    \input_vector[0][4] ,
    \input_vector[7][3] ,
    \input_vector[6][3] ,
    \input_vector[5][3] ,
    \input_vector[4][3] ,
    \input_vector[3][3] ,
    \input_vector[2][3] ,
    \input_vector[1][3] ,
    \input_vector[0][3] ,
    \input_vector[7][2] ,
    \input_vector[6][2] ,
    \input_vector[5][2] ,
    \input_vector[4][2] ,
    \input_vector[3][2] ,
    \input_vector[2][2] ,
    \input_vector[1][2] ,
    \input_vector[0][2] ,
    \input_vector[7][1] ,
    \input_vector[6][1] ,
    \input_vector[5][1] ,
    \input_vector[4][1] ,
    \input_vector[3][1] ,
    \input_vector[2][1] ,
    \input_vector[1][1] ,
    \input_vector[0][1] ,
    \input_vector[7][0] ,
    \input_vector[6][0] ,
    \input_vector[5][0] ,
    \input_vector[4][0] ,
    \input_vector[3][0] ,
    \input_vector[2][0] ,
    \input_vector[1][0] ,
    \input_vector[0][0] ,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_rep_0 ,
    \write_count_reg[0]_rep_1 ,
    \write_count_reg[0]_rep_2 ,
    \write_count_reg[0]_rep_3 ,
    \write_count_reg[0]_rep_4 ,
    \write_count_reg[0]_rep_5 ,
    \write_count_reg[0]_rep_6 ,
    \write_count_reg[0]_rep_7 ,
    \write_count_reg[0]_rep_8 ,
    \write_count_reg[0]_rep_9 ,
    \write_count_reg[0]_rep_10 ,
    \write_count_reg[0]_rep_11 ,
    \write_count_reg[0]_rep_12 ,
    \write_count_reg[0]_rep_13 ,
    \write_count_reg[0]_rep_14 ,
    \write_count_reg[0] ,
    \write_count_reg[0]_0 ,
    \write_count_reg[0]_1 ,
    \write_count_reg[0]_2 ,
    \write_count_reg[0]_3 ,
    \write_count_reg[0]_4 ,
    \write_count_reg[0]_5 ,
    \write_count_reg[0]_6 ,
    \write_count_reg[0]_7 ,
    \write_count_reg[0]_8 ,
    \write_count_reg[0]_9 ,
    \write_count_reg[0]_10 ,
    \write_count_reg[0]_11 ,
    \write_count_reg[0]_12 ,
    \write_count_reg[0]_13 ,
    \write_count_reg[0]_14 ,
    \write_count_reg[0]_rep_15 ,
    \write_count_reg[0]_rep_16 ,
    \write_count_reg[0]_rep_17 ,
    \write_count_reg[0]_rep_18 ,
    \write_count_reg[0]_rep_19 ,
    \write_count_reg[0]_rep_20 ,
    \write_count_reg[0]_rep_21 ,
    \write_count_reg[0]_rep_22 ,
    \write_count_reg[0]_rep_23 ,
    \write_count_reg[0]_rep_24 ,
    \write_count_reg[0]_rep_25 ,
    \write_count_reg[0]_rep_26 ,
    \write_count_reg[0]_rep_27 ,
    \write_count_reg[0]_rep_28 ,
    \write_count_reg[0]_rep_29 ,
    \write_count_reg[0]_rep_30 ,
    \write_count_reg[0]_15 ,
    \write_count_reg[0]_16 ,
    \write_count_reg[0]_17 ,
    \write_count_reg[0]_18 ,
    \write_count_reg[0]_19 ,
    \write_count_reg[0]_20 ,
    \write_count_reg[0]_21 ,
    \write_count_reg[0]_22 ,
    \write_count_reg[0]_23 ,
    \write_count_reg[0]_24 ,
    \write_count_reg[0]_25 ,
    \write_count_reg[0]_26 ,
    \write_count_reg[0]_27 ,
    \write_count_reg[0]_28 ,
    \write_count_reg[0]_29 ,
    \write_count_reg[0]_30 );
  output [32:0]P;
  output [32:0]\S1[1][32] ;
  output [32:0]\S1[2][32] ;
  output [32:0]\S1[3][32] ;
  output ACC_reg;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]state_OBUF;
  input cestat_OBUF;
  input [2:0]addr_in_1;
  input \input_vector[7][15] ;
  input \input_vector[6][15] ;
  input \input_vector[5][15] ;
  input \input_vector[4][15] ;
  input \input_vector[3][15] ;
  input \input_vector[2][15] ;
  input [0:0]\mul_count_reg[1]_rep__0 ;
  input \input_vector[1][15] ;
  input \input_vector[0][15] ;
  input \input_vector[7][14] ;
  input \input_vector[6][14] ;
  input \input_vector[5][14] ;
  input \input_vector[4][14] ;
  input \input_vector[3][14] ;
  input \input_vector[2][14] ;
  input \input_vector[1][14] ;
  input \input_vector[0][14] ;
  input \input_vector[7][13] ;
  input \input_vector[6][13] ;
  input \input_vector[5][13] ;
  input \input_vector[4][13] ;
  input \input_vector[3][13] ;
  input \input_vector[2][13] ;
  input \input_vector[1][13] ;
  input \input_vector[0][13] ;
  input \input_vector[7][12] ;
  input \input_vector[6][12] ;
  input \input_vector[5][12] ;
  input \input_vector[4][12] ;
  input \input_vector[3][12] ;
  input \input_vector[2][12] ;
  input \input_vector[1][12] ;
  input \input_vector[0][12] ;
  input \input_vector[7][11] ;
  input \input_vector[6][11] ;
  input \input_vector[5][11] ;
  input \input_vector[4][11] ;
  input \input_vector[3][11] ;
  input \input_vector[2][11] ;
  input \input_vector[1][11] ;
  input \input_vector[0][11] ;
  input \input_vector[7][10] ;
  input \input_vector[6][10] ;
  input \input_vector[5][10] ;
  input \input_vector[4][10] ;
  input \input_vector[3][10] ;
  input \input_vector[2][10] ;
  input \input_vector[1][10] ;
  input \input_vector[0][10] ;
  input \input_vector[7][9] ;
  input \input_vector[6][9] ;
  input \input_vector[5][9] ;
  input \input_vector[4][9] ;
  input \input_vector[3][9] ;
  input \input_vector[2][9] ;
  input \input_vector[1][9] ;
  input \input_vector[0][9] ;
  input \input_vector[7][8] ;
  input \input_vector[6][8] ;
  input \input_vector[5][8] ;
  input \input_vector[4][8] ;
  input \input_vector[3][8] ;
  input \input_vector[2][8] ;
  input \input_vector[1][8] ;
  input \input_vector[0][8] ;
  input \input_vector[7][7] ;
  input \input_vector[6][7] ;
  input \input_vector[5][7] ;
  input \input_vector[4][7] ;
  input \input_vector[3][7] ;
  input \input_vector[2][7] ;
  input \input_vector[1][7] ;
  input \input_vector[0][7] ;
  input \input_vector[7][6] ;
  input \input_vector[6][6] ;
  input \input_vector[5][6] ;
  input \input_vector[4][6] ;
  input \input_vector[3][6] ;
  input \input_vector[2][6] ;
  input \input_vector[1][6] ;
  input \input_vector[0][6] ;
  input \input_vector[7][5] ;
  input \input_vector[6][5] ;
  input \input_vector[5][5] ;
  input \input_vector[4][5] ;
  input \input_vector[3][5] ;
  input \input_vector[2][5] ;
  input \input_vector[1][5] ;
  input \input_vector[0][5] ;
  input \input_vector[7][4] ;
  input \input_vector[6][4] ;
  input \input_vector[5][4] ;
  input \input_vector[4][4] ;
  input \input_vector[3][4] ;
  input \input_vector[2][4] ;
  input \input_vector[1][4] ;
  input \input_vector[0][4] ;
  input \input_vector[7][3] ;
  input \input_vector[6][3] ;
  input \input_vector[5][3] ;
  input \input_vector[4][3] ;
  input \input_vector[3][3] ;
  input \input_vector[2][3] ;
  input \input_vector[1][3] ;
  input \input_vector[0][3] ;
  input \input_vector[7][2] ;
  input \input_vector[6][2] ;
  input \input_vector[5][2] ;
  input \input_vector[4][2] ;
  input \input_vector[3][2] ;
  input \input_vector[2][2] ;
  input \input_vector[1][2] ;
  input \input_vector[0][2] ;
  input \input_vector[7][1] ;
  input \input_vector[6][1] ;
  input \input_vector[5][1] ;
  input \input_vector[4][1] ;
  input \input_vector[3][1] ;
  input \input_vector[2][1] ;
  input \input_vector[1][1] ;
  input \input_vector[0][1] ;
  input \input_vector[7][0] ;
  input \input_vector[6][0] ;
  input \input_vector[5][0] ;
  input \input_vector[4][0] ;
  input \input_vector[3][0] ;
  input \input_vector[2][0] ;
  input \input_vector[1][0] ;
  input \input_vector[0][0] ;
  input \write_count_reg[0]_rep ;
  input \write_count_reg[0]_rep_0 ;
  input \write_count_reg[0]_rep_1 ;
  input \write_count_reg[0]_rep_2 ;
  input \write_count_reg[0]_rep_3 ;
  input \write_count_reg[0]_rep_4 ;
  input \write_count_reg[0]_rep_5 ;
  input \write_count_reg[0]_rep_6 ;
  input \write_count_reg[0]_rep_7 ;
  input \write_count_reg[0]_rep_8 ;
  input \write_count_reg[0]_rep_9 ;
  input \write_count_reg[0]_rep_10 ;
  input \write_count_reg[0]_rep_11 ;
  input \write_count_reg[0]_rep_12 ;
  input \write_count_reg[0]_rep_13 ;
  input \write_count_reg[0]_rep_14 ;
  input \write_count_reg[0] ;
  input \write_count_reg[0]_0 ;
  input \write_count_reg[0]_1 ;
  input \write_count_reg[0]_2 ;
  input \write_count_reg[0]_3 ;
  input \write_count_reg[0]_4 ;
  input \write_count_reg[0]_5 ;
  input \write_count_reg[0]_6 ;
  input \write_count_reg[0]_7 ;
  input \write_count_reg[0]_8 ;
  input \write_count_reg[0]_9 ;
  input \write_count_reg[0]_10 ;
  input \write_count_reg[0]_11 ;
  input \write_count_reg[0]_12 ;
  input \write_count_reg[0]_13 ;
  input \write_count_reg[0]_14 ;
  input \write_count_reg[0]_rep_15 ;
  input \write_count_reg[0]_rep_16 ;
  input \write_count_reg[0]_rep_17 ;
  input \write_count_reg[0]_rep_18 ;
  input \write_count_reg[0]_rep_19 ;
  input \write_count_reg[0]_rep_20 ;
  input \write_count_reg[0]_rep_21 ;
  input \write_count_reg[0]_rep_22 ;
  input \write_count_reg[0]_rep_23 ;
  input \write_count_reg[0]_rep_24 ;
  input \write_count_reg[0]_rep_25 ;
  input \write_count_reg[0]_rep_26 ;
  input \write_count_reg[0]_rep_27 ;
  input \write_count_reg[0]_rep_28 ;
  input \write_count_reg[0]_rep_29 ;
  input \write_count_reg[0]_rep_30 ;
  input \write_count_reg[0]_15 ;
  input \write_count_reg[0]_16 ;
  input \write_count_reg[0]_17 ;
  input \write_count_reg[0]_18 ;
  input \write_count_reg[0]_19 ;
  input \write_count_reg[0]_20 ;
  input \write_count_reg[0]_21 ;
  input \write_count_reg[0]_22 ;
  input \write_count_reg[0]_23 ;
  input \write_count_reg[0]_24 ;
  input \write_count_reg[0]_25 ;
  input \write_count_reg[0]_26 ;
  input \write_count_reg[0]_27 ;
  input \write_count_reg[0]_28 ;
  input \write_count_reg[0]_29 ;
  input \write_count_reg[0]_30 ;

  wire ACC_reg;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire CE_common_i_1_n_0;
  wire CE_common_reg_n_0;
  wire CLK_IBUF_BUFG;
  wire \FSM_sequential_present_state[0]_i_1_n_0 ;
  wire \FSM_sequential_present_state[1]_i_1_n_0 ;
  wire \FSM_sequential_present_state[1]_i_2_n_0 ;
  wire \FSM_sequential_present_state[1]_i_3_n_0 ;
  wire \FSM_sequential_present_state[1]_i_4_n_0 ;
  wire [32:0]P;
  wire RST_IBUF;
  wire [32:0]\S1[1][32] ;
  wire [32:0]\S1[2][32] ;
  wire [32:0]\S1[3][32] ;
  wire [2:0]addr_in_1;
  wire cestat_OBUF;
  wire \input_vector[0][0] ;
  wire \input_vector[0][10] ;
  wire \input_vector[0][11] ;
  wire \input_vector[0][12] ;
  wire \input_vector[0][13] ;
  wire \input_vector[0][14] ;
  wire \input_vector[0][15] ;
  wire \input_vector[0][1] ;
  wire \input_vector[0][2] ;
  wire \input_vector[0][3] ;
  wire \input_vector[0][4] ;
  wire \input_vector[0][5] ;
  wire \input_vector[0][6] ;
  wire \input_vector[0][7] ;
  wire \input_vector[0][8] ;
  wire \input_vector[0][9] ;
  wire \input_vector[1][0] ;
  wire \input_vector[1][10] ;
  wire \input_vector[1][11] ;
  wire \input_vector[1][12] ;
  wire \input_vector[1][13] ;
  wire \input_vector[1][14] ;
  wire \input_vector[1][15] ;
  wire \input_vector[1][1] ;
  wire \input_vector[1][2] ;
  wire \input_vector[1][3] ;
  wire \input_vector[1][4] ;
  wire \input_vector[1][5] ;
  wire \input_vector[1][6] ;
  wire \input_vector[1][7] ;
  wire \input_vector[1][8] ;
  wire \input_vector[1][9] ;
  wire \input_vector[2][0] ;
  wire \input_vector[2][10] ;
  wire \input_vector[2][11] ;
  wire \input_vector[2][12] ;
  wire \input_vector[2][13] ;
  wire \input_vector[2][14] ;
  wire \input_vector[2][15] ;
  wire \input_vector[2][1] ;
  wire \input_vector[2][2] ;
  wire \input_vector[2][3] ;
  wire \input_vector[2][4] ;
  wire \input_vector[2][5] ;
  wire \input_vector[2][6] ;
  wire \input_vector[2][7] ;
  wire \input_vector[2][8] ;
  wire \input_vector[2][9] ;
  wire \input_vector[3][0] ;
  wire \input_vector[3][10] ;
  wire \input_vector[3][11] ;
  wire \input_vector[3][12] ;
  wire \input_vector[3][13] ;
  wire \input_vector[3][14] ;
  wire \input_vector[3][15] ;
  wire \input_vector[3][1] ;
  wire \input_vector[3][2] ;
  wire \input_vector[3][3] ;
  wire \input_vector[3][4] ;
  wire \input_vector[3][5] ;
  wire \input_vector[3][6] ;
  wire \input_vector[3][7] ;
  wire \input_vector[3][8] ;
  wire \input_vector[3][9] ;
  wire \input_vector[4][0] ;
  wire \input_vector[4][10] ;
  wire \input_vector[4][11] ;
  wire \input_vector[4][12] ;
  wire \input_vector[4][13] ;
  wire \input_vector[4][14] ;
  wire \input_vector[4][15] ;
  wire \input_vector[4][1] ;
  wire \input_vector[4][2] ;
  wire \input_vector[4][3] ;
  wire \input_vector[4][4] ;
  wire \input_vector[4][5] ;
  wire \input_vector[4][6] ;
  wire \input_vector[4][7] ;
  wire \input_vector[4][8] ;
  wire \input_vector[4][9] ;
  wire \input_vector[5][0] ;
  wire \input_vector[5][10] ;
  wire \input_vector[5][11] ;
  wire \input_vector[5][12] ;
  wire \input_vector[5][13] ;
  wire \input_vector[5][14] ;
  wire \input_vector[5][15] ;
  wire \input_vector[5][1] ;
  wire \input_vector[5][2] ;
  wire \input_vector[5][3] ;
  wire \input_vector[5][4] ;
  wire \input_vector[5][5] ;
  wire \input_vector[5][6] ;
  wire \input_vector[5][7] ;
  wire \input_vector[5][8] ;
  wire \input_vector[5][9] ;
  wire \input_vector[6][0] ;
  wire \input_vector[6][10] ;
  wire \input_vector[6][11] ;
  wire \input_vector[6][12] ;
  wire \input_vector[6][13] ;
  wire \input_vector[6][14] ;
  wire \input_vector[6][15] ;
  wire \input_vector[6][1] ;
  wire \input_vector[6][2] ;
  wire \input_vector[6][3] ;
  wire \input_vector[6][4] ;
  wire \input_vector[6][5] ;
  wire \input_vector[6][6] ;
  wire \input_vector[6][7] ;
  wire \input_vector[6][8] ;
  wire \input_vector[6][9] ;
  wire \input_vector[7][0] ;
  wire \input_vector[7][10] ;
  wire \input_vector[7][11] ;
  wire \input_vector[7][12] ;
  wire \input_vector[7][13] ;
  wire \input_vector[7][14] ;
  wire \input_vector[7][15] ;
  wire \input_vector[7][1] ;
  wire \input_vector[7][2] ;
  wire \input_vector[7][3] ;
  wire \input_vector[7][4] ;
  wire \input_vector[7][5] ;
  wire \input_vector[7][6] ;
  wire \input_vector[7][7] ;
  wire \input_vector[7][8] ;
  wire \input_vector[7][9] ;
  wire [3:0]loop_counter;
  wire \loop_counter[3]_i_1__0_n_0 ;
  wire \loop_counter_reg_n_0_[0] ;
  wire \loop_counter_reg_n_0_[1] ;
  wire \loop_counter_reg_n_0_[2] ;
  wire \loop_counter_reg_n_0_[3] ;
  wire [0:0]\mul_count_reg[1]_rep__0 ;
  (* RTL_KEEP = "yes" *) wire [1:0]present_state__0;
  wire [1:0]state_OBUF;
  wire \write_count_reg[0] ;
  wire \write_count_reg[0]_0 ;
  wire \write_count_reg[0]_1 ;
  wire \write_count_reg[0]_10 ;
  wire \write_count_reg[0]_11 ;
  wire \write_count_reg[0]_12 ;
  wire \write_count_reg[0]_13 ;
  wire \write_count_reg[0]_14 ;
  wire \write_count_reg[0]_15 ;
  wire \write_count_reg[0]_16 ;
  wire \write_count_reg[0]_17 ;
  wire \write_count_reg[0]_18 ;
  wire \write_count_reg[0]_19 ;
  wire \write_count_reg[0]_2 ;
  wire \write_count_reg[0]_20 ;
  wire \write_count_reg[0]_21 ;
  wire \write_count_reg[0]_22 ;
  wire \write_count_reg[0]_23 ;
  wire \write_count_reg[0]_24 ;
  wire \write_count_reg[0]_25 ;
  wire \write_count_reg[0]_26 ;
  wire \write_count_reg[0]_27 ;
  wire \write_count_reg[0]_28 ;
  wire \write_count_reg[0]_29 ;
  wire \write_count_reg[0]_3 ;
  wire \write_count_reg[0]_30 ;
  wire \write_count_reg[0]_4 ;
  wire \write_count_reg[0]_5 ;
  wire \write_count_reg[0]_6 ;
  wire \write_count_reg[0]_7 ;
  wire \write_count_reg[0]_8 ;
  wire \write_count_reg[0]_9 ;
  wire \write_count_reg[0]_rep ;
  wire \write_count_reg[0]_rep_0 ;
  wire \write_count_reg[0]_rep_1 ;
  wire \write_count_reg[0]_rep_10 ;
  wire \write_count_reg[0]_rep_11 ;
  wire \write_count_reg[0]_rep_12 ;
  wire \write_count_reg[0]_rep_13 ;
  wire \write_count_reg[0]_rep_14 ;
  wire \write_count_reg[0]_rep_15 ;
  wire \write_count_reg[0]_rep_16 ;
  wire \write_count_reg[0]_rep_17 ;
  wire \write_count_reg[0]_rep_18 ;
  wire \write_count_reg[0]_rep_19 ;
  wire \write_count_reg[0]_rep_2 ;
  wire \write_count_reg[0]_rep_20 ;
  wire \write_count_reg[0]_rep_21 ;
  wire \write_count_reg[0]_rep_22 ;
  wire \write_count_reg[0]_rep_23 ;
  wire \write_count_reg[0]_rep_24 ;
  wire \write_count_reg[0]_rep_25 ;
  wire \write_count_reg[0]_rep_26 ;
  wire \write_count_reg[0]_rep_27 ;
  wire \write_count_reg[0]_rep_28 ;
  wire \write_count_reg[0]_rep_29 ;
  wire \write_count_reg[0]_rep_3 ;
  wire \write_count_reg[0]_rep_30 ;
  wire \write_count_reg[0]_rep_4 ;
  wire \write_count_reg[0]_rep_5 ;
  wire \write_count_reg[0]_rep_6 ;
  wire \write_count_reg[0]_rep_7 ;
  wire \write_count_reg[0]_rep_8 ;
  wire \write_count_reg[0]_rep_9 ;

  LUT5 #(
    .INIT(32'h002AAA2A)) 
    CE_common_i_1
       (.I0(CE_common_reg_n_0),
        .I1(present_state__0[0]),
        .I2(\FSM_sequential_present_state[1]_i_3_n_0 ),
        .I3(present_state__0[1]),
        .I4(\FSM_sequential_present_state[1]_i_2_n_0 ),
        .O(CE_common_i_1_n_0));
  FDSE #(
    .INIT(1'b1)) 
    CE_common_reg
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(CE_common_i_1_n_0),
        .Q(CE_common_reg_n_0),
        .S(RST_IBUF));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \FSM_sequential_present_state[0]_i_1 
       (.I0(cestat_OBUF),
        .I1(present_state__0[0]),
        .I2(\FSM_sequential_present_state[1]_i_3_n_0 ),
        .I3(present_state__0[1]),
        .I4(\FSM_sequential_present_state[1]_i_2_n_0 ),
        .I5(present_state__0[0]),
        .O(\FSM_sequential_present_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFCCFFFFB888B888)) 
    \FSM_sequential_present_state[1]_i_1 
       (.I0(\FSM_sequential_present_state[1]_i_2_n_0 ),
        .I1(present_state__0[1]),
        .I2(\FSM_sequential_present_state[1]_i_3_n_0 ),
        .I3(present_state__0[0]),
        .I4(cestat_OBUF),
        .I5(present_state__0[1]),
        .O(\FSM_sequential_present_state[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \FSM_sequential_present_state[1]_i_2 
       (.I0(state_OBUF[1]),
        .I1(\loop_counter_reg_n_0_[3] ),
        .I2(\FSM_sequential_present_state[1]_i_4_n_0 ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .I4(state_OBUF[0]),
        .I5(present_state__0[0]),
        .O(\FSM_sequential_present_state[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \FSM_sequential_present_state[1]_i_3 
       (.I0(state_OBUF[0]),
        .I1(\loop_counter_reg_n_0_[2] ),
        .I2(\loop_counter_reg_n_0_[0] ),
        .I3(\loop_counter_reg_n_0_[1] ),
        .I4(\loop_counter_reg_n_0_[3] ),
        .I5(state_OBUF[1]),
        .O(\FSM_sequential_present_state[1]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_present_state[1]_i_4 
       (.I0(\loop_counter_reg_n_0_[1] ),
        .I1(\loop_counter_reg_n_0_[0] ),
        .O(\FSM_sequential_present_state[1]_i_4_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:11,iSTATE0:00,iSTATE1:10,iSTATE2:01" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_present_state_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(\FSM_sequential_present_state[0]_i_1_n_0 ),
        .Q(present_state__0[0]),
        .R(RST_IBUF));
  (* FSM_ENCODED_STATES = "iSTATE:11,iSTATE0:00,iSTATE1:10,iSTATE2:01" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_present_state_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(\FSM_sequential_present_state[1]_i_1_n_0 ),
        .Q(present_state__0[1]),
        .R(RST_IBUF));
  simple_multiplier_19 \generate_mac_units[0].mul0 
       (.ACC_reg_0(ACC_reg),
        .ACC_reg_1(ACC_reg_0),
        .ACC_reg_10(ACC_reg_9),
        .ACC_reg_11(ACC_reg_10),
        .ACC_reg_12(ACC_reg_11),
        .ACC_reg_13(ACC_reg_12),
        .ACC_reg_14(ACC_reg_13),
        .ACC_reg_15(ACC_reg_14),
        .ACC_reg_2(ACC_reg_1),
        .ACC_reg_3(ACC_reg_2),
        .ACC_reg_4(ACC_reg_3),
        .ACC_reg_5(ACC_reg_4),
        .ACC_reg_6(ACC_reg_5),
        .ACC_reg_7(ACC_reg_6),
        .ACC_reg_8(ACC_reg_7),
        .ACC_reg_9(ACC_reg_8),
        .CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .P(P),
        .RST_IBUF(RST_IBUF),
        .addr_in_1(addr_in_1),
        .\input_vector[0][0] (\input_vector[0][0] ),
        .\input_vector[0][10] (\input_vector[0][10] ),
        .\input_vector[0][11] (\input_vector[0][11] ),
        .\input_vector[0][12] (\input_vector[0][12] ),
        .\input_vector[0][13] (\input_vector[0][13] ),
        .\input_vector[0][14] (\input_vector[0][14] ),
        .\input_vector[0][15] (\input_vector[0][15] ),
        .\input_vector[0][1] (\input_vector[0][1] ),
        .\input_vector[0][2] (\input_vector[0][2] ),
        .\input_vector[0][3] (\input_vector[0][3] ),
        .\input_vector[0][4] (\input_vector[0][4] ),
        .\input_vector[0][5] (\input_vector[0][5] ),
        .\input_vector[0][6] (\input_vector[0][6] ),
        .\input_vector[0][7] (\input_vector[0][7] ),
        .\input_vector[0][8] (\input_vector[0][8] ),
        .\input_vector[0][9] (\input_vector[0][9] ),
        .\input_vector[1][0] (\input_vector[1][0] ),
        .\input_vector[1][10] (\input_vector[1][10] ),
        .\input_vector[1][11] (\input_vector[1][11] ),
        .\input_vector[1][12] (\input_vector[1][12] ),
        .\input_vector[1][13] (\input_vector[1][13] ),
        .\input_vector[1][14] (\input_vector[1][14] ),
        .\input_vector[1][15] (\input_vector[1][15] ),
        .\input_vector[1][1] (\input_vector[1][1] ),
        .\input_vector[1][2] (\input_vector[1][2] ),
        .\input_vector[1][3] (\input_vector[1][3] ),
        .\input_vector[1][4] (\input_vector[1][4] ),
        .\input_vector[1][5] (\input_vector[1][5] ),
        .\input_vector[1][6] (\input_vector[1][6] ),
        .\input_vector[1][7] (\input_vector[1][7] ),
        .\input_vector[1][8] (\input_vector[1][8] ),
        .\input_vector[1][9] (\input_vector[1][9] ),
        .\input_vector[2][0] (\input_vector[2][0] ),
        .\input_vector[2][10] (\input_vector[2][10] ),
        .\input_vector[2][11] (\input_vector[2][11] ),
        .\input_vector[2][12] (\input_vector[2][12] ),
        .\input_vector[2][13] (\input_vector[2][13] ),
        .\input_vector[2][14] (\input_vector[2][14] ),
        .\input_vector[2][15] (\input_vector[2][15] ),
        .\input_vector[2][1] (\input_vector[2][1] ),
        .\input_vector[2][2] (\input_vector[2][2] ),
        .\input_vector[2][3] (\input_vector[2][3] ),
        .\input_vector[2][4] (\input_vector[2][4] ),
        .\input_vector[2][5] (\input_vector[2][5] ),
        .\input_vector[2][6] (\input_vector[2][6] ),
        .\input_vector[2][7] (\input_vector[2][7] ),
        .\input_vector[2][8] (\input_vector[2][8] ),
        .\input_vector[2][9] (\input_vector[2][9] ),
        .\input_vector[3][0] (\input_vector[3][0] ),
        .\input_vector[3][10] (\input_vector[3][10] ),
        .\input_vector[3][11] (\input_vector[3][11] ),
        .\input_vector[3][12] (\input_vector[3][12] ),
        .\input_vector[3][13] (\input_vector[3][13] ),
        .\input_vector[3][14] (\input_vector[3][14] ),
        .\input_vector[3][15] (\input_vector[3][15] ),
        .\input_vector[3][1] (\input_vector[3][1] ),
        .\input_vector[3][2] (\input_vector[3][2] ),
        .\input_vector[3][3] (\input_vector[3][3] ),
        .\input_vector[3][4] (\input_vector[3][4] ),
        .\input_vector[3][5] (\input_vector[3][5] ),
        .\input_vector[3][6] (\input_vector[3][6] ),
        .\input_vector[3][7] (\input_vector[3][7] ),
        .\input_vector[3][8] (\input_vector[3][8] ),
        .\input_vector[3][9] (\input_vector[3][9] ),
        .\input_vector[4][0] (\input_vector[4][0] ),
        .\input_vector[4][10] (\input_vector[4][10] ),
        .\input_vector[4][11] (\input_vector[4][11] ),
        .\input_vector[4][12] (\input_vector[4][12] ),
        .\input_vector[4][13] (\input_vector[4][13] ),
        .\input_vector[4][14] (\input_vector[4][14] ),
        .\input_vector[4][15] (\input_vector[4][15] ),
        .\input_vector[4][1] (\input_vector[4][1] ),
        .\input_vector[4][2] (\input_vector[4][2] ),
        .\input_vector[4][3] (\input_vector[4][3] ),
        .\input_vector[4][4] (\input_vector[4][4] ),
        .\input_vector[4][5] (\input_vector[4][5] ),
        .\input_vector[4][6] (\input_vector[4][6] ),
        .\input_vector[4][7] (\input_vector[4][7] ),
        .\input_vector[4][8] (\input_vector[4][8] ),
        .\input_vector[4][9] (\input_vector[4][9] ),
        .\input_vector[5][0] (\input_vector[5][0] ),
        .\input_vector[5][10] (\input_vector[5][10] ),
        .\input_vector[5][11] (\input_vector[5][11] ),
        .\input_vector[5][12] (\input_vector[5][12] ),
        .\input_vector[5][13] (\input_vector[5][13] ),
        .\input_vector[5][14] (\input_vector[5][14] ),
        .\input_vector[5][15] (\input_vector[5][15] ),
        .\input_vector[5][1] (\input_vector[5][1] ),
        .\input_vector[5][2] (\input_vector[5][2] ),
        .\input_vector[5][3] (\input_vector[5][3] ),
        .\input_vector[5][4] (\input_vector[5][4] ),
        .\input_vector[5][5] (\input_vector[5][5] ),
        .\input_vector[5][6] (\input_vector[5][6] ),
        .\input_vector[5][7] (\input_vector[5][7] ),
        .\input_vector[5][8] (\input_vector[5][8] ),
        .\input_vector[5][9] (\input_vector[5][9] ),
        .\input_vector[6][0] (\input_vector[6][0] ),
        .\input_vector[6][10] (\input_vector[6][10] ),
        .\input_vector[6][11] (\input_vector[6][11] ),
        .\input_vector[6][12] (\input_vector[6][12] ),
        .\input_vector[6][13] (\input_vector[6][13] ),
        .\input_vector[6][14] (\input_vector[6][14] ),
        .\input_vector[6][15] (\input_vector[6][15] ),
        .\input_vector[6][1] (\input_vector[6][1] ),
        .\input_vector[6][2] (\input_vector[6][2] ),
        .\input_vector[6][3] (\input_vector[6][3] ),
        .\input_vector[6][4] (\input_vector[6][4] ),
        .\input_vector[6][5] (\input_vector[6][5] ),
        .\input_vector[6][6] (\input_vector[6][6] ),
        .\input_vector[6][7] (\input_vector[6][7] ),
        .\input_vector[6][8] (\input_vector[6][8] ),
        .\input_vector[6][9] (\input_vector[6][9] ),
        .\input_vector[7][0] (\input_vector[7][0] ),
        .\input_vector[7][10] (\input_vector[7][10] ),
        .\input_vector[7][11] (\input_vector[7][11] ),
        .\input_vector[7][12] (\input_vector[7][12] ),
        .\input_vector[7][13] (\input_vector[7][13] ),
        .\input_vector[7][14] (\input_vector[7][14] ),
        .\input_vector[7][15] (\input_vector[7][15] ),
        .\input_vector[7][1] (\input_vector[7][1] ),
        .\input_vector[7][2] (\input_vector[7][2] ),
        .\input_vector[7][3] (\input_vector[7][3] ),
        .\input_vector[7][4] (\input_vector[7][4] ),
        .\input_vector[7][5] (\input_vector[7][5] ),
        .\input_vector[7][6] (\input_vector[7][6] ),
        .\input_vector[7][7] (\input_vector[7][7] ),
        .\input_vector[7][8] (\input_vector[7][8] ),
        .\input_vector[7][9] (\input_vector[7][9] ),
        .\mul_count_reg[1]_rep__0 (\mul_count_reg[1]_rep__0 ),
        .out(present_state__0),
        .\write_count_reg[0]_rep (\write_count_reg[0]_rep ),
        .\write_count_reg[0]_rep_0 (\write_count_reg[0]_rep_0 ),
        .\write_count_reg[0]_rep_1 (\write_count_reg[0]_rep_1 ),
        .\write_count_reg[0]_rep_10 (\write_count_reg[0]_rep_10 ),
        .\write_count_reg[0]_rep_11 (\write_count_reg[0]_rep_11 ),
        .\write_count_reg[0]_rep_12 (\write_count_reg[0]_rep_12 ),
        .\write_count_reg[0]_rep_13 (\write_count_reg[0]_rep_13 ),
        .\write_count_reg[0]_rep_14 (\write_count_reg[0]_rep_14 ),
        .\write_count_reg[0]_rep_2 (\write_count_reg[0]_rep_2 ),
        .\write_count_reg[0]_rep_3 (\write_count_reg[0]_rep_3 ),
        .\write_count_reg[0]_rep_4 (\write_count_reg[0]_rep_4 ),
        .\write_count_reg[0]_rep_5 (\write_count_reg[0]_rep_5 ),
        .\write_count_reg[0]_rep_6 (\write_count_reg[0]_rep_6 ),
        .\write_count_reg[0]_rep_7 (\write_count_reg[0]_rep_7 ),
        .\write_count_reg[0]_rep_8 (\write_count_reg[0]_rep_8 ),
        .\write_count_reg[0]_rep_9 (\write_count_reg[0]_rep_9 ));
  simple_multiplier_20 \generate_mac_units[1].mul0 
       (.CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\S1[1][32] (\S1[1][32] ),
        .\mul_count_reg[2]_rep__0 (ACC_reg),
        .\mul_count_reg[2]_rep__0_0 (ACC_reg_0),
        .\mul_count_reg[2]_rep__0_1 (ACC_reg_1),
        .\mul_count_reg[2]_rep__0_10 (ACC_reg_10),
        .\mul_count_reg[2]_rep__0_11 (ACC_reg_11),
        .\mul_count_reg[2]_rep__0_12 (ACC_reg_12),
        .\mul_count_reg[2]_rep__0_13 (ACC_reg_13),
        .\mul_count_reg[2]_rep__0_14 (ACC_reg_14),
        .\mul_count_reg[2]_rep__0_2 (ACC_reg_2),
        .\mul_count_reg[2]_rep__0_3 (ACC_reg_3),
        .\mul_count_reg[2]_rep__0_4 (ACC_reg_4),
        .\mul_count_reg[2]_rep__0_5 (ACC_reg_5),
        .\mul_count_reg[2]_rep__0_6 (ACC_reg_6),
        .\mul_count_reg[2]_rep__0_7 (ACC_reg_7),
        .\mul_count_reg[2]_rep__0_8 (ACC_reg_8),
        .\mul_count_reg[2]_rep__0_9 (ACC_reg_9),
        .out(present_state__0),
        .\write_count_reg[0] (\write_count_reg[0] ),
        .\write_count_reg[0]_0 (\write_count_reg[0]_0 ),
        .\write_count_reg[0]_1 (\write_count_reg[0]_1 ),
        .\write_count_reg[0]_10 (\write_count_reg[0]_10 ),
        .\write_count_reg[0]_11 (\write_count_reg[0]_11 ),
        .\write_count_reg[0]_12 (\write_count_reg[0]_12 ),
        .\write_count_reg[0]_13 (\write_count_reg[0]_13 ),
        .\write_count_reg[0]_14 (\write_count_reg[0]_14 ),
        .\write_count_reg[0]_2 (\write_count_reg[0]_2 ),
        .\write_count_reg[0]_3 (\write_count_reg[0]_3 ),
        .\write_count_reg[0]_4 (\write_count_reg[0]_4 ),
        .\write_count_reg[0]_5 (\write_count_reg[0]_5 ),
        .\write_count_reg[0]_6 (\write_count_reg[0]_6 ),
        .\write_count_reg[0]_7 (\write_count_reg[0]_7 ),
        .\write_count_reg[0]_8 (\write_count_reg[0]_8 ),
        .\write_count_reg[0]_9 (\write_count_reg[0]_9 ));
  simple_multiplier_21 \generate_mac_units[2].mul0 
       (.CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\S1[2][32] (\S1[2][32] ),
        .\mul_count_reg[2]_rep__0 (ACC_reg),
        .\mul_count_reg[2]_rep__0_0 (ACC_reg_0),
        .\mul_count_reg[2]_rep__0_1 (ACC_reg_1),
        .\mul_count_reg[2]_rep__0_10 (ACC_reg_10),
        .\mul_count_reg[2]_rep__0_11 (ACC_reg_11),
        .\mul_count_reg[2]_rep__0_12 (ACC_reg_12),
        .\mul_count_reg[2]_rep__0_13 (ACC_reg_13),
        .\mul_count_reg[2]_rep__0_14 (ACC_reg_14),
        .\mul_count_reg[2]_rep__0_2 (ACC_reg_2),
        .\mul_count_reg[2]_rep__0_3 (ACC_reg_3),
        .\mul_count_reg[2]_rep__0_4 (ACC_reg_4),
        .\mul_count_reg[2]_rep__0_5 (ACC_reg_5),
        .\mul_count_reg[2]_rep__0_6 (ACC_reg_6),
        .\mul_count_reg[2]_rep__0_7 (ACC_reg_7),
        .\mul_count_reg[2]_rep__0_8 (ACC_reg_8),
        .\mul_count_reg[2]_rep__0_9 (ACC_reg_9),
        .out(present_state__0),
        .\write_count_reg[0]_rep (\write_count_reg[0]_rep_15 ),
        .\write_count_reg[0]_rep_0 (\write_count_reg[0]_rep_16 ),
        .\write_count_reg[0]_rep_1 (\write_count_reg[0]_rep_17 ),
        .\write_count_reg[0]_rep_10 (\write_count_reg[0]_rep_26 ),
        .\write_count_reg[0]_rep_11 (\write_count_reg[0]_rep_27 ),
        .\write_count_reg[0]_rep_12 (\write_count_reg[0]_rep_28 ),
        .\write_count_reg[0]_rep_13 (\write_count_reg[0]_rep_29 ),
        .\write_count_reg[0]_rep_14 (\write_count_reg[0]_rep_30 ),
        .\write_count_reg[0]_rep_2 (\write_count_reg[0]_rep_18 ),
        .\write_count_reg[0]_rep_3 (\write_count_reg[0]_rep_19 ),
        .\write_count_reg[0]_rep_4 (\write_count_reg[0]_rep_20 ),
        .\write_count_reg[0]_rep_5 (\write_count_reg[0]_rep_21 ),
        .\write_count_reg[0]_rep_6 (\write_count_reg[0]_rep_22 ),
        .\write_count_reg[0]_rep_7 (\write_count_reg[0]_rep_23 ),
        .\write_count_reg[0]_rep_8 (\write_count_reg[0]_rep_24 ),
        .\write_count_reg[0]_rep_9 (\write_count_reg[0]_rep_25 ));
  simple_multiplier_22 \generate_mac_units[3].mul0 
       (.CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\S1[3][32] (\S1[3][32] ),
        .\mul_count_reg[2]_rep__0 (ACC_reg),
        .\mul_count_reg[2]_rep__0_0 (ACC_reg_0),
        .\mul_count_reg[2]_rep__0_1 (ACC_reg_1),
        .\mul_count_reg[2]_rep__0_10 (ACC_reg_10),
        .\mul_count_reg[2]_rep__0_11 (ACC_reg_11),
        .\mul_count_reg[2]_rep__0_12 (ACC_reg_12),
        .\mul_count_reg[2]_rep__0_13 (ACC_reg_13),
        .\mul_count_reg[2]_rep__0_14 (ACC_reg_14),
        .\mul_count_reg[2]_rep__0_2 (ACC_reg_2),
        .\mul_count_reg[2]_rep__0_3 (ACC_reg_3),
        .\mul_count_reg[2]_rep__0_4 (ACC_reg_4),
        .\mul_count_reg[2]_rep__0_5 (ACC_reg_5),
        .\mul_count_reg[2]_rep__0_6 (ACC_reg_6),
        .\mul_count_reg[2]_rep__0_7 (ACC_reg_7),
        .\mul_count_reg[2]_rep__0_8 (ACC_reg_8),
        .\mul_count_reg[2]_rep__0_9 (ACC_reg_9),
        .out(present_state__0),
        .\write_count_reg[0] (\write_count_reg[0]_15 ),
        .\write_count_reg[0]_0 (\write_count_reg[0]_16 ),
        .\write_count_reg[0]_1 (\write_count_reg[0]_17 ),
        .\write_count_reg[0]_10 (\write_count_reg[0]_26 ),
        .\write_count_reg[0]_11 (\write_count_reg[0]_27 ),
        .\write_count_reg[0]_12 (\write_count_reg[0]_28 ),
        .\write_count_reg[0]_13 (\write_count_reg[0]_29 ),
        .\write_count_reg[0]_14 (\write_count_reg[0]_30 ),
        .\write_count_reg[0]_2 (\write_count_reg[0]_18 ),
        .\write_count_reg[0]_3 (\write_count_reg[0]_19 ),
        .\write_count_reg[0]_4 (\write_count_reg[0]_20 ),
        .\write_count_reg[0]_5 (\write_count_reg[0]_21 ),
        .\write_count_reg[0]_6 (\write_count_reg[0]_22 ),
        .\write_count_reg[0]_7 (\write_count_reg[0]_23 ),
        .\write_count_reg[0]_8 (\write_count_reg[0]_24 ),
        .\write_count_reg[0]_9 (\write_count_reg[0]_25 ));
  LUT6 #(
    .INIT(64'h0000FFF40000FFFF)) 
    \loop_counter[0]_i_1__0 
       (.I0(present_state__0[1]),
        .I1(present_state__0[0]),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .I4(\loop_counter_reg_n_0_[0] ),
        .I5(\loop_counter_reg_n_0_[1] ),
        .O(loop_counter[0]));
  LUT6 #(
    .INIT(64'h0000FFF4FFBF0000)) 
    \loop_counter[1]_i_1 
       (.I0(present_state__0[1]),
        .I1(present_state__0[0]),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .I4(\loop_counter_reg_n_0_[0] ),
        .I5(\loop_counter_reg_n_0_[1] ),
        .O(loop_counter[1]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \loop_counter[2]_i_1__0 
       (.I0(\loop_counter_reg_n_0_[2] ),
        .I1(\loop_counter_reg_n_0_[1] ),
        .I2(\loop_counter_reg_n_0_[0] ),
        .O(loop_counter[2]));
  LUT3 #(
    .INIT(8'h48)) 
    \loop_counter[3]_i_1__0 
       (.I0(present_state__0[1]),
        .I1(cestat_OBUF),
        .I2(present_state__0[0]),
        .O(\loop_counter[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0FF0F0F0F0B0F0F0)) 
    \loop_counter[3]_i_2 
       (.I0(present_state__0[1]),
        .I1(present_state__0[0]),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[1] ),
        .I4(\loop_counter_reg_n_0_[0] ),
        .I5(\loop_counter_reg_n_0_[2] ),
        .O(loop_counter[3]));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__0_n_0 ),
        .D(loop_counter[0]),
        .Q(\loop_counter_reg_n_0_[0] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__0_n_0 ),
        .D(loop_counter[1]),
        .Q(\loop_counter_reg_n_0_[1] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__0_n_0 ),
        .D(loop_counter[2]),
        .Q(\loop_counter_reg_n_0_[2] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__0_n_0 ),
        .D(loop_counter[3]),
        .Q(\loop_counter_reg_n_0_[3] ),
        .R(RST_IBUF));
endmodule

(* ORIG_REF_NAME = "mmx_unit" *) 
module mmx_unit_15
   (P,
    \S2[1][32] ,
    \S2[2][32] ,
    \S2[3][32] ,
    CLK_IBUF_BUFG,
    RST_IBUF,
    state_OBUF,
    cestat_OBUF,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    Q,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_rep_0 ,
    \write_count_reg[0]_rep_1 ,
    \write_count_reg[0]_rep_2 ,
    \write_count_reg[0]_rep_3 ,
    \write_count_reg[0]_rep_4 ,
    \write_count_reg[0]_rep_5 ,
    \write_count_reg[0]_rep_6 ,
    \write_count_reg[0]_rep_7 ,
    \write_count_reg[0]_rep_8 ,
    \write_count_reg[0]_rep_9 ,
    \write_count_reg[0]_rep_10 ,
    \write_count_reg[0]_rep_11 ,
    \write_count_reg[0]_rep_12 ,
    \write_count_reg[0]_rep_13 ,
    \write_count_reg[0]_rep_14 ,
    \ACC_reg[15] ,
    \write_count_reg[0] ,
    \write_count_reg[0]_0 ,
    \write_count_reg[0]_1 ,
    \write_count_reg[0]_2 ,
    \write_count_reg[0]_3 ,
    \write_count_reg[0]_4 ,
    \write_count_reg[0]_5 ,
    \write_count_reg[0]_6 ,
    \write_count_reg[0]_7 ,
    \write_count_reg[0]_8 ,
    \write_count_reg[0]_9 ,
    \write_count_reg[0]_10 ,
    \write_count_reg[0]_11 ,
    \write_count_reg[0]_12 ,
    \write_count_reg[0]_13 ,
    \write_count_reg[0]_14 ,
    \ACC_reg[15]_0 ,
    \write_count_reg[0]_rep_15 ,
    \write_count_reg[0]_rep_16 ,
    \write_count_reg[0]_rep_17 ,
    \write_count_reg[0]_rep_18 ,
    \write_count_reg[0]_rep_19 ,
    \write_count_reg[0]_rep_20 ,
    \write_count_reg[0]_rep_21 ,
    \write_count_reg[0]_rep_22 ,
    \write_count_reg[0]_rep_23 ,
    \write_count_reg[0]_rep_24 ,
    \write_count_reg[0]_rep_25 ,
    \write_count_reg[0]_rep_26 ,
    \write_count_reg[0]_rep_27 ,
    \write_count_reg[0]_rep_28 ,
    \write_count_reg[0]_rep_29 ,
    \write_count_reg[0]_rep_30 ,
    \ACC_reg[15]_1 ,
    \write_count_reg[0]_15 ,
    \write_count_reg[0]_16 ,
    \write_count_reg[0]_17 ,
    \write_count_reg[0]_18 ,
    \write_count_reg[0]_19 ,
    \write_count_reg[0]_20 ,
    \write_count_reg[0]_21 ,
    \write_count_reg[0]_22 ,
    \write_count_reg[0]_23 ,
    \write_count_reg[0]_24 ,
    \write_count_reg[0]_25 ,
    \write_count_reg[0]_26 ,
    \write_count_reg[0]_27 ,
    \write_count_reg[0]_28 ,
    \write_count_reg[0]_29 ,
    \write_count_reg[0]_30 );
  output [32:0]P;
  output [32:0]\S2[1][32] ;
  output [32:0]\S2[2][32] ;
  output [32:0]\S2[3][32] ;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]state_OBUF;
  input cestat_OBUF;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]Q;
  input \write_count_reg[0]_rep ;
  input \write_count_reg[0]_rep_0 ;
  input \write_count_reg[0]_rep_1 ;
  input \write_count_reg[0]_rep_2 ;
  input \write_count_reg[0]_rep_3 ;
  input \write_count_reg[0]_rep_4 ;
  input \write_count_reg[0]_rep_5 ;
  input \write_count_reg[0]_rep_6 ;
  input \write_count_reg[0]_rep_7 ;
  input \write_count_reg[0]_rep_8 ;
  input \write_count_reg[0]_rep_9 ;
  input \write_count_reg[0]_rep_10 ;
  input \write_count_reg[0]_rep_11 ;
  input \write_count_reg[0]_rep_12 ;
  input \write_count_reg[0]_rep_13 ;
  input \write_count_reg[0]_rep_14 ;
  input [15:0]\ACC_reg[15] ;
  input \write_count_reg[0] ;
  input \write_count_reg[0]_0 ;
  input \write_count_reg[0]_1 ;
  input \write_count_reg[0]_2 ;
  input \write_count_reg[0]_3 ;
  input \write_count_reg[0]_4 ;
  input \write_count_reg[0]_5 ;
  input \write_count_reg[0]_6 ;
  input \write_count_reg[0]_7 ;
  input \write_count_reg[0]_8 ;
  input \write_count_reg[0]_9 ;
  input \write_count_reg[0]_10 ;
  input \write_count_reg[0]_11 ;
  input \write_count_reg[0]_12 ;
  input \write_count_reg[0]_13 ;
  input \write_count_reg[0]_14 ;
  input [15:0]\ACC_reg[15]_0 ;
  input \write_count_reg[0]_rep_15 ;
  input \write_count_reg[0]_rep_16 ;
  input \write_count_reg[0]_rep_17 ;
  input \write_count_reg[0]_rep_18 ;
  input \write_count_reg[0]_rep_19 ;
  input \write_count_reg[0]_rep_20 ;
  input \write_count_reg[0]_rep_21 ;
  input \write_count_reg[0]_rep_22 ;
  input \write_count_reg[0]_rep_23 ;
  input \write_count_reg[0]_rep_24 ;
  input \write_count_reg[0]_rep_25 ;
  input \write_count_reg[0]_rep_26 ;
  input \write_count_reg[0]_rep_27 ;
  input \write_count_reg[0]_rep_28 ;
  input \write_count_reg[0]_rep_29 ;
  input \write_count_reg[0]_rep_30 ;
  input [15:0]\ACC_reg[15]_1 ;
  input \write_count_reg[0]_15 ;
  input \write_count_reg[0]_16 ;
  input \write_count_reg[0]_17 ;
  input \write_count_reg[0]_18 ;
  input \write_count_reg[0]_19 ;
  input \write_count_reg[0]_20 ;
  input \write_count_reg[0]_21 ;
  input \write_count_reg[0]_22 ;
  input \write_count_reg[0]_23 ;
  input \write_count_reg[0]_24 ;
  input \write_count_reg[0]_25 ;
  input \write_count_reg[0]_26 ;
  input \write_count_reg[0]_27 ;
  input \write_count_reg[0]_28 ;
  input \write_count_reg[0]_29 ;
  input \write_count_reg[0]_30 ;

  wire [15:0]\ACC_reg[15] ;
  wire [15:0]\ACC_reg[15]_0 ;
  wire [15:0]\ACC_reg[15]_1 ;
  wire CE_common_i_1__0_n_0;
  wire CE_common_reg_n_0;
  wire CLK_IBUF_BUFG;
  wire \FSM_sequential_present_state[0]_i_1__0_n_0 ;
  wire \FSM_sequential_present_state[1]_i_1__0_n_0 ;
  wire \FSM_sequential_present_state[1]_i_2__0_n_0 ;
  wire \FSM_sequential_present_state[1]_i_3__0_n_0 ;
  wire \FSM_sequential_present_state[1]_i_4__0_n_0 ;
  wire [32:0]P;
  wire [15:0]Q;
  wire RST_IBUF;
  wire [32:0]\S2[1][32] ;
  wire [32:0]\S2[2][32] ;
  wire [32:0]\S2[3][32] ;
  wire cestat_OBUF;
  wire [3:0]loop_counter;
  wire \loop_counter[3]_i_1__1_n_0 ;
  wire \loop_counter_reg_n_0_[0] ;
  wire \loop_counter_reg_n_0_[1] ;
  wire \loop_counter_reg_n_0_[2] ;
  wire \loop_counter_reg_n_0_[3] ;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  (* RTL_KEEP = "yes" *) wire [1:0]present_state__0;
  wire [1:0]state_OBUF;
  wire \write_count_reg[0] ;
  wire \write_count_reg[0]_0 ;
  wire \write_count_reg[0]_1 ;
  wire \write_count_reg[0]_10 ;
  wire \write_count_reg[0]_11 ;
  wire \write_count_reg[0]_12 ;
  wire \write_count_reg[0]_13 ;
  wire \write_count_reg[0]_14 ;
  wire \write_count_reg[0]_15 ;
  wire \write_count_reg[0]_16 ;
  wire \write_count_reg[0]_17 ;
  wire \write_count_reg[0]_18 ;
  wire \write_count_reg[0]_19 ;
  wire \write_count_reg[0]_2 ;
  wire \write_count_reg[0]_20 ;
  wire \write_count_reg[0]_21 ;
  wire \write_count_reg[0]_22 ;
  wire \write_count_reg[0]_23 ;
  wire \write_count_reg[0]_24 ;
  wire \write_count_reg[0]_25 ;
  wire \write_count_reg[0]_26 ;
  wire \write_count_reg[0]_27 ;
  wire \write_count_reg[0]_28 ;
  wire \write_count_reg[0]_29 ;
  wire \write_count_reg[0]_3 ;
  wire \write_count_reg[0]_30 ;
  wire \write_count_reg[0]_4 ;
  wire \write_count_reg[0]_5 ;
  wire \write_count_reg[0]_6 ;
  wire \write_count_reg[0]_7 ;
  wire \write_count_reg[0]_8 ;
  wire \write_count_reg[0]_9 ;
  wire \write_count_reg[0]_rep ;
  wire \write_count_reg[0]_rep_0 ;
  wire \write_count_reg[0]_rep_1 ;
  wire \write_count_reg[0]_rep_10 ;
  wire \write_count_reg[0]_rep_11 ;
  wire \write_count_reg[0]_rep_12 ;
  wire \write_count_reg[0]_rep_13 ;
  wire \write_count_reg[0]_rep_14 ;
  wire \write_count_reg[0]_rep_15 ;
  wire \write_count_reg[0]_rep_16 ;
  wire \write_count_reg[0]_rep_17 ;
  wire \write_count_reg[0]_rep_18 ;
  wire \write_count_reg[0]_rep_19 ;
  wire \write_count_reg[0]_rep_2 ;
  wire \write_count_reg[0]_rep_20 ;
  wire \write_count_reg[0]_rep_21 ;
  wire \write_count_reg[0]_rep_22 ;
  wire \write_count_reg[0]_rep_23 ;
  wire \write_count_reg[0]_rep_24 ;
  wire \write_count_reg[0]_rep_25 ;
  wire \write_count_reg[0]_rep_26 ;
  wire \write_count_reg[0]_rep_27 ;
  wire \write_count_reg[0]_rep_28 ;
  wire \write_count_reg[0]_rep_29 ;
  wire \write_count_reg[0]_rep_3 ;
  wire \write_count_reg[0]_rep_30 ;
  wire \write_count_reg[0]_rep_4 ;
  wire \write_count_reg[0]_rep_5 ;
  wire \write_count_reg[0]_rep_6 ;
  wire \write_count_reg[0]_rep_7 ;
  wire \write_count_reg[0]_rep_8 ;
  wire \write_count_reg[0]_rep_9 ;

  LUT5 #(
    .INIT(32'h002AAA2A)) 
    CE_common_i_1__0
       (.I0(CE_common_reg_n_0),
        .I1(present_state__0[0]),
        .I2(\FSM_sequential_present_state[1]_i_3__0_n_0 ),
        .I3(present_state__0[1]),
        .I4(\FSM_sequential_present_state[1]_i_2__0_n_0 ),
        .O(CE_common_i_1__0_n_0));
  FDSE #(
    .INIT(1'b1)) 
    CE_common_reg
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(CE_common_i_1__0_n_0),
        .Q(CE_common_reg_n_0),
        .S(RST_IBUF));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFE200E2)) 
    \FSM_sequential_present_state[0]_i_1__0 
       (.I0(cestat_OBUF),
        .I1(present_state__0[0]),
        .I2(\FSM_sequential_present_state[1]_i_3__0_n_0 ),
        .I3(present_state__0[1]),
        .I4(\FSM_sequential_present_state[1]_i_2__0_n_0 ),
        .I5(present_state__0[0]),
        .O(\FSM_sequential_present_state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFCCFFFFB888B888)) 
    \FSM_sequential_present_state[1]_i_1__0 
       (.I0(\FSM_sequential_present_state[1]_i_2__0_n_0 ),
        .I1(present_state__0[1]),
        .I2(\FSM_sequential_present_state[1]_i_3__0_n_0 ),
        .I3(present_state__0[0]),
        .I4(cestat_OBUF),
        .I5(present_state__0[1]),
        .O(\FSM_sequential_present_state[1]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000020)) 
    \FSM_sequential_present_state[1]_i_2__0 
       (.I0(state_OBUF[1]),
        .I1(\loop_counter_reg_n_0_[3] ),
        .I2(\FSM_sequential_present_state[1]_i_4__0_n_0 ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .I4(state_OBUF[0]),
        .I5(present_state__0[0]),
        .O(\FSM_sequential_present_state[1]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \FSM_sequential_present_state[1]_i_3__0 
       (.I0(state_OBUF[0]),
        .I1(\loop_counter_reg_n_0_[2] ),
        .I2(\loop_counter_reg_n_0_[0] ),
        .I3(\loop_counter_reg_n_0_[1] ),
        .I4(\loop_counter_reg_n_0_[3] ),
        .I5(state_OBUF[1]),
        .O(\FSM_sequential_present_state[1]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \FSM_sequential_present_state[1]_i_4__0 
       (.I0(\loop_counter_reg_n_0_[1] ),
        .I1(\loop_counter_reg_n_0_[0] ),
        .O(\FSM_sequential_present_state[1]_i_4__0_n_0 ));
  (* FSM_ENCODED_STATES = "iSTATE:11,iSTATE0:00,iSTATE1:10,iSTATE2:01" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_present_state_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(\FSM_sequential_present_state[0]_i_1__0_n_0 ),
        .Q(present_state__0[0]),
        .R(RST_IBUF));
  (* FSM_ENCODED_STATES = "iSTATE:11,iSTATE0:00,iSTATE1:10,iSTATE2:01" *) 
  (* KEEP = "yes" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_sequential_present_state_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(\FSM_sequential_present_state[1]_i_1__0_n_0 ),
        .Q(present_state__0[1]),
        .R(RST_IBUF));
  simple_multiplier \generate_mac_units[0].mul0 
       (.CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .P(P),
        .Q(Q),
        .RST_IBUF(RST_IBUF),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0 ),
        .\mul_count_reg[2]_rep__0_0 (\mul_count_reg[2]_rep__0_0 ),
        .\mul_count_reg[2]_rep__0_1 (\mul_count_reg[2]_rep__0_1 ),
        .\mul_count_reg[2]_rep__0_10 (\mul_count_reg[2]_rep__0_10 ),
        .\mul_count_reg[2]_rep__0_11 (\mul_count_reg[2]_rep__0_11 ),
        .\mul_count_reg[2]_rep__0_12 (\mul_count_reg[2]_rep__0_12 ),
        .\mul_count_reg[2]_rep__0_13 (\mul_count_reg[2]_rep__0_13 ),
        .\mul_count_reg[2]_rep__0_14 (\mul_count_reg[2]_rep__0_14 ),
        .\mul_count_reg[2]_rep__0_2 (\mul_count_reg[2]_rep__0_2 ),
        .\mul_count_reg[2]_rep__0_3 (\mul_count_reg[2]_rep__0_3 ),
        .\mul_count_reg[2]_rep__0_4 (\mul_count_reg[2]_rep__0_4 ),
        .\mul_count_reg[2]_rep__0_5 (\mul_count_reg[2]_rep__0_5 ),
        .\mul_count_reg[2]_rep__0_6 (\mul_count_reg[2]_rep__0_6 ),
        .\mul_count_reg[2]_rep__0_7 (\mul_count_reg[2]_rep__0_7 ),
        .\mul_count_reg[2]_rep__0_8 (\mul_count_reg[2]_rep__0_8 ),
        .\mul_count_reg[2]_rep__0_9 (\mul_count_reg[2]_rep__0_9 ),
        .out(present_state__0),
        .\write_count_reg[0]_rep (\write_count_reg[0]_rep ),
        .\write_count_reg[0]_rep_0 (\write_count_reg[0]_rep_0 ),
        .\write_count_reg[0]_rep_1 (\write_count_reg[0]_rep_1 ),
        .\write_count_reg[0]_rep_10 (\write_count_reg[0]_rep_10 ),
        .\write_count_reg[0]_rep_11 (\write_count_reg[0]_rep_11 ),
        .\write_count_reg[0]_rep_12 (\write_count_reg[0]_rep_12 ),
        .\write_count_reg[0]_rep_13 (\write_count_reg[0]_rep_13 ),
        .\write_count_reg[0]_rep_14 (\write_count_reg[0]_rep_14 ),
        .\write_count_reg[0]_rep_2 (\write_count_reg[0]_rep_2 ),
        .\write_count_reg[0]_rep_3 (\write_count_reg[0]_rep_3 ),
        .\write_count_reg[0]_rep_4 (\write_count_reg[0]_rep_4 ),
        .\write_count_reg[0]_rep_5 (\write_count_reg[0]_rep_5 ),
        .\write_count_reg[0]_rep_6 (\write_count_reg[0]_rep_6 ),
        .\write_count_reg[0]_rep_7 (\write_count_reg[0]_rep_7 ),
        .\write_count_reg[0]_rep_8 (\write_count_reg[0]_rep_8 ),
        .\write_count_reg[0]_rep_9 (\write_count_reg[0]_rep_9 ));
  simple_multiplier_16 \generate_mac_units[1].mul0 
       (.\ACC_reg[15] (\ACC_reg[15] ),
        .CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\S2[1][32] (\S2[1][32] ),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0 ),
        .\mul_count_reg[2]_rep__0_0 (\mul_count_reg[2]_rep__0_0 ),
        .\mul_count_reg[2]_rep__0_1 (\mul_count_reg[2]_rep__0_1 ),
        .\mul_count_reg[2]_rep__0_10 (\mul_count_reg[2]_rep__0_10 ),
        .\mul_count_reg[2]_rep__0_11 (\mul_count_reg[2]_rep__0_11 ),
        .\mul_count_reg[2]_rep__0_12 (\mul_count_reg[2]_rep__0_12 ),
        .\mul_count_reg[2]_rep__0_13 (\mul_count_reg[2]_rep__0_13 ),
        .\mul_count_reg[2]_rep__0_14 (\mul_count_reg[2]_rep__0_14 ),
        .\mul_count_reg[2]_rep__0_2 (\mul_count_reg[2]_rep__0_2 ),
        .\mul_count_reg[2]_rep__0_3 (\mul_count_reg[2]_rep__0_3 ),
        .\mul_count_reg[2]_rep__0_4 (\mul_count_reg[2]_rep__0_4 ),
        .\mul_count_reg[2]_rep__0_5 (\mul_count_reg[2]_rep__0_5 ),
        .\mul_count_reg[2]_rep__0_6 (\mul_count_reg[2]_rep__0_6 ),
        .\mul_count_reg[2]_rep__0_7 (\mul_count_reg[2]_rep__0_7 ),
        .\mul_count_reg[2]_rep__0_8 (\mul_count_reg[2]_rep__0_8 ),
        .\mul_count_reg[2]_rep__0_9 (\mul_count_reg[2]_rep__0_9 ),
        .out(present_state__0),
        .\write_count_reg[0] (\write_count_reg[0] ),
        .\write_count_reg[0]_0 (\write_count_reg[0]_0 ),
        .\write_count_reg[0]_1 (\write_count_reg[0]_1 ),
        .\write_count_reg[0]_10 (\write_count_reg[0]_10 ),
        .\write_count_reg[0]_11 (\write_count_reg[0]_11 ),
        .\write_count_reg[0]_12 (\write_count_reg[0]_12 ),
        .\write_count_reg[0]_13 (\write_count_reg[0]_13 ),
        .\write_count_reg[0]_14 (\write_count_reg[0]_14 ),
        .\write_count_reg[0]_2 (\write_count_reg[0]_2 ),
        .\write_count_reg[0]_3 (\write_count_reg[0]_3 ),
        .\write_count_reg[0]_4 (\write_count_reg[0]_4 ),
        .\write_count_reg[0]_5 (\write_count_reg[0]_5 ),
        .\write_count_reg[0]_6 (\write_count_reg[0]_6 ),
        .\write_count_reg[0]_7 (\write_count_reg[0]_7 ),
        .\write_count_reg[0]_8 (\write_count_reg[0]_8 ),
        .\write_count_reg[0]_9 (\write_count_reg[0]_9 ));
  simple_multiplier_17 \generate_mac_units[2].mul0 
       (.\ACC_reg[15] (\ACC_reg[15]_0 ),
        .CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\S2[2][32] (\S2[2][32] ),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0 ),
        .\mul_count_reg[2]_rep__0_0 (\mul_count_reg[2]_rep__0_0 ),
        .\mul_count_reg[2]_rep__0_1 (\mul_count_reg[2]_rep__0_1 ),
        .\mul_count_reg[2]_rep__0_10 (\mul_count_reg[2]_rep__0_10 ),
        .\mul_count_reg[2]_rep__0_11 (\mul_count_reg[2]_rep__0_11 ),
        .\mul_count_reg[2]_rep__0_12 (\mul_count_reg[2]_rep__0_12 ),
        .\mul_count_reg[2]_rep__0_13 (\mul_count_reg[2]_rep__0_13 ),
        .\mul_count_reg[2]_rep__0_14 (\mul_count_reg[2]_rep__0_14 ),
        .\mul_count_reg[2]_rep__0_2 (\mul_count_reg[2]_rep__0_2 ),
        .\mul_count_reg[2]_rep__0_3 (\mul_count_reg[2]_rep__0_3 ),
        .\mul_count_reg[2]_rep__0_4 (\mul_count_reg[2]_rep__0_4 ),
        .\mul_count_reg[2]_rep__0_5 (\mul_count_reg[2]_rep__0_5 ),
        .\mul_count_reg[2]_rep__0_6 (\mul_count_reg[2]_rep__0_6 ),
        .\mul_count_reg[2]_rep__0_7 (\mul_count_reg[2]_rep__0_7 ),
        .\mul_count_reg[2]_rep__0_8 (\mul_count_reg[2]_rep__0_8 ),
        .\mul_count_reg[2]_rep__0_9 (\mul_count_reg[2]_rep__0_9 ),
        .out(present_state__0),
        .\write_count_reg[0]_rep (\write_count_reg[0]_rep_15 ),
        .\write_count_reg[0]_rep_0 (\write_count_reg[0]_rep_16 ),
        .\write_count_reg[0]_rep_1 (\write_count_reg[0]_rep_17 ),
        .\write_count_reg[0]_rep_10 (\write_count_reg[0]_rep_26 ),
        .\write_count_reg[0]_rep_11 (\write_count_reg[0]_rep_27 ),
        .\write_count_reg[0]_rep_12 (\write_count_reg[0]_rep_28 ),
        .\write_count_reg[0]_rep_13 (\write_count_reg[0]_rep_29 ),
        .\write_count_reg[0]_rep_14 (\write_count_reg[0]_rep_30 ),
        .\write_count_reg[0]_rep_2 (\write_count_reg[0]_rep_18 ),
        .\write_count_reg[0]_rep_3 (\write_count_reg[0]_rep_19 ),
        .\write_count_reg[0]_rep_4 (\write_count_reg[0]_rep_20 ),
        .\write_count_reg[0]_rep_5 (\write_count_reg[0]_rep_21 ),
        .\write_count_reg[0]_rep_6 (\write_count_reg[0]_rep_22 ),
        .\write_count_reg[0]_rep_7 (\write_count_reg[0]_rep_23 ),
        .\write_count_reg[0]_rep_8 (\write_count_reg[0]_rep_24 ),
        .\write_count_reg[0]_rep_9 (\write_count_reg[0]_rep_25 ));
  simple_multiplier_18 \generate_mac_units[3].mul0 
       (.\ACC_reg[15] (\ACC_reg[15]_1 ),
        .CE_common_reg(CE_common_reg_n_0),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .RST_IBUF(RST_IBUF),
        .\S2[3][32] (\S2[3][32] ),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0 ),
        .\mul_count_reg[2]_rep__0_0 (\mul_count_reg[2]_rep__0_0 ),
        .\mul_count_reg[2]_rep__0_1 (\mul_count_reg[2]_rep__0_1 ),
        .\mul_count_reg[2]_rep__0_10 (\mul_count_reg[2]_rep__0_10 ),
        .\mul_count_reg[2]_rep__0_11 (\mul_count_reg[2]_rep__0_11 ),
        .\mul_count_reg[2]_rep__0_12 (\mul_count_reg[2]_rep__0_12 ),
        .\mul_count_reg[2]_rep__0_13 (\mul_count_reg[2]_rep__0_13 ),
        .\mul_count_reg[2]_rep__0_14 (\mul_count_reg[2]_rep__0_14 ),
        .\mul_count_reg[2]_rep__0_2 (\mul_count_reg[2]_rep__0_2 ),
        .\mul_count_reg[2]_rep__0_3 (\mul_count_reg[2]_rep__0_3 ),
        .\mul_count_reg[2]_rep__0_4 (\mul_count_reg[2]_rep__0_4 ),
        .\mul_count_reg[2]_rep__0_5 (\mul_count_reg[2]_rep__0_5 ),
        .\mul_count_reg[2]_rep__0_6 (\mul_count_reg[2]_rep__0_6 ),
        .\mul_count_reg[2]_rep__0_7 (\mul_count_reg[2]_rep__0_7 ),
        .\mul_count_reg[2]_rep__0_8 (\mul_count_reg[2]_rep__0_8 ),
        .\mul_count_reg[2]_rep__0_9 (\mul_count_reg[2]_rep__0_9 ),
        .out(present_state__0),
        .\write_count_reg[0] (\write_count_reg[0]_15 ),
        .\write_count_reg[0]_0 (\write_count_reg[0]_16 ),
        .\write_count_reg[0]_1 (\write_count_reg[0]_17 ),
        .\write_count_reg[0]_10 (\write_count_reg[0]_26 ),
        .\write_count_reg[0]_11 (\write_count_reg[0]_27 ),
        .\write_count_reg[0]_12 (\write_count_reg[0]_28 ),
        .\write_count_reg[0]_13 (\write_count_reg[0]_29 ),
        .\write_count_reg[0]_14 (\write_count_reg[0]_30 ),
        .\write_count_reg[0]_2 (\write_count_reg[0]_18 ),
        .\write_count_reg[0]_3 (\write_count_reg[0]_19 ),
        .\write_count_reg[0]_4 (\write_count_reg[0]_20 ),
        .\write_count_reg[0]_5 (\write_count_reg[0]_21 ),
        .\write_count_reg[0]_6 (\write_count_reg[0]_22 ),
        .\write_count_reg[0]_7 (\write_count_reg[0]_23 ),
        .\write_count_reg[0]_8 (\write_count_reg[0]_24 ),
        .\write_count_reg[0]_9 (\write_count_reg[0]_25 ));
  LUT6 #(
    .INIT(64'h0000FFF40000FFFF)) 
    \loop_counter[0]_i_1__1 
       (.I0(present_state__0[1]),
        .I1(present_state__0[0]),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .I4(\loop_counter_reg_n_0_[0] ),
        .I5(\loop_counter_reg_n_0_[1] ),
        .O(loop_counter[0]));
  LUT6 #(
    .INIT(64'h0000FFF4FFBF0000)) 
    \loop_counter[1]_i_1__0 
       (.I0(present_state__0[1]),
        .I1(present_state__0[0]),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[2] ),
        .I4(\loop_counter_reg_n_0_[0] ),
        .I5(\loop_counter_reg_n_0_[1] ),
        .O(loop_counter[1]));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT3 #(
    .INIT(8'h6A)) 
    \loop_counter[2]_i_1__1 
       (.I0(\loop_counter_reg_n_0_[2] ),
        .I1(\loop_counter_reg_n_0_[1] ),
        .I2(\loop_counter_reg_n_0_[0] ),
        .O(loop_counter[2]));
  LUT3 #(
    .INIT(8'h48)) 
    \loop_counter[3]_i_1__1 
       (.I0(present_state__0[1]),
        .I1(cestat_OBUF),
        .I2(present_state__0[0]),
        .O(\loop_counter[3]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h0FF0F0F0F0B0F0F0)) 
    \loop_counter[3]_i_2__0 
       (.I0(present_state__0[1]),
        .I1(present_state__0[0]),
        .I2(\loop_counter_reg_n_0_[3] ),
        .I3(\loop_counter_reg_n_0_[1] ),
        .I4(\loop_counter_reg_n_0_[0] ),
        .I5(\loop_counter_reg_n_0_[2] ),
        .O(loop_counter[3]));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__1_n_0 ),
        .D(loop_counter[0]),
        .Q(\loop_counter_reg_n_0_[0] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__1_n_0 ),
        .D(loop_counter[1]),
        .Q(\loop_counter_reg_n_0_[1] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__1_n_0 ),
        .D(loop_counter[2]),
        .Q(\loop_counter_reg_n_0_[2] ),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \loop_counter_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(\loop_counter[3]_i_1__1_n_0 ),
        .D(loop_counter[3]),
        .Q(\loop_counter_reg_n_0_[3] ),
        .R(RST_IBUF));
endmodule

module multiplier_with_adder
   (Q,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    ACC_reg,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    ACC_reg_0,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_rep_0 ,
    \write_count_reg[0]_rep_1 ,
    \write_count_reg[0]_rep_2 ,
    \write_count_reg[0]_rep_3 ,
    \write_count_reg[0]_rep_4 ,
    \write_count_reg[0]_rep_5 ,
    \write_count_reg[0]_rep_6 ,
    \write_count_reg[0]_rep_7 ,
    \write_count_reg[0]_rep_8 ,
    \write_count_reg[0]_rep_9 ,
    \write_count_reg[0]_rep_10 ,
    \write_count_reg[0]_rep_11 ,
    \write_count_reg[0]_rep_12 ,
    \write_count_reg[0]_rep_13 ,
    \write_count_reg[0]_rep_14 );
  output [32:0]Q;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [15:0]ACC_reg;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]ACC_reg_0;
  input \write_count_reg[0]_rep ;
  input \write_count_reg[0]_rep_0 ;
  input \write_count_reg[0]_rep_1 ;
  input \write_count_reg[0]_rep_2 ;
  input \write_count_reg[0]_rep_3 ;
  input \write_count_reg[0]_rep_4 ;
  input \write_count_reg[0]_rep_5 ;
  input \write_count_reg[0]_rep_6 ;
  input \write_count_reg[0]_rep_7 ;
  input \write_count_reg[0]_rep_8 ;
  input \write_count_reg[0]_rep_9 ;
  input \write_count_reg[0]_rep_10 ;
  input \write_count_reg[0]_rep_11 ;
  input \write_count_reg[0]_rep_12 ;
  input \write_count_reg[0]_rep_13 ;
  input \write_count_reg[0]_rep_14 ;

  wire \ACC[11]_i_2_n_0 ;
  wire \ACC[11]_i_3_n_0 ;
  wire \ACC[11]_i_4_n_0 ;
  wire \ACC[11]_i_5_n_0 ;
  wire \ACC[15]_i_2_n_0 ;
  wire \ACC[15]_i_3_n_0 ;
  wire \ACC[15]_i_4_n_0 ;
  wire \ACC[15]_i_5_n_0 ;
  wire \ACC[19]_i_2_n_0 ;
  wire \ACC[19]_i_3_n_0 ;
  wire \ACC[19]_i_4_n_0 ;
  wire \ACC[19]_i_5_n_0 ;
  wire \ACC[23]_i_2_n_0 ;
  wire \ACC[23]_i_3_n_0 ;
  wire \ACC[23]_i_4_n_0 ;
  wire \ACC[23]_i_5_n_0 ;
  wire \ACC[27]_i_2_n_0 ;
  wire \ACC[27]_i_3_n_0 ;
  wire \ACC[27]_i_4_n_0 ;
  wire \ACC[27]_i_5_n_0 ;
  wire \ACC[31]_i_2_n_0 ;
  wire \ACC[31]_i_3_n_0 ;
  wire \ACC[31]_i_4_n_0 ;
  wire \ACC[31]_i_5_n_0 ;
  wire \ACC[32]_i_2_n_0 ;
  wire \ACC[3]_i_2_n_0 ;
  wire \ACC[3]_i_3_n_0 ;
  wire \ACC[3]_i_4_n_0 ;
  wire \ACC[3]_i_5_n_0 ;
  wire \ACC[7]_i_2_n_0 ;
  wire \ACC[7]_i_3_n_0 ;
  wire \ACC[7]_i_4_n_0 ;
  wire \ACC[7]_i_5_n_0 ;
  wire [15:0]ACC_reg;
  wire \ACC_reg[11]_i_1_n_0 ;
  wire \ACC_reg[11]_i_1_n_1 ;
  wire \ACC_reg[11]_i_1_n_2 ;
  wire \ACC_reg[11]_i_1_n_3 ;
  wire \ACC_reg[11]_i_1_n_4 ;
  wire \ACC_reg[11]_i_1_n_5 ;
  wire \ACC_reg[11]_i_1_n_6 ;
  wire \ACC_reg[11]_i_1_n_7 ;
  wire \ACC_reg[15]_i_1_n_0 ;
  wire \ACC_reg[15]_i_1_n_1 ;
  wire \ACC_reg[15]_i_1_n_2 ;
  wire \ACC_reg[15]_i_1_n_3 ;
  wire \ACC_reg[15]_i_1_n_4 ;
  wire \ACC_reg[15]_i_1_n_5 ;
  wire \ACC_reg[15]_i_1_n_6 ;
  wire \ACC_reg[15]_i_1_n_7 ;
  wire \ACC_reg[19]_i_1_n_0 ;
  wire \ACC_reg[19]_i_1_n_1 ;
  wire \ACC_reg[19]_i_1_n_2 ;
  wire \ACC_reg[19]_i_1_n_3 ;
  wire \ACC_reg[19]_i_1_n_4 ;
  wire \ACC_reg[19]_i_1_n_5 ;
  wire \ACC_reg[19]_i_1_n_6 ;
  wire \ACC_reg[19]_i_1_n_7 ;
  wire \ACC_reg[23]_i_1_n_0 ;
  wire \ACC_reg[23]_i_1_n_1 ;
  wire \ACC_reg[23]_i_1_n_2 ;
  wire \ACC_reg[23]_i_1_n_3 ;
  wire \ACC_reg[23]_i_1_n_4 ;
  wire \ACC_reg[23]_i_1_n_5 ;
  wire \ACC_reg[23]_i_1_n_6 ;
  wire \ACC_reg[23]_i_1_n_7 ;
  wire \ACC_reg[27]_i_1_n_0 ;
  wire \ACC_reg[27]_i_1_n_1 ;
  wire \ACC_reg[27]_i_1_n_2 ;
  wire \ACC_reg[27]_i_1_n_3 ;
  wire \ACC_reg[27]_i_1_n_4 ;
  wire \ACC_reg[27]_i_1_n_5 ;
  wire \ACC_reg[27]_i_1_n_6 ;
  wire \ACC_reg[27]_i_1_n_7 ;
  wire \ACC_reg[31]_i_1_n_0 ;
  wire \ACC_reg[31]_i_1_n_1 ;
  wire \ACC_reg[31]_i_1_n_2 ;
  wire \ACC_reg[31]_i_1_n_3 ;
  wire \ACC_reg[31]_i_1_n_4 ;
  wire \ACC_reg[31]_i_1_n_5 ;
  wire \ACC_reg[31]_i_1_n_6 ;
  wire \ACC_reg[31]_i_1_n_7 ;
  wire \ACC_reg[32]_i_1_n_7 ;
  wire \ACC_reg[3]_i_1_n_0 ;
  wire \ACC_reg[3]_i_1_n_1 ;
  wire \ACC_reg[3]_i_1_n_2 ;
  wire \ACC_reg[3]_i_1_n_3 ;
  wire \ACC_reg[3]_i_1_n_4 ;
  wire \ACC_reg[3]_i_1_n_5 ;
  wire \ACC_reg[3]_i_1_n_6 ;
  wire \ACC_reg[3]_i_1_n_7 ;
  wire \ACC_reg[7]_i_1_n_0 ;
  wire \ACC_reg[7]_i_1_n_1 ;
  wire \ACC_reg[7]_i_1_n_2 ;
  wire \ACC_reg[7]_i_1_n_3 ;
  wire \ACC_reg[7]_i_1_n_4 ;
  wire \ACC_reg[7]_i_1_n_5 ;
  wire \ACC_reg[7]_i_1_n_6 ;
  wire \ACC_reg[7]_i_1_n_7 ;
  wire [15:0]ACC_reg_0;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire MULTR0_i_10_n_0;
  wire MULTR0_i_11_n_0;
  wire MULTR0_i_12_n_0;
  wire MULTR0_i_13_n_0;
  wire MULTR0_i_14_n_0;
  wire MULTR0_i_15_n_0;
  wire MULTR0_i_16_n_0;
  wire MULTR0_i_17__2_n_0;
  wire MULTR0_i_18__2_n_0;
  wire MULTR0_i_19__2_n_0;
  wire MULTR0_i_1_n_0;
  wire MULTR0_i_20__2_n_0;
  wire MULTR0_i_21__2_n_0;
  wire MULTR0_i_22__2_n_0;
  wire MULTR0_i_23__2_n_0;
  wire MULTR0_i_24__2_n_0;
  wire MULTR0_i_25__2_n_0;
  wire MULTR0_i_26__2_n_0;
  wire MULTR0_i_27__2_n_0;
  wire MULTR0_i_28__2_n_0;
  wire MULTR0_i_29__2_n_0;
  wire MULTR0_i_2_n_0;
  wire MULTR0_i_30__2_n_0;
  wire MULTR0_i_31__2_n_0;
  wire MULTR0_i_32__2_n_0;
  wire MULTR0_i_3_n_0;
  wire MULTR0_i_4_n_0;
  wire MULTR0_i_5_n_0;
  wire MULTR0_i_6_n_0;
  wire MULTR0_i_7_n_0;
  wire MULTR0_i_8_n_0;
  wire MULTR0_i_9_n_0;
  wire MULTR0_n_100;
  wire MULTR0_n_101;
  wire MULTR0_n_102;
  wire MULTR0_n_103;
  wire MULTR0_n_104;
  wire MULTR0_n_105;
  wire MULTR0_n_74;
  wire MULTR0_n_75;
  wire MULTR0_n_76;
  wire MULTR0_n_77;
  wire MULTR0_n_78;
  wire MULTR0_n_79;
  wire MULTR0_n_80;
  wire MULTR0_n_81;
  wire MULTR0_n_82;
  wire MULTR0_n_83;
  wire MULTR0_n_84;
  wire MULTR0_n_85;
  wire MULTR0_n_86;
  wire MULTR0_n_87;
  wire MULTR0_n_88;
  wire MULTR0_n_89;
  wire MULTR0_n_90;
  wire MULTR0_n_91;
  wire MULTR0_n_92;
  wire MULTR0_n_93;
  wire MULTR0_n_94;
  wire MULTR0_n_95;
  wire MULTR0_n_96;
  wire MULTR0_n_97;
  wire MULTR0_n_98;
  wire MULTR0_n_99;
  wire [32:0]Q;
  wire RST_IBUF;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0]_rep ;
  wire \write_count_reg[0]_rep_0 ;
  wire \write_count_reg[0]_rep_1 ;
  wire \write_count_reg[0]_rep_10 ;
  wire \write_count_reg[0]_rep_11 ;
  wire \write_count_reg[0]_rep_12 ;
  wire \write_count_reg[0]_rep_13 ;
  wire \write_count_reg[0]_rep_14 ;
  wire \write_count_reg[0]_rep_2 ;
  wire \write_count_reg[0]_rep_3 ;
  wire \write_count_reg[0]_rep_4 ;
  wire \write_count_reg[0]_rep_5 ;
  wire \write_count_reg[0]_rep_6 ;
  wire \write_count_reg[0]_rep_7 ;
  wire \write_count_reg[0]_rep_8 ;
  wire \write_count_reg[0]_rep_9 ;
  wire [3:0]\NLW_ACC_reg[32]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_ACC_reg[32]_i_1_O_UNCONNECTED ;
  wire NLW_MULTR0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_MULTR0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_MULTR0_OVERFLOW_UNCONNECTED;
  wire NLW_MULTR0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_MULTR0_PATTERNDETECT_UNCONNECTED;
  wire NLW_MULTR0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_MULTR0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_MULTR0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_MULTR0_CARRYOUT_UNCONNECTED;
  wire [47:32]NLW_MULTR0_P_UNCONNECTED;
  wire [47:0]NLW_MULTR0_PCOUT_UNCONNECTED;

  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_2 
       (.I0(MULTR0_n_94),
        .I1(Q[11]),
        .O(\ACC[11]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_3 
       (.I0(MULTR0_n_95),
        .I1(Q[10]),
        .O(\ACC[11]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_4 
       (.I0(MULTR0_n_96),
        .I1(Q[9]),
        .O(\ACC[11]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_5 
       (.I0(MULTR0_n_97),
        .I1(Q[8]),
        .O(\ACC[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_2 
       (.I0(MULTR0_n_90),
        .I1(Q[15]),
        .O(\ACC[15]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_3 
       (.I0(MULTR0_n_91),
        .I1(Q[14]),
        .O(\ACC[15]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_4 
       (.I0(MULTR0_n_92),
        .I1(Q[13]),
        .O(\ACC[15]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_5 
       (.I0(MULTR0_n_93),
        .I1(Q[12]),
        .O(\ACC[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_2 
       (.I0(MULTR0_n_86),
        .I1(Q[19]),
        .O(\ACC[19]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_3 
       (.I0(MULTR0_n_87),
        .I1(Q[18]),
        .O(\ACC[19]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_4 
       (.I0(MULTR0_n_88),
        .I1(Q[17]),
        .O(\ACC[19]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_5 
       (.I0(MULTR0_n_89),
        .I1(Q[16]),
        .O(\ACC[19]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_2 
       (.I0(MULTR0_n_82),
        .I1(Q[23]),
        .O(\ACC[23]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_3 
       (.I0(MULTR0_n_83),
        .I1(Q[22]),
        .O(\ACC[23]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_4 
       (.I0(MULTR0_n_84),
        .I1(Q[21]),
        .O(\ACC[23]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_5 
       (.I0(MULTR0_n_85),
        .I1(Q[20]),
        .O(\ACC[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_2 
       (.I0(MULTR0_n_78),
        .I1(Q[27]),
        .O(\ACC[27]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_3 
       (.I0(MULTR0_n_79),
        .I1(Q[26]),
        .O(\ACC[27]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_4 
       (.I0(MULTR0_n_80),
        .I1(Q[25]),
        .O(\ACC[27]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_5 
       (.I0(MULTR0_n_81),
        .I1(Q[24]),
        .O(\ACC[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_2 
       (.I0(MULTR0_n_74),
        .I1(Q[31]),
        .O(\ACC[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_3 
       (.I0(MULTR0_n_75),
        .I1(Q[30]),
        .O(\ACC[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_4 
       (.I0(MULTR0_n_76),
        .I1(Q[29]),
        .O(\ACC[31]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_5 
       (.I0(MULTR0_n_77),
        .I1(Q[28]),
        .O(\ACC[31]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[32]_i_2 
       (.I0(MULTR0_n_74),
        .I1(Q[32]),
        .O(\ACC[32]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_2 
       (.I0(MULTR0_n_102),
        .I1(Q[3]),
        .O(\ACC[3]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_3 
       (.I0(MULTR0_n_103),
        .I1(Q[2]),
        .O(\ACC[3]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_4 
       (.I0(MULTR0_n_104),
        .I1(Q[1]),
        .O(\ACC[3]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_5 
       (.I0(MULTR0_n_105),
        .I1(Q[0]),
        .O(\ACC[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_2 
       (.I0(MULTR0_n_98),
        .I1(Q[7]),
        .O(\ACC[7]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_3 
       (.I0(MULTR0_n_99),
        .I1(Q[6]),
        .O(\ACC[7]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_4 
       (.I0(MULTR0_n_100),
        .I1(Q[5]),
        .O(\ACC[7]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_5 
       (.I0(MULTR0_n_101),
        .I1(Q[4]),
        .O(\ACC[7]_i_5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1_n_7 ),
        .Q(Q[0]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[10] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1_n_5 ),
        .Q(Q[10]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[11] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1_n_4 ),
        .Q(Q[11]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[11]_i_1 
       (.CI(\ACC_reg[7]_i_1_n_0 ),
        .CO({\ACC_reg[11]_i_1_n_0 ,\ACC_reg[11]_i_1_n_1 ,\ACC_reg[11]_i_1_n_2 ,\ACC_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_94,MULTR0_n_95,MULTR0_n_96,MULTR0_n_97}),
        .O({\ACC_reg[11]_i_1_n_4 ,\ACC_reg[11]_i_1_n_5 ,\ACC_reg[11]_i_1_n_6 ,\ACC_reg[11]_i_1_n_7 }),
        .S({\ACC[11]_i_2_n_0 ,\ACC[11]_i_3_n_0 ,\ACC[11]_i_4_n_0 ,\ACC[11]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[12] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1_n_7 ),
        .Q(Q[12]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[13] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1_n_6 ),
        .Q(Q[13]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[14] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1_n_5 ),
        .Q(Q[14]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[15] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1_n_4 ),
        .Q(Q[15]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[15]_i_1 
       (.CI(\ACC_reg[11]_i_1_n_0 ),
        .CO({\ACC_reg[15]_i_1_n_0 ,\ACC_reg[15]_i_1_n_1 ,\ACC_reg[15]_i_1_n_2 ,\ACC_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_90,MULTR0_n_91,MULTR0_n_92,MULTR0_n_93}),
        .O({\ACC_reg[15]_i_1_n_4 ,\ACC_reg[15]_i_1_n_5 ,\ACC_reg[15]_i_1_n_6 ,\ACC_reg[15]_i_1_n_7 }),
        .S({\ACC[15]_i_2_n_0 ,\ACC[15]_i_3_n_0 ,\ACC[15]_i_4_n_0 ,\ACC[15]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[16] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1_n_7 ),
        .Q(Q[16]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[17] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1_n_6 ),
        .Q(Q[17]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[18] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1_n_5 ),
        .Q(Q[18]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[19] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1_n_4 ),
        .Q(Q[19]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[19]_i_1 
       (.CI(\ACC_reg[15]_i_1_n_0 ),
        .CO({\ACC_reg[19]_i_1_n_0 ,\ACC_reg[19]_i_1_n_1 ,\ACC_reg[19]_i_1_n_2 ,\ACC_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_86,MULTR0_n_87,MULTR0_n_88,MULTR0_n_89}),
        .O({\ACC_reg[19]_i_1_n_4 ,\ACC_reg[19]_i_1_n_5 ,\ACC_reg[19]_i_1_n_6 ,\ACC_reg[19]_i_1_n_7 }),
        .S({\ACC[19]_i_2_n_0 ,\ACC[19]_i_3_n_0 ,\ACC[19]_i_4_n_0 ,\ACC[19]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1_n_6 ),
        .Q(Q[1]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[20] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1_n_7 ),
        .Q(Q[20]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[21] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1_n_6 ),
        .Q(Q[21]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[22] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1_n_5 ),
        .Q(Q[22]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[23] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1_n_4 ),
        .Q(Q[23]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[23]_i_1 
       (.CI(\ACC_reg[19]_i_1_n_0 ),
        .CO({\ACC_reg[23]_i_1_n_0 ,\ACC_reg[23]_i_1_n_1 ,\ACC_reg[23]_i_1_n_2 ,\ACC_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_82,MULTR0_n_83,MULTR0_n_84,MULTR0_n_85}),
        .O({\ACC_reg[23]_i_1_n_4 ,\ACC_reg[23]_i_1_n_5 ,\ACC_reg[23]_i_1_n_6 ,\ACC_reg[23]_i_1_n_7 }),
        .S({\ACC[23]_i_2_n_0 ,\ACC[23]_i_3_n_0 ,\ACC[23]_i_4_n_0 ,\ACC[23]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[24] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1_n_7 ),
        .Q(Q[24]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[25] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1_n_6 ),
        .Q(Q[25]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[26] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1_n_5 ),
        .Q(Q[26]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[27] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1_n_4 ),
        .Q(Q[27]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[27]_i_1 
       (.CI(\ACC_reg[23]_i_1_n_0 ),
        .CO({\ACC_reg[27]_i_1_n_0 ,\ACC_reg[27]_i_1_n_1 ,\ACC_reg[27]_i_1_n_2 ,\ACC_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_78,MULTR0_n_79,MULTR0_n_80,MULTR0_n_81}),
        .O({\ACC_reg[27]_i_1_n_4 ,\ACC_reg[27]_i_1_n_5 ,\ACC_reg[27]_i_1_n_6 ,\ACC_reg[27]_i_1_n_7 }),
        .S({\ACC[27]_i_2_n_0 ,\ACC[27]_i_3_n_0 ,\ACC[27]_i_4_n_0 ,\ACC[27]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[28] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1_n_7 ),
        .Q(Q[28]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[29] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1_n_6 ),
        .Q(Q[29]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1_n_5 ),
        .Q(Q[2]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[30] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1_n_5 ),
        .Q(Q[30]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[31] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1_n_4 ),
        .Q(Q[31]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[31]_i_1 
       (.CI(\ACC_reg[27]_i_1_n_0 ),
        .CO({\ACC_reg[31]_i_1_n_0 ,\ACC_reg[31]_i_1_n_1 ,\ACC_reg[31]_i_1_n_2 ,\ACC_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_74,MULTR0_n_75,MULTR0_n_76,MULTR0_n_77}),
        .O({\ACC_reg[31]_i_1_n_4 ,\ACC_reg[31]_i_1_n_5 ,\ACC_reg[31]_i_1_n_6 ,\ACC_reg[31]_i_1_n_7 }),
        .S({\ACC[31]_i_2_n_0 ,\ACC[31]_i_3_n_0 ,\ACC[31]_i_4_n_0 ,\ACC[31]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[32] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[32]_i_1_n_7 ),
        .Q(Q[32]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[32]_i_1 
       (.CI(\ACC_reg[31]_i_1_n_0 ),
        .CO(\NLW_ACC_reg[32]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_ACC_reg[32]_i_1_O_UNCONNECTED [3:1],\ACC_reg[32]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,\ACC[32]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1_n_4 ),
        .Q(Q[3]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\ACC_reg[3]_i_1_n_0 ,\ACC_reg[3]_i_1_n_1 ,\ACC_reg[3]_i_1_n_2 ,\ACC_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_102,MULTR0_n_103,MULTR0_n_104,MULTR0_n_105}),
        .O({\ACC_reg[3]_i_1_n_4 ,\ACC_reg[3]_i_1_n_5 ,\ACC_reg[3]_i_1_n_6 ,\ACC_reg[3]_i_1_n_7 }),
        .S({\ACC[3]_i_2_n_0 ,\ACC[3]_i_3_n_0 ,\ACC[3]_i_4_n_0 ,\ACC[3]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[4] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1_n_7 ),
        .Q(Q[4]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[5] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1_n_6 ),
        .Q(Q[5]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[6] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1_n_5 ),
        .Q(Q[6]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[7] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1_n_4 ),
        .Q(Q[7]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[7]_i_1 
       (.CI(\ACC_reg[3]_i_1_n_0 ),
        .CO({\ACC_reg[7]_i_1_n_0 ,\ACC_reg[7]_i_1_n_1 ,\ACC_reg[7]_i_1_n_2 ,\ACC_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_98,MULTR0_n_99,MULTR0_n_100,MULTR0_n_101}),
        .O({\ACC_reg[7]_i_1_n_4 ,\ACC_reg[7]_i_1_n_5 ,\ACC_reg[7]_i_1_n_6 ,\ACC_reg[7]_i_1_n_7 }),
        .S({\ACC[7]_i_2_n_0 ,\ACC[7]_i_3_n_0 ,\ACC[7]_i_4_n_0 ,\ACC[7]_i_5_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[8] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1_n_7 ),
        .Q(Q[8]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[9] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1_n_6 ),
        .Q(Q[9]),
        .R(RST_IBUF));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    MULTR0
       (.A({MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_17__2_n_0,MULTR0_i_18__2_n_0,MULTR0_i_19__2_n_0,MULTR0_i_20__2_n_0,MULTR0_i_21__2_n_0,MULTR0_i_22__2_n_0,MULTR0_i_23__2_n_0,MULTR0_i_24__2_n_0,MULTR0_i_25__2_n_0,MULTR0_i_26__2_n_0,MULTR0_i_27__2_n_0,MULTR0_i_28__2_n_0,MULTR0_i_29__2_n_0,MULTR0_i_30__2_n_0,MULTR0_i_31__2_n_0,MULTR0_i_32__2_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_MULTR0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({MULTR0_i_1_n_0,MULTR0_i_1_n_0,MULTR0_i_1_n_0,MULTR0_i_2_n_0,MULTR0_i_3_n_0,MULTR0_i_4_n_0,MULTR0_i_5_n_0,MULTR0_i_6_n_0,MULTR0_i_7_n_0,MULTR0_i_8_n_0,MULTR0_i_9_n_0,MULTR0_i_10_n_0,MULTR0_i_11_n_0,MULTR0_i_12_n_0,MULTR0_i_13_n_0,MULTR0_i_14_n_0,MULTR0_i_15_n_0,MULTR0_i_16_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_MULTR0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_MULTR0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_MULTR0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_MULTR0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_MULTR0_OVERFLOW_UNCONNECTED),
        .P({NLW_MULTR0_P_UNCONNECTED[47:32],MULTR0_n_74,MULTR0_n_75,MULTR0_n_76,MULTR0_n_77,MULTR0_n_78,MULTR0_n_79,MULTR0_n_80,MULTR0_n_81,MULTR0_n_82,MULTR0_n_83,MULTR0_n_84,MULTR0_n_85,MULTR0_n_86,MULTR0_n_87,MULTR0_n_88,MULTR0_n_89,MULTR0_n_90,MULTR0_n_91,MULTR0_n_92,MULTR0_n_93,MULTR0_n_94,MULTR0_n_95,MULTR0_n_96,MULTR0_n_97,MULTR0_n_98,MULTR0_n_99,MULTR0_n_100,MULTR0_n_101,MULTR0_n_102,MULTR0_n_103,MULTR0_n_104,MULTR0_n_105}),
        .PATTERNBDETECT(NLW_MULTR0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_MULTR0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_MULTR0_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_MULTR0_UNDERFLOW_UNCONNECTED));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_1
       (.I0(ACC_reg_0[15]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep ),
        .I3(out[0]),
        .O(MULTR0_i_1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_10
       (.I0(ACC_reg_0[6]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_8 ),
        .I3(out[0]),
        .O(MULTR0_i_10_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_11
       (.I0(ACC_reg_0[5]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_9 ),
        .I3(out[0]),
        .O(MULTR0_i_11_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_12
       (.I0(ACC_reg_0[4]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_10 ),
        .I3(out[0]),
        .O(MULTR0_i_12_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_13
       (.I0(ACC_reg_0[3]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_11 ),
        .I3(out[0]),
        .O(MULTR0_i_13_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_14
       (.I0(ACC_reg_0[2]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_12 ),
        .I3(out[0]),
        .O(MULTR0_i_14_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_15
       (.I0(ACC_reg_0[1]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_13 ),
        .I3(out[0]),
        .O(MULTR0_i_15_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_16
       (.I0(ACC_reg_0[0]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_14 ),
        .I3(out[0]),
        .O(MULTR0_i_16_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_17__2
       (.I0(ACC_reg[15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(MULTR0_i_17__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_18__2
       (.I0(ACC_reg[14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(MULTR0_i_18__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_19__2
       (.I0(ACC_reg[13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(MULTR0_i_19__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_2
       (.I0(ACC_reg_0[14]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_0 ),
        .I3(out[0]),
        .O(MULTR0_i_2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_20__2
       (.I0(ACC_reg[12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(MULTR0_i_20__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_21__2
       (.I0(ACC_reg[11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(MULTR0_i_21__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_22__2
       (.I0(ACC_reg[10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(MULTR0_i_22__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_23__2
       (.I0(ACC_reg[9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(MULTR0_i_23__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_24__2
       (.I0(ACC_reg[8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(MULTR0_i_24__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_25__2
       (.I0(ACC_reg[7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(MULTR0_i_25__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_26__2
       (.I0(ACC_reg[6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(MULTR0_i_26__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_27__2
       (.I0(ACC_reg[5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(MULTR0_i_27__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_28__2
       (.I0(ACC_reg[4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(MULTR0_i_28__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_29__2
       (.I0(ACC_reg[3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(MULTR0_i_29__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_3
       (.I0(ACC_reg_0[13]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_1 ),
        .I3(out[0]),
        .O(MULTR0_i_3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_30__2
       (.I0(ACC_reg[2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(MULTR0_i_30__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_31__2
       (.I0(ACC_reg[1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(MULTR0_i_31__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_32__2
       (.I0(ACC_reg[0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(MULTR0_i_32__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_4
       (.I0(ACC_reg_0[12]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_2 ),
        .I3(out[0]),
        .O(MULTR0_i_4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_5
       (.I0(ACC_reg_0[11]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_3 ),
        .I3(out[0]),
        .O(MULTR0_i_5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_6
       (.I0(ACC_reg_0[10]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_4 ),
        .I3(out[0]),
        .O(MULTR0_i_6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_7
       (.I0(ACC_reg_0[9]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_5 ),
        .I3(out[0]),
        .O(MULTR0_i_7_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_8
       (.I0(ACC_reg_0[8]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_6 ),
        .I3(out[0]),
        .O(MULTR0_i_8_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_9
       (.I0(ACC_reg_0[7]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_7 ),
        .I3(out[0]),
        .O(MULTR0_i_9_n_0));
endmodule

(* ORIG_REF_NAME = "multiplier_with_adder" *) 
module multiplier_with_adder_23
   (\ACC_reg[32]_0 ,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    ACC_reg,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    ACC_reg_0,
    \write_count_reg[0] ,
    \write_count_reg[0]_0 ,
    \write_count_reg[0]_1 ,
    \write_count_reg[0]_2 ,
    \write_count_reg[0]_3 ,
    \write_count_reg[0]_4 ,
    \write_count_reg[0]_5 ,
    \write_count_reg[0]_6 ,
    \write_count_reg[0]_7 ,
    \write_count_reg[0]_8 ,
    \write_count_reg[0]_9 ,
    \write_count_reg[0]_10 ,
    \write_count_reg[0]_11 ,
    \write_count_reg[0]_12 ,
    \write_count_reg[0]_13 ,
    \write_count_reg[0]_14 );
  output [32:0]\ACC_reg[32]_0 ;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [15:0]ACC_reg;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]ACC_reg_0;
  input \write_count_reg[0] ;
  input \write_count_reg[0]_0 ;
  input \write_count_reg[0]_1 ;
  input \write_count_reg[0]_2 ;
  input \write_count_reg[0]_3 ;
  input \write_count_reg[0]_4 ;
  input \write_count_reg[0]_5 ;
  input \write_count_reg[0]_6 ;
  input \write_count_reg[0]_7 ;
  input \write_count_reg[0]_8 ;
  input \write_count_reg[0]_9 ;
  input \write_count_reg[0]_10 ;
  input \write_count_reg[0]_11 ;
  input \write_count_reg[0]_12 ;
  input \write_count_reg[0]_13 ;
  input \write_count_reg[0]_14 ;

  wire \ACC[11]_i_2__0_n_0 ;
  wire \ACC[11]_i_3__0_n_0 ;
  wire \ACC[11]_i_4__0_n_0 ;
  wire \ACC[11]_i_5__0_n_0 ;
  wire \ACC[15]_i_2__0_n_0 ;
  wire \ACC[15]_i_3__0_n_0 ;
  wire \ACC[15]_i_4__0_n_0 ;
  wire \ACC[15]_i_5__0_n_0 ;
  wire \ACC[19]_i_2__0_n_0 ;
  wire \ACC[19]_i_3__0_n_0 ;
  wire \ACC[19]_i_4__0_n_0 ;
  wire \ACC[19]_i_5__0_n_0 ;
  wire \ACC[23]_i_2__0_n_0 ;
  wire \ACC[23]_i_3__0_n_0 ;
  wire \ACC[23]_i_4__0_n_0 ;
  wire \ACC[23]_i_5__0_n_0 ;
  wire \ACC[27]_i_2__0_n_0 ;
  wire \ACC[27]_i_3__0_n_0 ;
  wire \ACC[27]_i_4__0_n_0 ;
  wire \ACC[27]_i_5__0_n_0 ;
  wire \ACC[31]_i_2__0_n_0 ;
  wire \ACC[31]_i_3__0_n_0 ;
  wire \ACC[31]_i_4__0_n_0 ;
  wire \ACC[31]_i_5__0_n_0 ;
  wire \ACC[32]_i_2__0_n_0 ;
  wire \ACC[3]_i_2__0_n_0 ;
  wire \ACC[3]_i_3__0_n_0 ;
  wire \ACC[3]_i_4__0_n_0 ;
  wire \ACC[3]_i_5__0_n_0 ;
  wire \ACC[7]_i_2__0_n_0 ;
  wire \ACC[7]_i_3__0_n_0 ;
  wire \ACC[7]_i_4__0_n_0 ;
  wire \ACC[7]_i_5__0_n_0 ;
  wire [15:0]ACC_reg;
  wire \ACC_reg[11]_i_1__0_n_0 ;
  wire \ACC_reg[11]_i_1__0_n_1 ;
  wire \ACC_reg[11]_i_1__0_n_2 ;
  wire \ACC_reg[11]_i_1__0_n_3 ;
  wire \ACC_reg[11]_i_1__0_n_4 ;
  wire \ACC_reg[11]_i_1__0_n_5 ;
  wire \ACC_reg[11]_i_1__0_n_6 ;
  wire \ACC_reg[11]_i_1__0_n_7 ;
  wire \ACC_reg[15]_i_1__0_n_0 ;
  wire \ACC_reg[15]_i_1__0_n_1 ;
  wire \ACC_reg[15]_i_1__0_n_2 ;
  wire \ACC_reg[15]_i_1__0_n_3 ;
  wire \ACC_reg[15]_i_1__0_n_4 ;
  wire \ACC_reg[15]_i_1__0_n_5 ;
  wire \ACC_reg[15]_i_1__0_n_6 ;
  wire \ACC_reg[15]_i_1__0_n_7 ;
  wire \ACC_reg[19]_i_1__0_n_0 ;
  wire \ACC_reg[19]_i_1__0_n_1 ;
  wire \ACC_reg[19]_i_1__0_n_2 ;
  wire \ACC_reg[19]_i_1__0_n_3 ;
  wire \ACC_reg[19]_i_1__0_n_4 ;
  wire \ACC_reg[19]_i_1__0_n_5 ;
  wire \ACC_reg[19]_i_1__0_n_6 ;
  wire \ACC_reg[19]_i_1__0_n_7 ;
  wire \ACC_reg[23]_i_1__0_n_0 ;
  wire \ACC_reg[23]_i_1__0_n_1 ;
  wire \ACC_reg[23]_i_1__0_n_2 ;
  wire \ACC_reg[23]_i_1__0_n_3 ;
  wire \ACC_reg[23]_i_1__0_n_4 ;
  wire \ACC_reg[23]_i_1__0_n_5 ;
  wire \ACC_reg[23]_i_1__0_n_6 ;
  wire \ACC_reg[23]_i_1__0_n_7 ;
  wire \ACC_reg[27]_i_1__0_n_0 ;
  wire \ACC_reg[27]_i_1__0_n_1 ;
  wire \ACC_reg[27]_i_1__0_n_2 ;
  wire \ACC_reg[27]_i_1__0_n_3 ;
  wire \ACC_reg[27]_i_1__0_n_4 ;
  wire \ACC_reg[27]_i_1__0_n_5 ;
  wire \ACC_reg[27]_i_1__0_n_6 ;
  wire \ACC_reg[27]_i_1__0_n_7 ;
  wire \ACC_reg[31]_i_1__0_n_0 ;
  wire \ACC_reg[31]_i_1__0_n_1 ;
  wire \ACC_reg[31]_i_1__0_n_2 ;
  wire \ACC_reg[31]_i_1__0_n_3 ;
  wire \ACC_reg[31]_i_1__0_n_4 ;
  wire \ACC_reg[31]_i_1__0_n_5 ;
  wire \ACC_reg[31]_i_1__0_n_6 ;
  wire \ACC_reg[31]_i_1__0_n_7 ;
  wire [32:0]\ACC_reg[32]_0 ;
  wire \ACC_reg[32]_i_1__0_n_7 ;
  wire \ACC_reg[3]_i_1__0_n_0 ;
  wire \ACC_reg[3]_i_1__0_n_1 ;
  wire \ACC_reg[3]_i_1__0_n_2 ;
  wire \ACC_reg[3]_i_1__0_n_3 ;
  wire \ACC_reg[3]_i_1__0_n_4 ;
  wire \ACC_reg[3]_i_1__0_n_5 ;
  wire \ACC_reg[3]_i_1__0_n_6 ;
  wire \ACC_reg[3]_i_1__0_n_7 ;
  wire \ACC_reg[7]_i_1__0_n_0 ;
  wire \ACC_reg[7]_i_1__0_n_1 ;
  wire \ACC_reg[7]_i_1__0_n_2 ;
  wire \ACC_reg[7]_i_1__0_n_3 ;
  wire \ACC_reg[7]_i_1__0_n_4 ;
  wire \ACC_reg[7]_i_1__0_n_5 ;
  wire \ACC_reg[7]_i_1__0_n_6 ;
  wire \ACC_reg[7]_i_1__0_n_7 ;
  wire [15:0]ACC_reg_0;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire MULTR0_i_10__0_n_0;
  wire MULTR0_i_11__0_n_0;
  wire MULTR0_i_12__0_n_0;
  wire MULTR0_i_13__0_n_0;
  wire MULTR0_i_14__0_n_0;
  wire MULTR0_i_15__0_n_0;
  wire MULTR0_i_16__0_n_0;
  wire MULTR0_i_17__1_n_0;
  wire MULTR0_i_18__1_n_0;
  wire MULTR0_i_19__1_n_0;
  wire MULTR0_i_1__0_n_0;
  wire MULTR0_i_20__1_n_0;
  wire MULTR0_i_21__1_n_0;
  wire MULTR0_i_22__1_n_0;
  wire MULTR0_i_23__1_n_0;
  wire MULTR0_i_24__1_n_0;
  wire MULTR0_i_25__1_n_0;
  wire MULTR0_i_26__1_n_0;
  wire MULTR0_i_27__1_n_0;
  wire MULTR0_i_28__1_n_0;
  wire MULTR0_i_29__1_n_0;
  wire MULTR0_i_2__0_n_0;
  wire MULTR0_i_30__1_n_0;
  wire MULTR0_i_31__1_n_0;
  wire MULTR0_i_32__1_n_0;
  wire MULTR0_i_3__0_n_0;
  wire MULTR0_i_4__0_n_0;
  wire MULTR0_i_5__0_n_0;
  wire MULTR0_i_6__0_n_0;
  wire MULTR0_i_7__0_n_0;
  wire MULTR0_i_8__0_n_0;
  wire MULTR0_i_9__0_n_0;
  wire MULTR0_n_100;
  wire MULTR0_n_101;
  wire MULTR0_n_102;
  wire MULTR0_n_103;
  wire MULTR0_n_104;
  wire MULTR0_n_105;
  wire MULTR0_n_74;
  wire MULTR0_n_75;
  wire MULTR0_n_76;
  wire MULTR0_n_77;
  wire MULTR0_n_78;
  wire MULTR0_n_79;
  wire MULTR0_n_80;
  wire MULTR0_n_81;
  wire MULTR0_n_82;
  wire MULTR0_n_83;
  wire MULTR0_n_84;
  wire MULTR0_n_85;
  wire MULTR0_n_86;
  wire MULTR0_n_87;
  wire MULTR0_n_88;
  wire MULTR0_n_89;
  wire MULTR0_n_90;
  wire MULTR0_n_91;
  wire MULTR0_n_92;
  wire MULTR0_n_93;
  wire MULTR0_n_94;
  wire MULTR0_n_95;
  wire MULTR0_n_96;
  wire MULTR0_n_97;
  wire MULTR0_n_98;
  wire MULTR0_n_99;
  wire RST_IBUF;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0] ;
  wire \write_count_reg[0]_0 ;
  wire \write_count_reg[0]_1 ;
  wire \write_count_reg[0]_10 ;
  wire \write_count_reg[0]_11 ;
  wire \write_count_reg[0]_12 ;
  wire \write_count_reg[0]_13 ;
  wire \write_count_reg[0]_14 ;
  wire \write_count_reg[0]_2 ;
  wire \write_count_reg[0]_3 ;
  wire \write_count_reg[0]_4 ;
  wire \write_count_reg[0]_5 ;
  wire \write_count_reg[0]_6 ;
  wire \write_count_reg[0]_7 ;
  wire \write_count_reg[0]_8 ;
  wire \write_count_reg[0]_9 ;
  wire [3:0]\NLW_ACC_reg[32]_i_1__0_CO_UNCONNECTED ;
  wire [3:1]\NLW_ACC_reg[32]_i_1__0_O_UNCONNECTED ;
  wire NLW_MULTR0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_MULTR0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_MULTR0_OVERFLOW_UNCONNECTED;
  wire NLW_MULTR0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_MULTR0_PATTERNDETECT_UNCONNECTED;
  wire NLW_MULTR0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_MULTR0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_MULTR0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_MULTR0_CARRYOUT_UNCONNECTED;
  wire [47:32]NLW_MULTR0_P_UNCONNECTED;
  wire [47:0]NLW_MULTR0_PCOUT_UNCONNECTED;

  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_2__0 
       (.I0(MULTR0_n_94),
        .I1(\ACC_reg[32]_0 [11]),
        .O(\ACC[11]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_3__0 
       (.I0(MULTR0_n_95),
        .I1(\ACC_reg[32]_0 [10]),
        .O(\ACC[11]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_4__0 
       (.I0(MULTR0_n_96),
        .I1(\ACC_reg[32]_0 [9]),
        .O(\ACC[11]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_5__0 
       (.I0(MULTR0_n_97),
        .I1(\ACC_reg[32]_0 [8]),
        .O(\ACC[11]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_2__0 
       (.I0(MULTR0_n_90),
        .I1(\ACC_reg[32]_0 [15]),
        .O(\ACC[15]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_3__0 
       (.I0(MULTR0_n_91),
        .I1(\ACC_reg[32]_0 [14]),
        .O(\ACC[15]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_4__0 
       (.I0(MULTR0_n_92),
        .I1(\ACC_reg[32]_0 [13]),
        .O(\ACC[15]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_5__0 
       (.I0(MULTR0_n_93),
        .I1(\ACC_reg[32]_0 [12]),
        .O(\ACC[15]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_2__0 
       (.I0(MULTR0_n_86),
        .I1(\ACC_reg[32]_0 [19]),
        .O(\ACC[19]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_3__0 
       (.I0(MULTR0_n_87),
        .I1(\ACC_reg[32]_0 [18]),
        .O(\ACC[19]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_4__0 
       (.I0(MULTR0_n_88),
        .I1(\ACC_reg[32]_0 [17]),
        .O(\ACC[19]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_5__0 
       (.I0(MULTR0_n_89),
        .I1(\ACC_reg[32]_0 [16]),
        .O(\ACC[19]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_2__0 
       (.I0(MULTR0_n_82),
        .I1(\ACC_reg[32]_0 [23]),
        .O(\ACC[23]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_3__0 
       (.I0(MULTR0_n_83),
        .I1(\ACC_reg[32]_0 [22]),
        .O(\ACC[23]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_4__0 
       (.I0(MULTR0_n_84),
        .I1(\ACC_reg[32]_0 [21]),
        .O(\ACC[23]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_5__0 
       (.I0(MULTR0_n_85),
        .I1(\ACC_reg[32]_0 [20]),
        .O(\ACC[23]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_2__0 
       (.I0(MULTR0_n_78),
        .I1(\ACC_reg[32]_0 [27]),
        .O(\ACC[27]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_3__0 
       (.I0(MULTR0_n_79),
        .I1(\ACC_reg[32]_0 [26]),
        .O(\ACC[27]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_4__0 
       (.I0(MULTR0_n_80),
        .I1(\ACC_reg[32]_0 [25]),
        .O(\ACC[27]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_5__0 
       (.I0(MULTR0_n_81),
        .I1(\ACC_reg[32]_0 [24]),
        .O(\ACC[27]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_2__0 
       (.I0(MULTR0_n_74),
        .I1(\ACC_reg[32]_0 [31]),
        .O(\ACC[31]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_3__0 
       (.I0(MULTR0_n_75),
        .I1(\ACC_reg[32]_0 [30]),
        .O(\ACC[31]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_4__0 
       (.I0(MULTR0_n_76),
        .I1(\ACC_reg[32]_0 [29]),
        .O(\ACC[31]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_5__0 
       (.I0(MULTR0_n_77),
        .I1(\ACC_reg[32]_0 [28]),
        .O(\ACC[31]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[32]_i_2__0 
       (.I0(MULTR0_n_74),
        .I1(\ACC_reg[32]_0 [32]),
        .O(\ACC[32]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_2__0 
       (.I0(MULTR0_n_102),
        .I1(\ACC_reg[32]_0 [3]),
        .O(\ACC[3]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_3__0 
       (.I0(MULTR0_n_103),
        .I1(\ACC_reg[32]_0 [2]),
        .O(\ACC[3]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_4__0 
       (.I0(MULTR0_n_104),
        .I1(\ACC_reg[32]_0 [1]),
        .O(\ACC[3]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_5__0 
       (.I0(MULTR0_n_105),
        .I1(\ACC_reg[32]_0 [0]),
        .O(\ACC[3]_i_5__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_2__0 
       (.I0(MULTR0_n_98),
        .I1(\ACC_reg[32]_0 [7]),
        .O(\ACC[7]_i_2__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_3__0 
       (.I0(MULTR0_n_99),
        .I1(\ACC_reg[32]_0 [6]),
        .O(\ACC[7]_i_3__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_4__0 
       (.I0(MULTR0_n_100),
        .I1(\ACC_reg[32]_0 [5]),
        .O(\ACC[7]_i_4__0_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_5__0 
       (.I0(MULTR0_n_101),
        .I1(\ACC_reg[32]_0 [4]),
        .O(\ACC[7]_i_5__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__0_n_7 ),
        .Q(\ACC_reg[32]_0 [0]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[10] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__0_n_5 ),
        .Q(\ACC_reg[32]_0 [10]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[11] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__0_n_4 ),
        .Q(\ACC_reg[32]_0 [11]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[11]_i_1__0 
       (.CI(\ACC_reg[7]_i_1__0_n_0 ),
        .CO({\ACC_reg[11]_i_1__0_n_0 ,\ACC_reg[11]_i_1__0_n_1 ,\ACC_reg[11]_i_1__0_n_2 ,\ACC_reg[11]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_94,MULTR0_n_95,MULTR0_n_96,MULTR0_n_97}),
        .O({\ACC_reg[11]_i_1__0_n_4 ,\ACC_reg[11]_i_1__0_n_5 ,\ACC_reg[11]_i_1__0_n_6 ,\ACC_reg[11]_i_1__0_n_7 }),
        .S({\ACC[11]_i_2__0_n_0 ,\ACC[11]_i_3__0_n_0 ,\ACC[11]_i_4__0_n_0 ,\ACC[11]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[12] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__0_n_7 ),
        .Q(\ACC_reg[32]_0 [12]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[13] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__0_n_6 ),
        .Q(\ACC_reg[32]_0 [13]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[14] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__0_n_5 ),
        .Q(\ACC_reg[32]_0 [14]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[15] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__0_n_4 ),
        .Q(\ACC_reg[32]_0 [15]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[15]_i_1__0 
       (.CI(\ACC_reg[11]_i_1__0_n_0 ),
        .CO({\ACC_reg[15]_i_1__0_n_0 ,\ACC_reg[15]_i_1__0_n_1 ,\ACC_reg[15]_i_1__0_n_2 ,\ACC_reg[15]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_90,MULTR0_n_91,MULTR0_n_92,MULTR0_n_93}),
        .O({\ACC_reg[15]_i_1__0_n_4 ,\ACC_reg[15]_i_1__0_n_5 ,\ACC_reg[15]_i_1__0_n_6 ,\ACC_reg[15]_i_1__0_n_7 }),
        .S({\ACC[15]_i_2__0_n_0 ,\ACC[15]_i_3__0_n_0 ,\ACC[15]_i_4__0_n_0 ,\ACC[15]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[16] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__0_n_7 ),
        .Q(\ACC_reg[32]_0 [16]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[17] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__0_n_6 ),
        .Q(\ACC_reg[32]_0 [17]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[18] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__0_n_5 ),
        .Q(\ACC_reg[32]_0 [18]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[19] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__0_n_4 ),
        .Q(\ACC_reg[32]_0 [19]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[19]_i_1__0 
       (.CI(\ACC_reg[15]_i_1__0_n_0 ),
        .CO({\ACC_reg[19]_i_1__0_n_0 ,\ACC_reg[19]_i_1__0_n_1 ,\ACC_reg[19]_i_1__0_n_2 ,\ACC_reg[19]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_86,MULTR0_n_87,MULTR0_n_88,MULTR0_n_89}),
        .O({\ACC_reg[19]_i_1__0_n_4 ,\ACC_reg[19]_i_1__0_n_5 ,\ACC_reg[19]_i_1__0_n_6 ,\ACC_reg[19]_i_1__0_n_7 }),
        .S({\ACC[19]_i_2__0_n_0 ,\ACC[19]_i_3__0_n_0 ,\ACC[19]_i_4__0_n_0 ,\ACC[19]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__0_n_6 ),
        .Q(\ACC_reg[32]_0 [1]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[20] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__0_n_7 ),
        .Q(\ACC_reg[32]_0 [20]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[21] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__0_n_6 ),
        .Q(\ACC_reg[32]_0 [21]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[22] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__0_n_5 ),
        .Q(\ACC_reg[32]_0 [22]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[23] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__0_n_4 ),
        .Q(\ACC_reg[32]_0 [23]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[23]_i_1__0 
       (.CI(\ACC_reg[19]_i_1__0_n_0 ),
        .CO({\ACC_reg[23]_i_1__0_n_0 ,\ACC_reg[23]_i_1__0_n_1 ,\ACC_reg[23]_i_1__0_n_2 ,\ACC_reg[23]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_82,MULTR0_n_83,MULTR0_n_84,MULTR0_n_85}),
        .O({\ACC_reg[23]_i_1__0_n_4 ,\ACC_reg[23]_i_1__0_n_5 ,\ACC_reg[23]_i_1__0_n_6 ,\ACC_reg[23]_i_1__0_n_7 }),
        .S({\ACC[23]_i_2__0_n_0 ,\ACC[23]_i_3__0_n_0 ,\ACC[23]_i_4__0_n_0 ,\ACC[23]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[24] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__0_n_7 ),
        .Q(\ACC_reg[32]_0 [24]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[25] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__0_n_6 ),
        .Q(\ACC_reg[32]_0 [25]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[26] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__0_n_5 ),
        .Q(\ACC_reg[32]_0 [26]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[27] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__0_n_4 ),
        .Q(\ACC_reg[32]_0 [27]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[27]_i_1__0 
       (.CI(\ACC_reg[23]_i_1__0_n_0 ),
        .CO({\ACC_reg[27]_i_1__0_n_0 ,\ACC_reg[27]_i_1__0_n_1 ,\ACC_reg[27]_i_1__0_n_2 ,\ACC_reg[27]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_78,MULTR0_n_79,MULTR0_n_80,MULTR0_n_81}),
        .O({\ACC_reg[27]_i_1__0_n_4 ,\ACC_reg[27]_i_1__0_n_5 ,\ACC_reg[27]_i_1__0_n_6 ,\ACC_reg[27]_i_1__0_n_7 }),
        .S({\ACC[27]_i_2__0_n_0 ,\ACC[27]_i_3__0_n_0 ,\ACC[27]_i_4__0_n_0 ,\ACC[27]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[28] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__0_n_7 ),
        .Q(\ACC_reg[32]_0 [28]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[29] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__0_n_6 ),
        .Q(\ACC_reg[32]_0 [29]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__0_n_5 ),
        .Q(\ACC_reg[32]_0 [2]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[30] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__0_n_5 ),
        .Q(\ACC_reg[32]_0 [30]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[31] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__0_n_4 ),
        .Q(\ACC_reg[32]_0 [31]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[31]_i_1__0 
       (.CI(\ACC_reg[27]_i_1__0_n_0 ),
        .CO({\ACC_reg[31]_i_1__0_n_0 ,\ACC_reg[31]_i_1__0_n_1 ,\ACC_reg[31]_i_1__0_n_2 ,\ACC_reg[31]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_74,MULTR0_n_75,MULTR0_n_76,MULTR0_n_77}),
        .O({\ACC_reg[31]_i_1__0_n_4 ,\ACC_reg[31]_i_1__0_n_5 ,\ACC_reg[31]_i_1__0_n_6 ,\ACC_reg[31]_i_1__0_n_7 }),
        .S({\ACC[31]_i_2__0_n_0 ,\ACC[31]_i_3__0_n_0 ,\ACC[31]_i_4__0_n_0 ,\ACC[31]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[32] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[32]_i_1__0_n_7 ),
        .Q(\ACC_reg[32]_0 [32]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[32]_i_1__0 
       (.CI(\ACC_reg[31]_i_1__0_n_0 ),
        .CO(\NLW_ACC_reg[32]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_ACC_reg[32]_i_1__0_O_UNCONNECTED [3:1],\ACC_reg[32]_i_1__0_n_7 }),
        .S({1'b0,1'b0,1'b0,\ACC[32]_i_2__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__0_n_4 ),
        .Q(\ACC_reg[32]_0 [3]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[3]_i_1__0 
       (.CI(1'b0),
        .CO({\ACC_reg[3]_i_1__0_n_0 ,\ACC_reg[3]_i_1__0_n_1 ,\ACC_reg[3]_i_1__0_n_2 ,\ACC_reg[3]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_102,MULTR0_n_103,MULTR0_n_104,MULTR0_n_105}),
        .O({\ACC_reg[3]_i_1__0_n_4 ,\ACC_reg[3]_i_1__0_n_5 ,\ACC_reg[3]_i_1__0_n_6 ,\ACC_reg[3]_i_1__0_n_7 }),
        .S({\ACC[3]_i_2__0_n_0 ,\ACC[3]_i_3__0_n_0 ,\ACC[3]_i_4__0_n_0 ,\ACC[3]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[4] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__0_n_7 ),
        .Q(\ACC_reg[32]_0 [4]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[5] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__0_n_6 ),
        .Q(\ACC_reg[32]_0 [5]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[6] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__0_n_5 ),
        .Q(\ACC_reg[32]_0 [6]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[7] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__0_n_4 ),
        .Q(\ACC_reg[32]_0 [7]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[7]_i_1__0 
       (.CI(\ACC_reg[3]_i_1__0_n_0 ),
        .CO({\ACC_reg[7]_i_1__0_n_0 ,\ACC_reg[7]_i_1__0_n_1 ,\ACC_reg[7]_i_1__0_n_2 ,\ACC_reg[7]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_98,MULTR0_n_99,MULTR0_n_100,MULTR0_n_101}),
        .O({\ACC_reg[7]_i_1__0_n_4 ,\ACC_reg[7]_i_1__0_n_5 ,\ACC_reg[7]_i_1__0_n_6 ,\ACC_reg[7]_i_1__0_n_7 }),
        .S({\ACC[7]_i_2__0_n_0 ,\ACC[7]_i_3__0_n_0 ,\ACC[7]_i_4__0_n_0 ,\ACC[7]_i_5__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[8] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__0_n_7 ),
        .Q(\ACC_reg[32]_0 [8]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[9] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__0_n_6 ),
        .Q(\ACC_reg[32]_0 [9]),
        .R(RST_IBUF));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    MULTR0
       (.A({MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_17__1_n_0,MULTR0_i_18__1_n_0,MULTR0_i_19__1_n_0,MULTR0_i_20__1_n_0,MULTR0_i_21__1_n_0,MULTR0_i_22__1_n_0,MULTR0_i_23__1_n_0,MULTR0_i_24__1_n_0,MULTR0_i_25__1_n_0,MULTR0_i_26__1_n_0,MULTR0_i_27__1_n_0,MULTR0_i_28__1_n_0,MULTR0_i_29__1_n_0,MULTR0_i_30__1_n_0,MULTR0_i_31__1_n_0,MULTR0_i_32__1_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_MULTR0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({MULTR0_i_1__0_n_0,MULTR0_i_1__0_n_0,MULTR0_i_1__0_n_0,MULTR0_i_2__0_n_0,MULTR0_i_3__0_n_0,MULTR0_i_4__0_n_0,MULTR0_i_5__0_n_0,MULTR0_i_6__0_n_0,MULTR0_i_7__0_n_0,MULTR0_i_8__0_n_0,MULTR0_i_9__0_n_0,MULTR0_i_10__0_n_0,MULTR0_i_11__0_n_0,MULTR0_i_12__0_n_0,MULTR0_i_13__0_n_0,MULTR0_i_14__0_n_0,MULTR0_i_15__0_n_0,MULTR0_i_16__0_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_MULTR0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_MULTR0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_MULTR0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_MULTR0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_MULTR0_OVERFLOW_UNCONNECTED),
        .P({NLW_MULTR0_P_UNCONNECTED[47:32],MULTR0_n_74,MULTR0_n_75,MULTR0_n_76,MULTR0_n_77,MULTR0_n_78,MULTR0_n_79,MULTR0_n_80,MULTR0_n_81,MULTR0_n_82,MULTR0_n_83,MULTR0_n_84,MULTR0_n_85,MULTR0_n_86,MULTR0_n_87,MULTR0_n_88,MULTR0_n_89,MULTR0_n_90,MULTR0_n_91,MULTR0_n_92,MULTR0_n_93,MULTR0_n_94,MULTR0_n_95,MULTR0_n_96,MULTR0_n_97,MULTR0_n_98,MULTR0_n_99,MULTR0_n_100,MULTR0_n_101,MULTR0_n_102,MULTR0_n_103,MULTR0_n_104,MULTR0_n_105}),
        .PATTERNBDETECT(NLW_MULTR0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_MULTR0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_MULTR0_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_MULTR0_UNDERFLOW_UNCONNECTED));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_10__0
       (.I0(ACC_reg_0[6]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_8 ),
        .I3(out[0]),
        .O(MULTR0_i_10__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_11__0
       (.I0(ACC_reg_0[5]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_9 ),
        .I3(out[0]),
        .O(MULTR0_i_11__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_12__0
       (.I0(ACC_reg_0[4]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_10 ),
        .I3(out[0]),
        .O(MULTR0_i_12__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_13__0
       (.I0(ACC_reg_0[3]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_11 ),
        .I3(out[0]),
        .O(MULTR0_i_13__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_14__0
       (.I0(ACC_reg_0[2]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_12 ),
        .I3(out[0]),
        .O(MULTR0_i_14__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_15__0
       (.I0(ACC_reg_0[1]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_13 ),
        .I3(out[0]),
        .O(MULTR0_i_15__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_16__0
       (.I0(ACC_reg_0[0]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_14 ),
        .I3(out[0]),
        .O(MULTR0_i_16__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_17__1
       (.I0(ACC_reg[15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(MULTR0_i_17__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_18__1
       (.I0(ACC_reg[14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(MULTR0_i_18__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_19__1
       (.I0(ACC_reg[13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(MULTR0_i_19__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_1__0
       (.I0(ACC_reg_0[15]),
        .I1(out[1]),
        .I2(\write_count_reg[0] ),
        .I3(out[0]),
        .O(MULTR0_i_1__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_20__1
       (.I0(ACC_reg[12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(MULTR0_i_20__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_21__1
       (.I0(ACC_reg[11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(MULTR0_i_21__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_22__1
       (.I0(ACC_reg[10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(MULTR0_i_22__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_23__1
       (.I0(ACC_reg[9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(MULTR0_i_23__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_24__1
       (.I0(ACC_reg[8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(MULTR0_i_24__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_25__1
       (.I0(ACC_reg[7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(MULTR0_i_25__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_26__1
       (.I0(ACC_reg[6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(MULTR0_i_26__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_27__1
       (.I0(ACC_reg[5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(MULTR0_i_27__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_28__1
       (.I0(ACC_reg[4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(MULTR0_i_28__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_29__1
       (.I0(ACC_reg[3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(MULTR0_i_29__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_2__0
       (.I0(ACC_reg_0[14]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_0 ),
        .I3(out[0]),
        .O(MULTR0_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_30__1
       (.I0(ACC_reg[2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(MULTR0_i_30__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_31__1
       (.I0(ACC_reg[1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(MULTR0_i_31__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_32__1
       (.I0(ACC_reg[0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(MULTR0_i_32__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_3__0
       (.I0(ACC_reg_0[13]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_1 ),
        .I3(out[0]),
        .O(MULTR0_i_3__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_4__0
       (.I0(ACC_reg_0[12]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_2 ),
        .I3(out[0]),
        .O(MULTR0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_5__0
       (.I0(ACC_reg_0[11]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_3 ),
        .I3(out[0]),
        .O(MULTR0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_6__0
       (.I0(ACC_reg_0[10]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_4 ),
        .I3(out[0]),
        .O(MULTR0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_7__0
       (.I0(ACC_reg_0[9]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_5 ),
        .I3(out[0]),
        .O(MULTR0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_8__0
       (.I0(ACC_reg_0[8]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_6 ),
        .I3(out[0]),
        .O(MULTR0_i_8__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_9__0
       (.I0(ACC_reg_0[7]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_7 ),
        .I3(out[0]),
        .O(MULTR0_i_9__0_n_0));
endmodule

(* ORIG_REF_NAME = "multiplier_with_adder" *) 
module multiplier_with_adder_24
   (\ACC_reg[32]_0 ,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    ACC_reg,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    ACC_reg_0,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_rep_0 ,
    \write_count_reg[0]_rep_1 ,
    \write_count_reg[0]_rep_2 ,
    \write_count_reg[0]_rep_3 ,
    \write_count_reg[0]_rep_4 ,
    \write_count_reg[0]_rep_5 ,
    \write_count_reg[0]_rep_6 ,
    \write_count_reg[0]_rep_7 ,
    \write_count_reg[0]_rep_8 ,
    \write_count_reg[0]_rep_9 ,
    \write_count_reg[0]_rep_10 ,
    \write_count_reg[0]_rep_11 ,
    \write_count_reg[0]_rep_12 ,
    \write_count_reg[0]_rep_13 ,
    \write_count_reg[0]_rep_14 );
  output [32:0]\ACC_reg[32]_0 ;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [15:0]ACC_reg;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]ACC_reg_0;
  input \write_count_reg[0]_rep ;
  input \write_count_reg[0]_rep_0 ;
  input \write_count_reg[0]_rep_1 ;
  input \write_count_reg[0]_rep_2 ;
  input \write_count_reg[0]_rep_3 ;
  input \write_count_reg[0]_rep_4 ;
  input \write_count_reg[0]_rep_5 ;
  input \write_count_reg[0]_rep_6 ;
  input \write_count_reg[0]_rep_7 ;
  input \write_count_reg[0]_rep_8 ;
  input \write_count_reg[0]_rep_9 ;
  input \write_count_reg[0]_rep_10 ;
  input \write_count_reg[0]_rep_11 ;
  input \write_count_reg[0]_rep_12 ;
  input \write_count_reg[0]_rep_13 ;
  input \write_count_reg[0]_rep_14 ;

  wire \ACC[11]_i_2__1_n_0 ;
  wire \ACC[11]_i_3__1_n_0 ;
  wire \ACC[11]_i_4__1_n_0 ;
  wire \ACC[11]_i_5__1_n_0 ;
  wire \ACC[15]_i_2__1_n_0 ;
  wire \ACC[15]_i_3__1_n_0 ;
  wire \ACC[15]_i_4__1_n_0 ;
  wire \ACC[15]_i_5__1_n_0 ;
  wire \ACC[19]_i_2__1_n_0 ;
  wire \ACC[19]_i_3__1_n_0 ;
  wire \ACC[19]_i_4__1_n_0 ;
  wire \ACC[19]_i_5__1_n_0 ;
  wire \ACC[23]_i_2__1_n_0 ;
  wire \ACC[23]_i_3__1_n_0 ;
  wire \ACC[23]_i_4__1_n_0 ;
  wire \ACC[23]_i_5__1_n_0 ;
  wire \ACC[27]_i_2__1_n_0 ;
  wire \ACC[27]_i_3__1_n_0 ;
  wire \ACC[27]_i_4__1_n_0 ;
  wire \ACC[27]_i_5__1_n_0 ;
  wire \ACC[31]_i_2__1_n_0 ;
  wire \ACC[31]_i_3__1_n_0 ;
  wire \ACC[31]_i_4__1_n_0 ;
  wire \ACC[31]_i_5__1_n_0 ;
  wire \ACC[32]_i_2__1_n_0 ;
  wire \ACC[3]_i_2__1_n_0 ;
  wire \ACC[3]_i_3__1_n_0 ;
  wire \ACC[3]_i_4__1_n_0 ;
  wire \ACC[3]_i_5__1_n_0 ;
  wire \ACC[7]_i_2__1_n_0 ;
  wire \ACC[7]_i_3__1_n_0 ;
  wire \ACC[7]_i_4__1_n_0 ;
  wire \ACC[7]_i_5__1_n_0 ;
  wire [15:0]ACC_reg;
  wire \ACC_reg[11]_i_1__1_n_0 ;
  wire \ACC_reg[11]_i_1__1_n_1 ;
  wire \ACC_reg[11]_i_1__1_n_2 ;
  wire \ACC_reg[11]_i_1__1_n_3 ;
  wire \ACC_reg[11]_i_1__1_n_4 ;
  wire \ACC_reg[11]_i_1__1_n_5 ;
  wire \ACC_reg[11]_i_1__1_n_6 ;
  wire \ACC_reg[11]_i_1__1_n_7 ;
  wire \ACC_reg[15]_i_1__1_n_0 ;
  wire \ACC_reg[15]_i_1__1_n_1 ;
  wire \ACC_reg[15]_i_1__1_n_2 ;
  wire \ACC_reg[15]_i_1__1_n_3 ;
  wire \ACC_reg[15]_i_1__1_n_4 ;
  wire \ACC_reg[15]_i_1__1_n_5 ;
  wire \ACC_reg[15]_i_1__1_n_6 ;
  wire \ACC_reg[15]_i_1__1_n_7 ;
  wire \ACC_reg[19]_i_1__1_n_0 ;
  wire \ACC_reg[19]_i_1__1_n_1 ;
  wire \ACC_reg[19]_i_1__1_n_2 ;
  wire \ACC_reg[19]_i_1__1_n_3 ;
  wire \ACC_reg[19]_i_1__1_n_4 ;
  wire \ACC_reg[19]_i_1__1_n_5 ;
  wire \ACC_reg[19]_i_1__1_n_6 ;
  wire \ACC_reg[19]_i_1__1_n_7 ;
  wire \ACC_reg[23]_i_1__1_n_0 ;
  wire \ACC_reg[23]_i_1__1_n_1 ;
  wire \ACC_reg[23]_i_1__1_n_2 ;
  wire \ACC_reg[23]_i_1__1_n_3 ;
  wire \ACC_reg[23]_i_1__1_n_4 ;
  wire \ACC_reg[23]_i_1__1_n_5 ;
  wire \ACC_reg[23]_i_1__1_n_6 ;
  wire \ACC_reg[23]_i_1__1_n_7 ;
  wire \ACC_reg[27]_i_1__1_n_0 ;
  wire \ACC_reg[27]_i_1__1_n_1 ;
  wire \ACC_reg[27]_i_1__1_n_2 ;
  wire \ACC_reg[27]_i_1__1_n_3 ;
  wire \ACC_reg[27]_i_1__1_n_4 ;
  wire \ACC_reg[27]_i_1__1_n_5 ;
  wire \ACC_reg[27]_i_1__1_n_6 ;
  wire \ACC_reg[27]_i_1__1_n_7 ;
  wire \ACC_reg[31]_i_1__1_n_0 ;
  wire \ACC_reg[31]_i_1__1_n_1 ;
  wire \ACC_reg[31]_i_1__1_n_2 ;
  wire \ACC_reg[31]_i_1__1_n_3 ;
  wire \ACC_reg[31]_i_1__1_n_4 ;
  wire \ACC_reg[31]_i_1__1_n_5 ;
  wire \ACC_reg[31]_i_1__1_n_6 ;
  wire \ACC_reg[31]_i_1__1_n_7 ;
  wire [32:0]\ACC_reg[32]_0 ;
  wire \ACC_reg[32]_i_1__1_n_7 ;
  wire \ACC_reg[3]_i_1__1_n_0 ;
  wire \ACC_reg[3]_i_1__1_n_1 ;
  wire \ACC_reg[3]_i_1__1_n_2 ;
  wire \ACC_reg[3]_i_1__1_n_3 ;
  wire \ACC_reg[3]_i_1__1_n_4 ;
  wire \ACC_reg[3]_i_1__1_n_5 ;
  wire \ACC_reg[3]_i_1__1_n_6 ;
  wire \ACC_reg[3]_i_1__1_n_7 ;
  wire \ACC_reg[7]_i_1__1_n_0 ;
  wire \ACC_reg[7]_i_1__1_n_1 ;
  wire \ACC_reg[7]_i_1__1_n_2 ;
  wire \ACC_reg[7]_i_1__1_n_3 ;
  wire \ACC_reg[7]_i_1__1_n_4 ;
  wire \ACC_reg[7]_i_1__1_n_5 ;
  wire \ACC_reg[7]_i_1__1_n_6 ;
  wire \ACC_reg[7]_i_1__1_n_7 ;
  wire [15:0]ACC_reg_0;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire MULTR0_i_10__1_n_0;
  wire MULTR0_i_11__1_n_0;
  wire MULTR0_i_12__1_n_0;
  wire MULTR0_i_13__1_n_0;
  wire MULTR0_i_14__1_n_0;
  wire MULTR0_i_15__1_n_0;
  wire MULTR0_i_16__1_n_0;
  wire MULTR0_i_17__0_n_0;
  wire MULTR0_i_18__0_n_0;
  wire MULTR0_i_19__0_n_0;
  wire MULTR0_i_1__1_n_0;
  wire MULTR0_i_20__0_n_0;
  wire MULTR0_i_21__0_n_0;
  wire MULTR0_i_22__0_n_0;
  wire MULTR0_i_23__0_n_0;
  wire MULTR0_i_24__0_n_0;
  wire MULTR0_i_25__0_n_0;
  wire MULTR0_i_26__0_n_0;
  wire MULTR0_i_27__0_n_0;
  wire MULTR0_i_28__0_n_0;
  wire MULTR0_i_29__0_n_0;
  wire MULTR0_i_2__1_n_0;
  wire MULTR0_i_30__0_n_0;
  wire MULTR0_i_31__0_n_0;
  wire MULTR0_i_32__0_n_0;
  wire MULTR0_i_3__1_n_0;
  wire MULTR0_i_4__1_n_0;
  wire MULTR0_i_5__1_n_0;
  wire MULTR0_i_6__1_n_0;
  wire MULTR0_i_7__1_n_0;
  wire MULTR0_i_8__1_n_0;
  wire MULTR0_i_9__1_n_0;
  wire MULTR0_n_100;
  wire MULTR0_n_101;
  wire MULTR0_n_102;
  wire MULTR0_n_103;
  wire MULTR0_n_104;
  wire MULTR0_n_105;
  wire MULTR0_n_74;
  wire MULTR0_n_75;
  wire MULTR0_n_76;
  wire MULTR0_n_77;
  wire MULTR0_n_78;
  wire MULTR0_n_79;
  wire MULTR0_n_80;
  wire MULTR0_n_81;
  wire MULTR0_n_82;
  wire MULTR0_n_83;
  wire MULTR0_n_84;
  wire MULTR0_n_85;
  wire MULTR0_n_86;
  wire MULTR0_n_87;
  wire MULTR0_n_88;
  wire MULTR0_n_89;
  wire MULTR0_n_90;
  wire MULTR0_n_91;
  wire MULTR0_n_92;
  wire MULTR0_n_93;
  wire MULTR0_n_94;
  wire MULTR0_n_95;
  wire MULTR0_n_96;
  wire MULTR0_n_97;
  wire MULTR0_n_98;
  wire MULTR0_n_99;
  wire RST_IBUF;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0]_rep ;
  wire \write_count_reg[0]_rep_0 ;
  wire \write_count_reg[0]_rep_1 ;
  wire \write_count_reg[0]_rep_10 ;
  wire \write_count_reg[0]_rep_11 ;
  wire \write_count_reg[0]_rep_12 ;
  wire \write_count_reg[0]_rep_13 ;
  wire \write_count_reg[0]_rep_14 ;
  wire \write_count_reg[0]_rep_2 ;
  wire \write_count_reg[0]_rep_3 ;
  wire \write_count_reg[0]_rep_4 ;
  wire \write_count_reg[0]_rep_5 ;
  wire \write_count_reg[0]_rep_6 ;
  wire \write_count_reg[0]_rep_7 ;
  wire \write_count_reg[0]_rep_8 ;
  wire \write_count_reg[0]_rep_9 ;
  wire [3:0]\NLW_ACC_reg[32]_i_1__1_CO_UNCONNECTED ;
  wire [3:1]\NLW_ACC_reg[32]_i_1__1_O_UNCONNECTED ;
  wire NLW_MULTR0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_MULTR0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_MULTR0_OVERFLOW_UNCONNECTED;
  wire NLW_MULTR0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_MULTR0_PATTERNDETECT_UNCONNECTED;
  wire NLW_MULTR0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_MULTR0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_MULTR0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_MULTR0_CARRYOUT_UNCONNECTED;
  wire [47:32]NLW_MULTR0_P_UNCONNECTED;
  wire [47:0]NLW_MULTR0_PCOUT_UNCONNECTED;

  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_2__1 
       (.I0(MULTR0_n_94),
        .I1(\ACC_reg[32]_0 [11]),
        .O(\ACC[11]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_3__1 
       (.I0(MULTR0_n_95),
        .I1(\ACC_reg[32]_0 [10]),
        .O(\ACC[11]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_4__1 
       (.I0(MULTR0_n_96),
        .I1(\ACC_reg[32]_0 [9]),
        .O(\ACC[11]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_5__1 
       (.I0(MULTR0_n_97),
        .I1(\ACC_reg[32]_0 [8]),
        .O(\ACC[11]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_2__1 
       (.I0(MULTR0_n_90),
        .I1(\ACC_reg[32]_0 [15]),
        .O(\ACC[15]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_3__1 
       (.I0(MULTR0_n_91),
        .I1(\ACC_reg[32]_0 [14]),
        .O(\ACC[15]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_4__1 
       (.I0(MULTR0_n_92),
        .I1(\ACC_reg[32]_0 [13]),
        .O(\ACC[15]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_5__1 
       (.I0(MULTR0_n_93),
        .I1(\ACC_reg[32]_0 [12]),
        .O(\ACC[15]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_2__1 
       (.I0(MULTR0_n_86),
        .I1(\ACC_reg[32]_0 [19]),
        .O(\ACC[19]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_3__1 
       (.I0(MULTR0_n_87),
        .I1(\ACC_reg[32]_0 [18]),
        .O(\ACC[19]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_4__1 
       (.I0(MULTR0_n_88),
        .I1(\ACC_reg[32]_0 [17]),
        .O(\ACC[19]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_5__1 
       (.I0(MULTR0_n_89),
        .I1(\ACC_reg[32]_0 [16]),
        .O(\ACC[19]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_2__1 
       (.I0(MULTR0_n_82),
        .I1(\ACC_reg[32]_0 [23]),
        .O(\ACC[23]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_3__1 
       (.I0(MULTR0_n_83),
        .I1(\ACC_reg[32]_0 [22]),
        .O(\ACC[23]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_4__1 
       (.I0(MULTR0_n_84),
        .I1(\ACC_reg[32]_0 [21]),
        .O(\ACC[23]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_5__1 
       (.I0(MULTR0_n_85),
        .I1(\ACC_reg[32]_0 [20]),
        .O(\ACC[23]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_2__1 
       (.I0(MULTR0_n_78),
        .I1(\ACC_reg[32]_0 [27]),
        .O(\ACC[27]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_3__1 
       (.I0(MULTR0_n_79),
        .I1(\ACC_reg[32]_0 [26]),
        .O(\ACC[27]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_4__1 
       (.I0(MULTR0_n_80),
        .I1(\ACC_reg[32]_0 [25]),
        .O(\ACC[27]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_5__1 
       (.I0(MULTR0_n_81),
        .I1(\ACC_reg[32]_0 [24]),
        .O(\ACC[27]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_2__1 
       (.I0(MULTR0_n_74),
        .I1(\ACC_reg[32]_0 [31]),
        .O(\ACC[31]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_3__1 
       (.I0(MULTR0_n_75),
        .I1(\ACC_reg[32]_0 [30]),
        .O(\ACC[31]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_4__1 
       (.I0(MULTR0_n_76),
        .I1(\ACC_reg[32]_0 [29]),
        .O(\ACC[31]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_5__1 
       (.I0(MULTR0_n_77),
        .I1(\ACC_reg[32]_0 [28]),
        .O(\ACC[31]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[32]_i_2__1 
       (.I0(MULTR0_n_74),
        .I1(\ACC_reg[32]_0 [32]),
        .O(\ACC[32]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_2__1 
       (.I0(MULTR0_n_102),
        .I1(\ACC_reg[32]_0 [3]),
        .O(\ACC[3]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_3__1 
       (.I0(MULTR0_n_103),
        .I1(\ACC_reg[32]_0 [2]),
        .O(\ACC[3]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_4__1 
       (.I0(MULTR0_n_104),
        .I1(\ACC_reg[32]_0 [1]),
        .O(\ACC[3]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_5__1 
       (.I0(MULTR0_n_105),
        .I1(\ACC_reg[32]_0 [0]),
        .O(\ACC[3]_i_5__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_2__1 
       (.I0(MULTR0_n_98),
        .I1(\ACC_reg[32]_0 [7]),
        .O(\ACC[7]_i_2__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_3__1 
       (.I0(MULTR0_n_99),
        .I1(\ACC_reg[32]_0 [6]),
        .O(\ACC[7]_i_3__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_4__1 
       (.I0(MULTR0_n_100),
        .I1(\ACC_reg[32]_0 [5]),
        .O(\ACC[7]_i_4__1_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_5__1 
       (.I0(MULTR0_n_101),
        .I1(\ACC_reg[32]_0 [4]),
        .O(\ACC[7]_i_5__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__1_n_7 ),
        .Q(\ACC_reg[32]_0 [0]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[10] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__1_n_5 ),
        .Q(\ACC_reg[32]_0 [10]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[11] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__1_n_4 ),
        .Q(\ACC_reg[32]_0 [11]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[11]_i_1__1 
       (.CI(\ACC_reg[7]_i_1__1_n_0 ),
        .CO({\ACC_reg[11]_i_1__1_n_0 ,\ACC_reg[11]_i_1__1_n_1 ,\ACC_reg[11]_i_1__1_n_2 ,\ACC_reg[11]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_94,MULTR0_n_95,MULTR0_n_96,MULTR0_n_97}),
        .O({\ACC_reg[11]_i_1__1_n_4 ,\ACC_reg[11]_i_1__1_n_5 ,\ACC_reg[11]_i_1__1_n_6 ,\ACC_reg[11]_i_1__1_n_7 }),
        .S({\ACC[11]_i_2__1_n_0 ,\ACC[11]_i_3__1_n_0 ,\ACC[11]_i_4__1_n_0 ,\ACC[11]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[12] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__1_n_7 ),
        .Q(\ACC_reg[32]_0 [12]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[13] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__1_n_6 ),
        .Q(\ACC_reg[32]_0 [13]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[14] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__1_n_5 ),
        .Q(\ACC_reg[32]_0 [14]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[15] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__1_n_4 ),
        .Q(\ACC_reg[32]_0 [15]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[15]_i_1__1 
       (.CI(\ACC_reg[11]_i_1__1_n_0 ),
        .CO({\ACC_reg[15]_i_1__1_n_0 ,\ACC_reg[15]_i_1__1_n_1 ,\ACC_reg[15]_i_1__1_n_2 ,\ACC_reg[15]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_90,MULTR0_n_91,MULTR0_n_92,MULTR0_n_93}),
        .O({\ACC_reg[15]_i_1__1_n_4 ,\ACC_reg[15]_i_1__1_n_5 ,\ACC_reg[15]_i_1__1_n_6 ,\ACC_reg[15]_i_1__1_n_7 }),
        .S({\ACC[15]_i_2__1_n_0 ,\ACC[15]_i_3__1_n_0 ,\ACC[15]_i_4__1_n_0 ,\ACC[15]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[16] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__1_n_7 ),
        .Q(\ACC_reg[32]_0 [16]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[17] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__1_n_6 ),
        .Q(\ACC_reg[32]_0 [17]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[18] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__1_n_5 ),
        .Q(\ACC_reg[32]_0 [18]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[19] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__1_n_4 ),
        .Q(\ACC_reg[32]_0 [19]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[19]_i_1__1 
       (.CI(\ACC_reg[15]_i_1__1_n_0 ),
        .CO({\ACC_reg[19]_i_1__1_n_0 ,\ACC_reg[19]_i_1__1_n_1 ,\ACC_reg[19]_i_1__1_n_2 ,\ACC_reg[19]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_86,MULTR0_n_87,MULTR0_n_88,MULTR0_n_89}),
        .O({\ACC_reg[19]_i_1__1_n_4 ,\ACC_reg[19]_i_1__1_n_5 ,\ACC_reg[19]_i_1__1_n_6 ,\ACC_reg[19]_i_1__1_n_7 }),
        .S({\ACC[19]_i_2__1_n_0 ,\ACC[19]_i_3__1_n_0 ,\ACC[19]_i_4__1_n_0 ,\ACC[19]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__1_n_6 ),
        .Q(\ACC_reg[32]_0 [1]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[20] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__1_n_7 ),
        .Q(\ACC_reg[32]_0 [20]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[21] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__1_n_6 ),
        .Q(\ACC_reg[32]_0 [21]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[22] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__1_n_5 ),
        .Q(\ACC_reg[32]_0 [22]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[23] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__1_n_4 ),
        .Q(\ACC_reg[32]_0 [23]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[23]_i_1__1 
       (.CI(\ACC_reg[19]_i_1__1_n_0 ),
        .CO({\ACC_reg[23]_i_1__1_n_0 ,\ACC_reg[23]_i_1__1_n_1 ,\ACC_reg[23]_i_1__1_n_2 ,\ACC_reg[23]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_82,MULTR0_n_83,MULTR0_n_84,MULTR0_n_85}),
        .O({\ACC_reg[23]_i_1__1_n_4 ,\ACC_reg[23]_i_1__1_n_5 ,\ACC_reg[23]_i_1__1_n_6 ,\ACC_reg[23]_i_1__1_n_7 }),
        .S({\ACC[23]_i_2__1_n_0 ,\ACC[23]_i_3__1_n_0 ,\ACC[23]_i_4__1_n_0 ,\ACC[23]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[24] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__1_n_7 ),
        .Q(\ACC_reg[32]_0 [24]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[25] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__1_n_6 ),
        .Q(\ACC_reg[32]_0 [25]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[26] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__1_n_5 ),
        .Q(\ACC_reg[32]_0 [26]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[27] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__1_n_4 ),
        .Q(\ACC_reg[32]_0 [27]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[27]_i_1__1 
       (.CI(\ACC_reg[23]_i_1__1_n_0 ),
        .CO({\ACC_reg[27]_i_1__1_n_0 ,\ACC_reg[27]_i_1__1_n_1 ,\ACC_reg[27]_i_1__1_n_2 ,\ACC_reg[27]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_78,MULTR0_n_79,MULTR0_n_80,MULTR0_n_81}),
        .O({\ACC_reg[27]_i_1__1_n_4 ,\ACC_reg[27]_i_1__1_n_5 ,\ACC_reg[27]_i_1__1_n_6 ,\ACC_reg[27]_i_1__1_n_7 }),
        .S({\ACC[27]_i_2__1_n_0 ,\ACC[27]_i_3__1_n_0 ,\ACC[27]_i_4__1_n_0 ,\ACC[27]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[28] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__1_n_7 ),
        .Q(\ACC_reg[32]_0 [28]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[29] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__1_n_6 ),
        .Q(\ACC_reg[32]_0 [29]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__1_n_5 ),
        .Q(\ACC_reg[32]_0 [2]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[30] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__1_n_5 ),
        .Q(\ACC_reg[32]_0 [30]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[31] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__1_n_4 ),
        .Q(\ACC_reg[32]_0 [31]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[31]_i_1__1 
       (.CI(\ACC_reg[27]_i_1__1_n_0 ),
        .CO({\ACC_reg[31]_i_1__1_n_0 ,\ACC_reg[31]_i_1__1_n_1 ,\ACC_reg[31]_i_1__1_n_2 ,\ACC_reg[31]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_74,MULTR0_n_75,MULTR0_n_76,MULTR0_n_77}),
        .O({\ACC_reg[31]_i_1__1_n_4 ,\ACC_reg[31]_i_1__1_n_5 ,\ACC_reg[31]_i_1__1_n_6 ,\ACC_reg[31]_i_1__1_n_7 }),
        .S({\ACC[31]_i_2__1_n_0 ,\ACC[31]_i_3__1_n_0 ,\ACC[31]_i_4__1_n_0 ,\ACC[31]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[32] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[32]_i_1__1_n_7 ),
        .Q(\ACC_reg[32]_0 [32]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[32]_i_1__1 
       (.CI(\ACC_reg[31]_i_1__1_n_0 ),
        .CO(\NLW_ACC_reg[32]_i_1__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_ACC_reg[32]_i_1__1_O_UNCONNECTED [3:1],\ACC_reg[32]_i_1__1_n_7 }),
        .S({1'b0,1'b0,1'b0,\ACC[32]_i_2__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__1_n_4 ),
        .Q(\ACC_reg[32]_0 [3]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[3]_i_1__1 
       (.CI(1'b0),
        .CO({\ACC_reg[3]_i_1__1_n_0 ,\ACC_reg[3]_i_1__1_n_1 ,\ACC_reg[3]_i_1__1_n_2 ,\ACC_reg[3]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_102,MULTR0_n_103,MULTR0_n_104,MULTR0_n_105}),
        .O({\ACC_reg[3]_i_1__1_n_4 ,\ACC_reg[3]_i_1__1_n_5 ,\ACC_reg[3]_i_1__1_n_6 ,\ACC_reg[3]_i_1__1_n_7 }),
        .S({\ACC[3]_i_2__1_n_0 ,\ACC[3]_i_3__1_n_0 ,\ACC[3]_i_4__1_n_0 ,\ACC[3]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[4] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__1_n_7 ),
        .Q(\ACC_reg[32]_0 [4]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[5] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__1_n_6 ),
        .Q(\ACC_reg[32]_0 [5]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[6] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__1_n_5 ),
        .Q(\ACC_reg[32]_0 [6]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[7] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__1_n_4 ),
        .Q(\ACC_reg[32]_0 [7]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[7]_i_1__1 
       (.CI(\ACC_reg[3]_i_1__1_n_0 ),
        .CO({\ACC_reg[7]_i_1__1_n_0 ,\ACC_reg[7]_i_1__1_n_1 ,\ACC_reg[7]_i_1__1_n_2 ,\ACC_reg[7]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_98,MULTR0_n_99,MULTR0_n_100,MULTR0_n_101}),
        .O({\ACC_reg[7]_i_1__1_n_4 ,\ACC_reg[7]_i_1__1_n_5 ,\ACC_reg[7]_i_1__1_n_6 ,\ACC_reg[7]_i_1__1_n_7 }),
        .S({\ACC[7]_i_2__1_n_0 ,\ACC[7]_i_3__1_n_0 ,\ACC[7]_i_4__1_n_0 ,\ACC[7]_i_5__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[8] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__1_n_7 ),
        .Q(\ACC_reg[32]_0 [8]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[9] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__1_n_6 ),
        .Q(\ACC_reg[32]_0 [9]),
        .R(RST_IBUF));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    MULTR0
       (.A({MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_17__0_n_0,MULTR0_i_18__0_n_0,MULTR0_i_19__0_n_0,MULTR0_i_20__0_n_0,MULTR0_i_21__0_n_0,MULTR0_i_22__0_n_0,MULTR0_i_23__0_n_0,MULTR0_i_24__0_n_0,MULTR0_i_25__0_n_0,MULTR0_i_26__0_n_0,MULTR0_i_27__0_n_0,MULTR0_i_28__0_n_0,MULTR0_i_29__0_n_0,MULTR0_i_30__0_n_0,MULTR0_i_31__0_n_0,MULTR0_i_32__0_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_MULTR0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({MULTR0_i_1__1_n_0,MULTR0_i_1__1_n_0,MULTR0_i_1__1_n_0,MULTR0_i_2__1_n_0,MULTR0_i_3__1_n_0,MULTR0_i_4__1_n_0,MULTR0_i_5__1_n_0,MULTR0_i_6__1_n_0,MULTR0_i_7__1_n_0,MULTR0_i_8__1_n_0,MULTR0_i_9__1_n_0,MULTR0_i_10__1_n_0,MULTR0_i_11__1_n_0,MULTR0_i_12__1_n_0,MULTR0_i_13__1_n_0,MULTR0_i_14__1_n_0,MULTR0_i_15__1_n_0,MULTR0_i_16__1_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_MULTR0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_MULTR0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_MULTR0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_MULTR0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_MULTR0_OVERFLOW_UNCONNECTED),
        .P({NLW_MULTR0_P_UNCONNECTED[47:32],MULTR0_n_74,MULTR0_n_75,MULTR0_n_76,MULTR0_n_77,MULTR0_n_78,MULTR0_n_79,MULTR0_n_80,MULTR0_n_81,MULTR0_n_82,MULTR0_n_83,MULTR0_n_84,MULTR0_n_85,MULTR0_n_86,MULTR0_n_87,MULTR0_n_88,MULTR0_n_89,MULTR0_n_90,MULTR0_n_91,MULTR0_n_92,MULTR0_n_93,MULTR0_n_94,MULTR0_n_95,MULTR0_n_96,MULTR0_n_97,MULTR0_n_98,MULTR0_n_99,MULTR0_n_100,MULTR0_n_101,MULTR0_n_102,MULTR0_n_103,MULTR0_n_104,MULTR0_n_105}),
        .PATTERNBDETECT(NLW_MULTR0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_MULTR0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_MULTR0_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_MULTR0_UNDERFLOW_UNCONNECTED));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_10__1
       (.I0(ACC_reg_0[6]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_8 ),
        .I3(out[0]),
        .O(MULTR0_i_10__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_11__1
       (.I0(ACC_reg_0[5]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_9 ),
        .I3(out[0]),
        .O(MULTR0_i_11__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_12__1
       (.I0(ACC_reg_0[4]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_10 ),
        .I3(out[0]),
        .O(MULTR0_i_12__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_13__1
       (.I0(ACC_reg_0[3]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_11 ),
        .I3(out[0]),
        .O(MULTR0_i_13__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_14__1
       (.I0(ACC_reg_0[2]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_12 ),
        .I3(out[0]),
        .O(MULTR0_i_14__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_15__1
       (.I0(ACC_reg_0[1]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_13 ),
        .I3(out[0]),
        .O(MULTR0_i_15__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_16__1
       (.I0(ACC_reg_0[0]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_14 ),
        .I3(out[0]),
        .O(MULTR0_i_16__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_17__0
       (.I0(ACC_reg[15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(MULTR0_i_17__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_18__0
       (.I0(ACC_reg[14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(MULTR0_i_18__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_19__0
       (.I0(ACC_reg[13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(MULTR0_i_19__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_1__1
       (.I0(ACC_reg_0[15]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep ),
        .I3(out[0]),
        .O(MULTR0_i_1__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_20__0
       (.I0(ACC_reg[12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(MULTR0_i_20__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_21__0
       (.I0(ACC_reg[11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(MULTR0_i_21__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_22__0
       (.I0(ACC_reg[10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(MULTR0_i_22__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_23__0
       (.I0(ACC_reg[9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(MULTR0_i_23__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_24__0
       (.I0(ACC_reg[8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(MULTR0_i_24__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_25__0
       (.I0(ACC_reg[7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(MULTR0_i_25__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_26__0
       (.I0(ACC_reg[6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(MULTR0_i_26__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_27__0
       (.I0(ACC_reg[5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(MULTR0_i_27__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_28__0
       (.I0(ACC_reg[4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(MULTR0_i_28__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_29__0
       (.I0(ACC_reg[3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(MULTR0_i_29__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_2__1
       (.I0(ACC_reg_0[14]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_0 ),
        .I3(out[0]),
        .O(MULTR0_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_30__0
       (.I0(ACC_reg[2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(MULTR0_i_30__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_31__0
       (.I0(ACC_reg[1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(MULTR0_i_31__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_32__0
       (.I0(ACC_reg[0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(MULTR0_i_32__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_3__1
       (.I0(ACC_reg_0[13]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_1 ),
        .I3(out[0]),
        .O(MULTR0_i_3__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_4__1
       (.I0(ACC_reg_0[12]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_2 ),
        .I3(out[0]),
        .O(MULTR0_i_4__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_5__1
       (.I0(ACC_reg_0[11]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_3 ),
        .I3(out[0]),
        .O(MULTR0_i_5__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_6__1
       (.I0(ACC_reg_0[10]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_4 ),
        .I3(out[0]),
        .O(MULTR0_i_6__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_7__1
       (.I0(ACC_reg_0[9]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_5 ),
        .I3(out[0]),
        .O(MULTR0_i_7__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_8__1
       (.I0(ACC_reg_0[8]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_6 ),
        .I3(out[0]),
        .O(MULTR0_i_8__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_9__1
       (.I0(ACC_reg_0[7]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_7 ),
        .I3(out[0]),
        .O(MULTR0_i_9__1_n_0));
endmodule

(* ORIG_REF_NAME = "multiplier_with_adder" *) 
module multiplier_with_adder_25
   (\mul_count_reg[3]_rep__0 ,
    \ACC_reg[32]_0 ,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    P,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    ACC_reg,
    \write_count_reg[0] ,
    \write_count_reg[0]_0 ,
    \write_count_reg[0]_1 ,
    \write_count_reg[0]_2 ,
    \write_count_reg[0]_3 ,
    \write_count_reg[0]_4 ,
    \write_count_reg[0]_5 ,
    \write_count_reg[0]_6 ,
    \write_count_reg[0]_7 ,
    \write_count_reg[0]_8 ,
    \write_count_reg[0]_9 ,
    \write_count_reg[0]_10 ,
    \write_count_reg[0]_11 ,
    \write_count_reg[0]_12 ,
    \write_count_reg[0]_13 ,
    \write_count_reg[0]_14 ,
    state_OBUF);
  output \mul_count_reg[3]_rep__0 ;
  output [32:0]\ACC_reg[32]_0 ;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [15:0]P;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]ACC_reg;
  input \write_count_reg[0] ;
  input \write_count_reg[0]_0 ;
  input \write_count_reg[0]_1 ;
  input \write_count_reg[0]_2 ;
  input \write_count_reg[0]_3 ;
  input \write_count_reg[0]_4 ;
  input \write_count_reg[0]_5 ;
  input \write_count_reg[0]_6 ;
  input \write_count_reg[0]_7 ;
  input \write_count_reg[0]_8 ;
  input \write_count_reg[0]_9 ;
  input \write_count_reg[0]_10 ;
  input \write_count_reg[0]_11 ;
  input \write_count_reg[0]_12 ;
  input \write_count_reg[0]_13 ;
  input \write_count_reg[0]_14 ;
  input [1:0]state_OBUF;

  wire \ACC[11]_i_2__2_n_0 ;
  wire \ACC[11]_i_3__2_n_0 ;
  wire \ACC[11]_i_4__2_n_0 ;
  wire \ACC[11]_i_5__2_n_0 ;
  wire \ACC[15]_i_2__2_n_0 ;
  wire \ACC[15]_i_3__2_n_0 ;
  wire \ACC[15]_i_4__2_n_0 ;
  wire \ACC[15]_i_5__2_n_0 ;
  wire \ACC[19]_i_2__2_n_0 ;
  wire \ACC[19]_i_3__2_n_0 ;
  wire \ACC[19]_i_4__2_n_0 ;
  wire \ACC[19]_i_5__2_n_0 ;
  wire \ACC[23]_i_2__2_n_0 ;
  wire \ACC[23]_i_3__2_n_0 ;
  wire \ACC[23]_i_4__2_n_0 ;
  wire \ACC[23]_i_5__2_n_0 ;
  wire \ACC[27]_i_2__2_n_0 ;
  wire \ACC[27]_i_3__2_n_0 ;
  wire \ACC[27]_i_4__2_n_0 ;
  wire \ACC[27]_i_5__2_n_0 ;
  wire \ACC[31]_i_2__2_n_0 ;
  wire \ACC[31]_i_3__2_n_0 ;
  wire \ACC[31]_i_4__2_n_0 ;
  wire \ACC[31]_i_5__2_n_0 ;
  wire \ACC[32]_i_2__2_n_0 ;
  wire \ACC[3]_i_2__2_n_0 ;
  wire \ACC[3]_i_3__2_n_0 ;
  wire \ACC[3]_i_4__2_n_0 ;
  wire \ACC[3]_i_5__2_n_0 ;
  wire \ACC[7]_i_2__2_n_0 ;
  wire \ACC[7]_i_3__2_n_0 ;
  wire \ACC[7]_i_4__2_n_0 ;
  wire \ACC[7]_i_5__2_n_0 ;
  wire [15:0]ACC_reg;
  wire \ACC_reg[11]_i_1__2_n_0 ;
  wire \ACC_reg[11]_i_1__2_n_1 ;
  wire \ACC_reg[11]_i_1__2_n_2 ;
  wire \ACC_reg[11]_i_1__2_n_3 ;
  wire \ACC_reg[11]_i_1__2_n_4 ;
  wire \ACC_reg[11]_i_1__2_n_5 ;
  wire \ACC_reg[11]_i_1__2_n_6 ;
  wire \ACC_reg[11]_i_1__2_n_7 ;
  wire \ACC_reg[15]_i_1__2_n_0 ;
  wire \ACC_reg[15]_i_1__2_n_1 ;
  wire \ACC_reg[15]_i_1__2_n_2 ;
  wire \ACC_reg[15]_i_1__2_n_3 ;
  wire \ACC_reg[15]_i_1__2_n_4 ;
  wire \ACC_reg[15]_i_1__2_n_5 ;
  wire \ACC_reg[15]_i_1__2_n_6 ;
  wire \ACC_reg[15]_i_1__2_n_7 ;
  wire \ACC_reg[19]_i_1__2_n_0 ;
  wire \ACC_reg[19]_i_1__2_n_1 ;
  wire \ACC_reg[19]_i_1__2_n_2 ;
  wire \ACC_reg[19]_i_1__2_n_3 ;
  wire \ACC_reg[19]_i_1__2_n_4 ;
  wire \ACC_reg[19]_i_1__2_n_5 ;
  wire \ACC_reg[19]_i_1__2_n_6 ;
  wire \ACC_reg[19]_i_1__2_n_7 ;
  wire \ACC_reg[23]_i_1__2_n_0 ;
  wire \ACC_reg[23]_i_1__2_n_1 ;
  wire \ACC_reg[23]_i_1__2_n_2 ;
  wire \ACC_reg[23]_i_1__2_n_3 ;
  wire \ACC_reg[23]_i_1__2_n_4 ;
  wire \ACC_reg[23]_i_1__2_n_5 ;
  wire \ACC_reg[23]_i_1__2_n_6 ;
  wire \ACC_reg[23]_i_1__2_n_7 ;
  wire \ACC_reg[27]_i_1__2_n_0 ;
  wire \ACC_reg[27]_i_1__2_n_1 ;
  wire \ACC_reg[27]_i_1__2_n_2 ;
  wire \ACC_reg[27]_i_1__2_n_3 ;
  wire \ACC_reg[27]_i_1__2_n_4 ;
  wire \ACC_reg[27]_i_1__2_n_5 ;
  wire \ACC_reg[27]_i_1__2_n_6 ;
  wire \ACC_reg[27]_i_1__2_n_7 ;
  wire \ACC_reg[31]_i_1__2_n_0 ;
  wire \ACC_reg[31]_i_1__2_n_1 ;
  wire \ACC_reg[31]_i_1__2_n_2 ;
  wire \ACC_reg[31]_i_1__2_n_3 ;
  wire \ACC_reg[31]_i_1__2_n_4 ;
  wire \ACC_reg[31]_i_1__2_n_5 ;
  wire \ACC_reg[31]_i_1__2_n_6 ;
  wire \ACC_reg[31]_i_1__2_n_7 ;
  wire [32:0]\ACC_reg[32]_0 ;
  wire \ACC_reg[32]_i_1__2_n_7 ;
  wire \ACC_reg[3]_i_1__2_n_0 ;
  wire \ACC_reg[3]_i_1__2_n_1 ;
  wire \ACC_reg[3]_i_1__2_n_2 ;
  wire \ACC_reg[3]_i_1__2_n_3 ;
  wire \ACC_reg[3]_i_1__2_n_4 ;
  wire \ACC_reg[3]_i_1__2_n_5 ;
  wire \ACC_reg[3]_i_1__2_n_6 ;
  wire \ACC_reg[3]_i_1__2_n_7 ;
  wire \ACC_reg[7]_i_1__2_n_0 ;
  wire \ACC_reg[7]_i_1__2_n_1 ;
  wire \ACC_reg[7]_i_1__2_n_2 ;
  wire \ACC_reg[7]_i_1__2_n_3 ;
  wire \ACC_reg[7]_i_1__2_n_4 ;
  wire \ACC_reg[7]_i_1__2_n_5 ;
  wire \ACC_reg[7]_i_1__2_n_6 ;
  wire \ACC_reg[7]_i_1__2_n_7 ;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire MULTR0_i_10__2_n_0;
  wire MULTR0_i_11__2_n_0;
  wire MULTR0_i_12__2_n_0;
  wire MULTR0_i_13__2_n_0;
  wire MULTR0_i_14__2_n_0;
  wire MULTR0_i_15__2_n_0;
  wire MULTR0_i_16__2_n_0;
  wire MULTR0_i_17_n_0;
  wire MULTR0_i_18_n_0;
  wire MULTR0_i_19_n_0;
  wire MULTR0_i_1__2_n_0;
  wire MULTR0_i_20_n_0;
  wire MULTR0_i_21_n_0;
  wire MULTR0_i_22_n_0;
  wire MULTR0_i_23_n_0;
  wire MULTR0_i_24_n_0;
  wire MULTR0_i_25_n_0;
  wire MULTR0_i_26_n_0;
  wire MULTR0_i_27_n_0;
  wire MULTR0_i_28_n_0;
  wire MULTR0_i_29_n_0;
  wire MULTR0_i_2__2_n_0;
  wire MULTR0_i_30_n_0;
  wire MULTR0_i_31_n_0;
  wire MULTR0_i_32_n_0;
  wire MULTR0_i_3__2_n_0;
  wire MULTR0_i_4__2_n_0;
  wire MULTR0_i_5__2_n_0;
  wire MULTR0_i_6__2_n_0;
  wire MULTR0_i_7__2_n_0;
  wire MULTR0_i_8__2_n_0;
  wire MULTR0_i_9__2_n_0;
  wire MULTR0_n_100;
  wire MULTR0_n_101;
  wire MULTR0_n_102;
  wire MULTR0_n_103;
  wire MULTR0_n_104;
  wire MULTR0_n_105;
  wire MULTR0_n_74;
  wire MULTR0_n_75;
  wire MULTR0_n_76;
  wire MULTR0_n_77;
  wire MULTR0_n_78;
  wire MULTR0_n_79;
  wire MULTR0_n_80;
  wire MULTR0_n_81;
  wire MULTR0_n_82;
  wire MULTR0_n_83;
  wire MULTR0_n_84;
  wire MULTR0_n_85;
  wire MULTR0_n_86;
  wire MULTR0_n_87;
  wire MULTR0_n_88;
  wire MULTR0_n_89;
  wire MULTR0_n_90;
  wire MULTR0_n_91;
  wire MULTR0_n_92;
  wire MULTR0_n_93;
  wire MULTR0_n_94;
  wire MULTR0_n_95;
  wire MULTR0_n_96;
  wire MULTR0_n_97;
  wire MULTR0_n_98;
  wire MULTR0_n_99;
  wire [15:0]P;
  wire RST_IBUF;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire \mul_count_reg[3]_rep__0 ;
  wire [1:0]out;
  wire [1:0]state_OBUF;
  wire \write_count_reg[0] ;
  wire \write_count_reg[0]_0 ;
  wire \write_count_reg[0]_1 ;
  wire \write_count_reg[0]_10 ;
  wire \write_count_reg[0]_11 ;
  wire \write_count_reg[0]_12 ;
  wire \write_count_reg[0]_13 ;
  wire \write_count_reg[0]_14 ;
  wire \write_count_reg[0]_2 ;
  wire \write_count_reg[0]_3 ;
  wire \write_count_reg[0]_4 ;
  wire \write_count_reg[0]_5 ;
  wire \write_count_reg[0]_6 ;
  wire \write_count_reg[0]_7 ;
  wire \write_count_reg[0]_8 ;
  wire \write_count_reg[0]_9 ;
  wire [3:0]\NLW_ACC_reg[32]_i_1__2_CO_UNCONNECTED ;
  wire [3:1]\NLW_ACC_reg[32]_i_1__2_O_UNCONNECTED ;
  wire NLW_MULTR0_CARRYCASCOUT_UNCONNECTED;
  wire NLW_MULTR0_MULTSIGNOUT_UNCONNECTED;
  wire NLW_MULTR0_OVERFLOW_UNCONNECTED;
  wire NLW_MULTR0_PATTERNBDETECT_UNCONNECTED;
  wire NLW_MULTR0_PATTERNDETECT_UNCONNECTED;
  wire NLW_MULTR0_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_MULTR0_ACOUT_UNCONNECTED;
  wire [17:0]NLW_MULTR0_BCOUT_UNCONNECTED;
  wire [3:0]NLW_MULTR0_CARRYOUT_UNCONNECTED;
  wire [47:32]NLW_MULTR0_P_UNCONNECTED;
  wire [47:0]NLW_MULTR0_PCOUT_UNCONNECTED;

  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_2__2 
       (.I0(MULTR0_n_94),
        .I1(\ACC_reg[32]_0 [11]),
        .O(\ACC[11]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_3__2 
       (.I0(MULTR0_n_95),
        .I1(\ACC_reg[32]_0 [10]),
        .O(\ACC[11]_i_3__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_4__2 
       (.I0(MULTR0_n_96),
        .I1(\ACC_reg[32]_0 [9]),
        .O(\ACC[11]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[11]_i_5__2 
       (.I0(MULTR0_n_97),
        .I1(\ACC_reg[32]_0 [8]),
        .O(\ACC[11]_i_5__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_2__2 
       (.I0(MULTR0_n_90),
        .I1(\ACC_reg[32]_0 [15]),
        .O(\ACC[15]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_3__2 
       (.I0(MULTR0_n_91),
        .I1(\ACC_reg[32]_0 [14]),
        .O(\ACC[15]_i_3__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_4__2 
       (.I0(MULTR0_n_92),
        .I1(\ACC_reg[32]_0 [13]),
        .O(\ACC[15]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[15]_i_5__2 
       (.I0(MULTR0_n_93),
        .I1(\ACC_reg[32]_0 [12]),
        .O(\ACC[15]_i_5__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_2__2 
       (.I0(MULTR0_n_86),
        .I1(\ACC_reg[32]_0 [19]),
        .O(\ACC[19]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_3__2 
       (.I0(MULTR0_n_87),
        .I1(\ACC_reg[32]_0 [18]),
        .O(\ACC[19]_i_3__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_4__2 
       (.I0(MULTR0_n_88),
        .I1(\ACC_reg[32]_0 [17]),
        .O(\ACC[19]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[19]_i_5__2 
       (.I0(MULTR0_n_89),
        .I1(\ACC_reg[32]_0 [16]),
        .O(\ACC[19]_i_5__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_2__2 
       (.I0(MULTR0_n_82),
        .I1(\ACC_reg[32]_0 [23]),
        .O(\ACC[23]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_3__2 
       (.I0(MULTR0_n_83),
        .I1(\ACC_reg[32]_0 [22]),
        .O(\ACC[23]_i_3__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_4__2 
       (.I0(MULTR0_n_84),
        .I1(\ACC_reg[32]_0 [21]),
        .O(\ACC[23]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[23]_i_5__2 
       (.I0(MULTR0_n_85),
        .I1(\ACC_reg[32]_0 [20]),
        .O(\ACC[23]_i_5__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_2__2 
       (.I0(MULTR0_n_78),
        .I1(\ACC_reg[32]_0 [27]),
        .O(\ACC[27]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_3__2 
       (.I0(MULTR0_n_79),
        .I1(\ACC_reg[32]_0 [26]),
        .O(\ACC[27]_i_3__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_4__2 
       (.I0(MULTR0_n_80),
        .I1(\ACC_reg[32]_0 [25]),
        .O(\ACC[27]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[27]_i_5__2 
       (.I0(MULTR0_n_81),
        .I1(\ACC_reg[32]_0 [24]),
        .O(\ACC[27]_i_5__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_2__2 
       (.I0(MULTR0_n_74),
        .I1(\ACC_reg[32]_0 [31]),
        .O(\ACC[31]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_3__2 
       (.I0(MULTR0_n_75),
        .I1(\ACC_reg[32]_0 [30]),
        .O(\ACC[31]_i_3__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_4__2 
       (.I0(MULTR0_n_76),
        .I1(\ACC_reg[32]_0 [29]),
        .O(\ACC[31]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[31]_i_5__2 
       (.I0(MULTR0_n_77),
        .I1(\ACC_reg[32]_0 [28]),
        .O(\ACC[31]_i_5__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[32]_i_2__2 
       (.I0(MULTR0_n_74),
        .I1(\ACC_reg[32]_0 [32]),
        .O(\ACC[32]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_2__2 
       (.I0(MULTR0_n_102),
        .I1(\ACC_reg[32]_0 [3]),
        .O(\ACC[3]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_3__2 
       (.I0(MULTR0_n_103),
        .I1(\ACC_reg[32]_0 [2]),
        .O(\ACC[3]_i_3__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_4__2 
       (.I0(MULTR0_n_104),
        .I1(\ACC_reg[32]_0 [1]),
        .O(\ACC[3]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[3]_i_5__2 
       (.I0(MULTR0_n_105),
        .I1(\ACC_reg[32]_0 [0]),
        .O(\ACC[3]_i_5__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_2__2 
       (.I0(MULTR0_n_98),
        .I1(\ACC_reg[32]_0 [7]),
        .O(\ACC[7]_i_2__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_3__2 
       (.I0(MULTR0_n_99),
        .I1(\ACC_reg[32]_0 [6]),
        .O(\ACC[7]_i_3__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_4__2 
       (.I0(MULTR0_n_100),
        .I1(\ACC_reg[32]_0 [5]),
        .O(\ACC[7]_i_4__2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \ACC[7]_i_5__2 
       (.I0(MULTR0_n_101),
        .I1(\ACC_reg[32]_0 [4]),
        .O(\ACC[7]_i_5__2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__2_n_7 ),
        .Q(\ACC_reg[32]_0 [0]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[10] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__2_n_5 ),
        .Q(\ACC_reg[32]_0 [10]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[11] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__2_n_4 ),
        .Q(\ACC_reg[32]_0 [11]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[11]_i_1__2 
       (.CI(\ACC_reg[7]_i_1__2_n_0 ),
        .CO({\ACC_reg[11]_i_1__2_n_0 ,\ACC_reg[11]_i_1__2_n_1 ,\ACC_reg[11]_i_1__2_n_2 ,\ACC_reg[11]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_94,MULTR0_n_95,MULTR0_n_96,MULTR0_n_97}),
        .O({\ACC_reg[11]_i_1__2_n_4 ,\ACC_reg[11]_i_1__2_n_5 ,\ACC_reg[11]_i_1__2_n_6 ,\ACC_reg[11]_i_1__2_n_7 }),
        .S({\ACC[11]_i_2__2_n_0 ,\ACC[11]_i_3__2_n_0 ,\ACC[11]_i_4__2_n_0 ,\ACC[11]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[12] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__2_n_7 ),
        .Q(\ACC_reg[32]_0 [12]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[13] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__2_n_6 ),
        .Q(\ACC_reg[32]_0 [13]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[14] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__2_n_5 ),
        .Q(\ACC_reg[32]_0 [14]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[15] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[15]_i_1__2_n_4 ),
        .Q(\ACC_reg[32]_0 [15]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[15]_i_1__2 
       (.CI(\ACC_reg[11]_i_1__2_n_0 ),
        .CO({\ACC_reg[15]_i_1__2_n_0 ,\ACC_reg[15]_i_1__2_n_1 ,\ACC_reg[15]_i_1__2_n_2 ,\ACC_reg[15]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_90,MULTR0_n_91,MULTR0_n_92,MULTR0_n_93}),
        .O({\ACC_reg[15]_i_1__2_n_4 ,\ACC_reg[15]_i_1__2_n_5 ,\ACC_reg[15]_i_1__2_n_6 ,\ACC_reg[15]_i_1__2_n_7 }),
        .S({\ACC[15]_i_2__2_n_0 ,\ACC[15]_i_3__2_n_0 ,\ACC[15]_i_4__2_n_0 ,\ACC[15]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[16] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__2_n_7 ),
        .Q(\ACC_reg[32]_0 [16]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[17] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__2_n_6 ),
        .Q(\ACC_reg[32]_0 [17]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[18] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__2_n_5 ),
        .Q(\ACC_reg[32]_0 [18]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[19] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[19]_i_1__2_n_4 ),
        .Q(\ACC_reg[32]_0 [19]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[19]_i_1__2 
       (.CI(\ACC_reg[15]_i_1__2_n_0 ),
        .CO({\ACC_reg[19]_i_1__2_n_0 ,\ACC_reg[19]_i_1__2_n_1 ,\ACC_reg[19]_i_1__2_n_2 ,\ACC_reg[19]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_86,MULTR0_n_87,MULTR0_n_88,MULTR0_n_89}),
        .O({\ACC_reg[19]_i_1__2_n_4 ,\ACC_reg[19]_i_1__2_n_5 ,\ACC_reg[19]_i_1__2_n_6 ,\ACC_reg[19]_i_1__2_n_7 }),
        .S({\ACC[19]_i_2__2_n_0 ,\ACC[19]_i_3__2_n_0 ,\ACC[19]_i_4__2_n_0 ,\ACC[19]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__2_n_6 ),
        .Q(\ACC_reg[32]_0 [1]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[20] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__2_n_7 ),
        .Q(\ACC_reg[32]_0 [20]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[21] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__2_n_6 ),
        .Q(\ACC_reg[32]_0 [21]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[22] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__2_n_5 ),
        .Q(\ACC_reg[32]_0 [22]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[23] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[23]_i_1__2_n_4 ),
        .Q(\ACC_reg[32]_0 [23]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[23]_i_1__2 
       (.CI(\ACC_reg[19]_i_1__2_n_0 ),
        .CO({\ACC_reg[23]_i_1__2_n_0 ,\ACC_reg[23]_i_1__2_n_1 ,\ACC_reg[23]_i_1__2_n_2 ,\ACC_reg[23]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_82,MULTR0_n_83,MULTR0_n_84,MULTR0_n_85}),
        .O({\ACC_reg[23]_i_1__2_n_4 ,\ACC_reg[23]_i_1__2_n_5 ,\ACC_reg[23]_i_1__2_n_6 ,\ACC_reg[23]_i_1__2_n_7 }),
        .S({\ACC[23]_i_2__2_n_0 ,\ACC[23]_i_3__2_n_0 ,\ACC[23]_i_4__2_n_0 ,\ACC[23]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[24] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__2_n_7 ),
        .Q(\ACC_reg[32]_0 [24]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[25] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__2_n_6 ),
        .Q(\ACC_reg[32]_0 [25]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[26] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__2_n_5 ),
        .Q(\ACC_reg[32]_0 [26]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[27] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[27]_i_1__2_n_4 ),
        .Q(\ACC_reg[32]_0 [27]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[27]_i_1__2 
       (.CI(\ACC_reg[23]_i_1__2_n_0 ),
        .CO({\ACC_reg[27]_i_1__2_n_0 ,\ACC_reg[27]_i_1__2_n_1 ,\ACC_reg[27]_i_1__2_n_2 ,\ACC_reg[27]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_78,MULTR0_n_79,MULTR0_n_80,MULTR0_n_81}),
        .O({\ACC_reg[27]_i_1__2_n_4 ,\ACC_reg[27]_i_1__2_n_5 ,\ACC_reg[27]_i_1__2_n_6 ,\ACC_reg[27]_i_1__2_n_7 }),
        .S({\ACC[27]_i_2__2_n_0 ,\ACC[27]_i_3__2_n_0 ,\ACC[27]_i_4__2_n_0 ,\ACC[27]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[28] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__2_n_7 ),
        .Q(\ACC_reg[32]_0 [28]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[29] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__2_n_6 ),
        .Q(\ACC_reg[32]_0 [29]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__2_n_5 ),
        .Q(\ACC_reg[32]_0 [2]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[30] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__2_n_5 ),
        .Q(\ACC_reg[32]_0 [30]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[31] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[31]_i_1__2_n_4 ),
        .Q(\ACC_reg[32]_0 [31]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[31]_i_1__2 
       (.CI(\ACC_reg[27]_i_1__2_n_0 ),
        .CO({\ACC_reg[31]_i_1__2_n_0 ,\ACC_reg[31]_i_1__2_n_1 ,\ACC_reg[31]_i_1__2_n_2 ,\ACC_reg[31]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_74,MULTR0_n_75,MULTR0_n_76,MULTR0_n_77}),
        .O({\ACC_reg[31]_i_1__2_n_4 ,\ACC_reg[31]_i_1__2_n_5 ,\ACC_reg[31]_i_1__2_n_6 ,\ACC_reg[31]_i_1__2_n_7 }),
        .S({\ACC[31]_i_2__2_n_0 ,\ACC[31]_i_3__2_n_0 ,\ACC[31]_i_4__2_n_0 ,\ACC[31]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[32] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[32]_i_1__2_n_7 ),
        .Q(\ACC_reg[32]_0 [32]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[32]_i_1__2 
       (.CI(\ACC_reg[31]_i_1__2_n_0 ),
        .CO(\NLW_ACC_reg[32]_i_1__2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_ACC_reg[32]_i_1__2_O_UNCONNECTED [3:1],\ACC_reg[32]_i_1__2_n_7 }),
        .S({1'b0,1'b0,1'b0,\ACC[32]_i_2__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[3]_i_1__2_n_4 ),
        .Q(\ACC_reg[32]_0 [3]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[3]_i_1__2 
       (.CI(1'b0),
        .CO({\ACC_reg[3]_i_1__2_n_0 ,\ACC_reg[3]_i_1__2_n_1 ,\ACC_reg[3]_i_1__2_n_2 ,\ACC_reg[3]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_102,MULTR0_n_103,MULTR0_n_104,MULTR0_n_105}),
        .O({\ACC_reg[3]_i_1__2_n_4 ,\ACC_reg[3]_i_1__2_n_5 ,\ACC_reg[3]_i_1__2_n_6 ,\ACC_reg[3]_i_1__2_n_7 }),
        .S({\ACC[3]_i_2__2_n_0 ,\ACC[3]_i_3__2_n_0 ,\ACC[3]_i_4__2_n_0 ,\ACC[3]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[4] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__2_n_7 ),
        .Q(\ACC_reg[32]_0 [4]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[5] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__2_n_6 ),
        .Q(\ACC_reg[32]_0 [5]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[6] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__2_n_5 ),
        .Q(\ACC_reg[32]_0 [6]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[7] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[7]_i_1__2_n_4 ),
        .Q(\ACC_reg[32]_0 [7]),
        .R(RST_IBUF));
  CARRY4 \ACC_reg[7]_i_1__2 
       (.CI(\ACC_reg[3]_i_1__2_n_0 ),
        .CO({\ACC_reg[7]_i_1__2_n_0 ,\ACC_reg[7]_i_1__2_n_1 ,\ACC_reg[7]_i_1__2_n_2 ,\ACC_reg[7]_i_1__2_n_3 }),
        .CYINIT(1'b0),
        .DI({MULTR0_n_98,MULTR0_n_99,MULTR0_n_100,MULTR0_n_101}),
        .O({\ACC_reg[7]_i_1__2_n_4 ,\ACC_reg[7]_i_1__2_n_5 ,\ACC_reg[7]_i_1__2_n_6 ,\ACC_reg[7]_i_1__2_n_7 }),
        .S({\ACC[7]_i_2__2_n_0 ,\ACC[7]_i_3__2_n_0 ,\ACC[7]_i_4__2_n_0 ,\ACC[7]_i_5__2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[8] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__2_n_7 ),
        .Q(\ACC_reg[32]_0 [8]),
        .R(RST_IBUF));
  FDRE #(
    .INIT(1'b0)) 
    \ACC_reg[9] 
       (.C(CLK_IBUF_BUFG),
        .CE(CE_common_reg),
        .D(\ACC_reg[11]_i_1__2_n_6 ),
        .Q(\ACC_reg[32]_0 [9]),
        .R(RST_IBUF));
  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(0),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    MULTR0
       (.A({MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_17_n_0,MULTR0_i_18_n_0,MULTR0_i_19_n_0,MULTR0_i_20_n_0,MULTR0_i_21_n_0,MULTR0_i_22_n_0,MULTR0_i_23_n_0,MULTR0_i_24_n_0,MULTR0_i_25_n_0,MULTR0_i_26_n_0,MULTR0_i_27_n_0,MULTR0_i_28_n_0,MULTR0_i_29_n_0,MULTR0_i_30_n_0,MULTR0_i_31_n_0,MULTR0_i_32_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_MULTR0_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({MULTR0_i_1__2_n_0,MULTR0_i_1__2_n_0,MULTR0_i_1__2_n_0,MULTR0_i_2__2_n_0,MULTR0_i_3__2_n_0,MULTR0_i_4__2_n_0,MULTR0_i_5__2_n_0,MULTR0_i_6__2_n_0,MULTR0_i_7__2_n_0,MULTR0_i_8__2_n_0,MULTR0_i_9__2_n_0,MULTR0_i_10__2_n_0,MULTR0_i_11__2_n_0,MULTR0_i_12__2_n_0,MULTR0_i_13__2_n_0,MULTR0_i_14__2_n_0,MULTR0_i_15__2_n_0,MULTR0_i_16__2_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_MULTR0_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_MULTR0_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_MULTR0_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(1'b0),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_MULTR0_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_MULTR0_OVERFLOW_UNCONNECTED),
        .P({NLW_MULTR0_P_UNCONNECTED[47:32],MULTR0_n_74,MULTR0_n_75,MULTR0_n_76,MULTR0_n_77,MULTR0_n_78,MULTR0_n_79,MULTR0_n_80,MULTR0_n_81,MULTR0_n_82,MULTR0_n_83,MULTR0_n_84,MULTR0_n_85,MULTR0_n_86,MULTR0_n_87,MULTR0_n_88,MULTR0_n_89,MULTR0_n_90,MULTR0_n_91,MULTR0_n_92,MULTR0_n_93,MULTR0_n_94,MULTR0_n_95,MULTR0_n_96,MULTR0_n_97,MULTR0_n_98,MULTR0_n_99,MULTR0_n_100,MULTR0_n_101,MULTR0_n_102,MULTR0_n_103,MULTR0_n_104,MULTR0_n_105}),
        .PATTERNBDETECT(NLW_MULTR0_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_MULTR0_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_MULTR0_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(1'b0),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_MULTR0_UNDERFLOW_UNCONNECTED));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_10__2
       (.I0(ACC_reg[6]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_8 ),
        .I3(out[0]),
        .O(MULTR0_i_10__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_11__2
       (.I0(ACC_reg[5]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_9 ),
        .I3(out[0]),
        .O(MULTR0_i_11__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_12__2
       (.I0(ACC_reg[4]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_10 ),
        .I3(out[0]),
        .O(MULTR0_i_12__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_13__2
       (.I0(ACC_reg[3]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_11 ),
        .I3(out[0]),
        .O(MULTR0_i_13__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_14__2
       (.I0(ACC_reg[2]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_12 ),
        .I3(out[0]),
        .O(MULTR0_i_14__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_15__2
       (.I0(ACC_reg[1]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_13 ),
        .I3(out[0]),
        .O(MULTR0_i_15__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_16__2
       (.I0(ACC_reg[0]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_14 ),
        .I3(out[0]),
        .O(MULTR0_i_16__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_17
       (.I0(P[15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(MULTR0_i_17_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_18
       (.I0(P[14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(MULTR0_i_18_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_19
       (.I0(P[13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(MULTR0_i_19_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_1__2
       (.I0(ACC_reg[15]),
        .I1(out[1]),
        .I2(\write_count_reg[0] ),
        .I3(out[0]),
        .O(MULTR0_i_1__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_20
       (.I0(P[12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(MULTR0_i_20_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_21
       (.I0(P[11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(MULTR0_i_21_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_22
       (.I0(P[10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(MULTR0_i_22_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_23
       (.I0(P[9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(MULTR0_i_23_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_24
       (.I0(P[8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(MULTR0_i_24_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_25
       (.I0(P[7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(MULTR0_i_25_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_26
       (.I0(P[6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(MULTR0_i_26_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_27
       (.I0(P[5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(MULTR0_i_27_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_28
       (.I0(P[4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(MULTR0_i_28_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_29
       (.I0(P[3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(MULTR0_i_29_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_2__2
       (.I0(ACC_reg[14]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_0 ),
        .I3(out[0]),
        .O(MULTR0_i_2__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_30
       (.I0(P[2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(MULTR0_i_30_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_31
       (.I0(P[1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(MULTR0_i_31_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_32
       (.I0(P[0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(MULTR0_i_32_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_3__2
       (.I0(ACC_reg[13]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_1 ),
        .I3(out[0]),
        .O(MULTR0_i_3__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_4__2
       (.I0(ACC_reg[12]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_2 ),
        .I3(out[0]),
        .O(MULTR0_i_4__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_5__2
       (.I0(ACC_reg[11]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_3 ),
        .I3(out[0]),
        .O(MULTR0_i_5__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_6__2
       (.I0(ACC_reg[10]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_4 ),
        .I3(out[0]),
        .O(MULTR0_i_6__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_7__2
       (.I0(ACC_reg[9]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_5 ),
        .I3(out[0]),
        .O(MULTR0_i_7__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_8__2
       (.I0(ACC_reg[8]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_6 ),
        .I3(out[0]),
        .O(MULTR0_i_8__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    MULTR0_i_9__2
       (.I0(ACC_reg[7]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_7 ),
        .I3(out[0]),
        .O(MULTR0_i_9__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    cestat_OBUF_inst_i_1
       (.I0(state_OBUF[1]),
        .I1(state_OBUF[0]),
        .O(\mul_count_reg[3]_rep__0 ));
endmodule

(* H = "4" *) (* N = "4" *) (* data_width = "16" *) 
(* NotValidForBitStream *)
module ram_cell
   (reset,
    start_bram_assign,
    \input_vector[7] ,
    \input_vector[6] ,
    \input_vector[5] ,
    \input_vector[4] ,
    \input_vector[3] ,
    \input_vector[2] ,
    \input_vector[1] ,
    \input_vector[0] ,
    start_bram_read,
    start_mul,
    CLK,
    RST,
    \wv1[3] ,
    \wv1[2] ,
    \wv1[1] ,
    \wv1[0] ,
    \wv2[3] ,
    \wv2[2] ,
    \wv2[1] ,
    \wv2[0] ,
    \wv3[3] ,
    \wv3[2] ,
    \wv3[1] ,
    \wv3[0] ,
    \wv4[3] ,
    \wv4[2] ,
    \wv4[1] ,
    \wv4[0] ,
    \r1[3] ,
    \r1[2] ,
    \r1[1] ,
    \r1[0] ,
    \r2[3] ,
    \r2[2] ,
    \r2[1] ,
    \r2[0] ,
    \r3[3] ,
    \r3[2] ,
    \r3[1] ,
    \r3[0] ,
    \r4[3] ,
    \r4[2] ,
    \r4[1] ,
    \r4[0] ,
    read,
    done,
    \S1[3] ,
    \S1[2] ,
    \S1[1] ,
    \S1[0] ,
    \S2[3] ,
    \S2[2] ,
    \S2[1] ,
    \S2[0] ,
    \S3[3] ,
    \S3[2] ,
    \S3[1] ,
    \S3[0] ,
    \S4[3] ,
    \S4[2] ,
    \S4[1] ,
    \S4[0] ,
    state,
    cestat);
  input reset;
  input start_bram_assign;
  input [15:0]\input_vector[7] ;
  input [15:0]\input_vector[6] ;
  input [15:0]\input_vector[5] ;
  input [15:0]\input_vector[4] ;
  input [15:0]\input_vector[3] ;
  input [15:0]\input_vector[2] ;
  input [15:0]\input_vector[1] ;
  input [15:0]\input_vector[0] ;
  input start_bram_read;
  input start_mul;
  input CLK;
  input RST;
  input [15:0]\wv1[3] ;
  input [15:0]\wv1[2] ;
  input [15:0]\wv1[1] ;
  input [15:0]\wv1[0] ;
  input [15:0]\wv2[3] ;
  input [15:0]\wv2[2] ;
  input [15:0]\wv2[1] ;
  input [15:0]\wv2[0] ;
  input [15:0]\wv3[3] ;
  input [15:0]\wv3[2] ;
  input [15:0]\wv3[1] ;
  input [15:0]\wv3[0] ;
  input [15:0]\wv4[3] ;
  input [15:0]\wv4[2] ;
  input [15:0]\wv4[1] ;
  input [15:0]\wv4[0] ;
  output [15:0]\r1[3] ;
  output [15:0]\r1[2] ;
  output [15:0]\r1[1] ;
  output [15:0]\r1[0] ;
  output [15:0]\r2[3] ;
  output [15:0]\r2[2] ;
  output [15:0]\r2[1] ;
  output [15:0]\r2[0] ;
  output [15:0]\r3[3] ;
  output [15:0]\r3[2] ;
  output [15:0]\r3[1] ;
  output [15:0]\r3[0] ;
  output [15:0]\r4[3] ;
  output [15:0]\r4[2] ;
  output [15:0]\r4[1] ;
  output [15:0]\r4[0] ;
  output [7:0]read;
  output done;
  output [32:0]\S1[3] ;
  output [32:0]\S1[2] ;
  output [32:0]\S1[1] ;
  output [32:0]\S1[0] ;
  output [32:0]\S2[3] ;
  output [32:0]\S2[2] ;
  output [32:0]\S2[1] ;
  output [32:0]\S2[0] ;
  output [32:0]\S3[3] ;
  output [32:0]\S3[2] ;
  output [32:0]\S3[1] ;
  output [32:0]\S3[0] ;
  output [32:0]\S4[3] ;
  output [32:0]\S4[2] ;
  output [32:0]\S4[1] ;
  output [32:0]\S4[0] ;
  output [1:0]state;
  output cestat;

  wire ACC_reg_i_100_n_0;
  wire ACC_reg_i_101_n_0;
  wire ACC_reg_i_102_n_0;
  wire ACC_reg_i_103_n_0;
  wire ACC_reg_i_104_n_0;
  wire ACC_reg_i_105_n_0;
  wire ACC_reg_i_106_n_0;
  wire ACC_reg_i_107_n_0;
  wire ACC_reg_i_108_n_0;
  wire ACC_reg_i_109_n_0;
  wire ACC_reg_i_110_n_0;
  wire ACC_reg_i_111_n_0;
  wire ACC_reg_i_112_n_0;
  wire ACC_reg_i_113_n_0;
  wire ACC_reg_i_114_n_0;
  wire ACC_reg_i_115_n_0;
  wire ACC_reg_i_116_n_0;
  wire ACC_reg_i_117_n_0;
  wire ACC_reg_i_118_n_0;
  wire ACC_reg_i_119_n_0;
  wire ACC_reg_i_120_n_0;
  wire ACC_reg_i_121_n_0;
  wire ACC_reg_i_122_n_0;
  wire ACC_reg_i_123_n_0;
  wire ACC_reg_i_124_n_0;
  wire ACC_reg_i_125_n_0;
  wire ACC_reg_i_126_n_0;
  wire ACC_reg_i_127_n_0;
  wire ACC_reg_i_128_n_0;
  wire ACC_reg_i_129_n_0;
  wire ACC_reg_i_130_n_0;
  wire ACC_reg_i_131_n_0;
  wire ACC_reg_i_132_n_0;
  wire ACC_reg_i_133_n_0;
  wire ACC_reg_i_134_n_0;
  wire ACC_reg_i_135_n_0;
  wire ACC_reg_i_136_n_0;
  wire ACC_reg_i_137_n_0;
  wire ACC_reg_i_138_n_0;
  wire ACC_reg_i_139_n_0;
  wire ACC_reg_i_140_n_0;
  wire ACC_reg_i_141_n_0;
  wire ACC_reg_i_142_n_0;
  wire ACC_reg_i_143_n_0;
  wire ACC_reg_i_144_n_0;
  wire ACC_reg_i_145_n_0;
  wire ACC_reg_i_146_n_0;
  wire ACC_reg_i_147_n_0;
  wire ACC_reg_i_148_n_0;
  wire ACC_reg_i_149_n_0;
  wire ACC_reg_i_150_n_0;
  wire ACC_reg_i_151_n_0;
  wire ACC_reg_i_152_n_0;
  wire ACC_reg_i_153_n_0;
  wire ACC_reg_i_154_n_0;
  wire ACC_reg_i_155_n_0;
  wire ACC_reg_i_156_n_0;
  wire ACC_reg_i_157_n_0;
  wire ACC_reg_i_158_n_0;
  wire ACC_reg_i_159_n_0;
  wire ACC_reg_i_160_n_0;
  wire ACC_reg_i_161_n_0;
  wire ACC_reg_i_162_n_0;
  wire ACC_reg_i_163_n_0;
  wire ACC_reg_i_164_n_0;
  wire ACC_reg_i_165_n_0;
  wire ACC_reg_i_166_n_0;
  wire ACC_reg_i_167_n_0;
  wire ACC_reg_i_168_n_0;
  wire ACC_reg_i_169_n_0;
  wire ACC_reg_i_170_n_0;
  wire ACC_reg_i_171_n_0;
  wire ACC_reg_i_172_n_0;
  wire ACC_reg_i_173_n_0;
  wire ACC_reg_i_174_n_0;
  wire ACC_reg_i_175_n_0;
  wire ACC_reg_i_176_n_0;
  wire ACC_reg_i_177_n_0;
  wire ACC_reg_i_178_n_0;
  wire ACC_reg_i_179_n_0;
  wire ACC_reg_i_180_n_0;
  wire ACC_reg_i_181_n_0;
  wire ACC_reg_i_182_n_0;
  wire ACC_reg_i_183_n_0;
  wire ACC_reg_i_184_n_0;
  wire ACC_reg_i_185_n_0;
  wire ACC_reg_i_186_n_0;
  wire ACC_reg_i_187_n_0;
  wire ACC_reg_i_188_n_0;
  wire ACC_reg_i_189_n_0;
  wire ACC_reg_i_190_n_0;
  wire ACC_reg_i_191_n_0;
  wire ACC_reg_i_192_n_0;
  wire ACC_reg_i_193_n_0;
  wire ACC_reg_i_194_n_0;
  wire ACC_reg_i_195_n_0;
  wire ACC_reg_i_196_n_0;
  wire ACC_reg_i_197_n_0;
  wire ACC_reg_i_198_n_0;
  wire ACC_reg_i_199_n_0;
  wire ACC_reg_i_200_n_0;
  wire ACC_reg_i_201_n_0;
  wire ACC_reg_i_202_n_0;
  wire ACC_reg_i_203_n_0;
  wire ACC_reg_i_204_n_0;
  wire ACC_reg_i_205_n_0;
  wire ACC_reg_i_206_n_0;
  wire ACC_reg_i_207_n_0;
  wire ACC_reg_i_208_n_0;
  wire ACC_reg_i_81_n_0;
  wire ACC_reg_i_82_n_0;
  wire ACC_reg_i_83_n_0;
  wire ACC_reg_i_84_n_0;
  wire ACC_reg_i_85_n_0;
  wire ACC_reg_i_86_n_0;
  wire ACC_reg_i_87_n_0;
  wire ACC_reg_i_88_n_0;
  wire ACC_reg_i_89_n_0;
  wire ACC_reg_i_90_n_0;
  wire ACC_reg_i_91_n_0;
  wire ACC_reg_i_92_n_0;
  wire ACC_reg_i_93_n_0;
  wire ACC_reg_i_94_n_0;
  wire ACC_reg_i_95_n_0;
  wire ACC_reg_i_96_n_0;
  wire ACC_reg_i_97_n_0;
  wire ACC_reg_i_98_n_0;
  wire ACC_reg_i_99_n_0;
  wire CLK;
  wire CLK_IBUF;
  wire CLK_IBUF_BUFG;
  wire RST;
  wire RST_IBUF;
  wire [32:0]\S1[0] ;
  wire [32:0]\S1[0]_OBUF ;
  wire [32:0]\S1[1] ;
  wire [32:0]\S1[1]_OBUF ;
  wire [32:0]\S1[2] ;
  wire [32:0]\S1[2]_OBUF ;
  wire [32:0]\S1[3] ;
  wire [32:0]\S1[3]_OBUF ;
  wire [32:0]\S2[0] ;
  wire [32:0]\S2[0]_OBUF ;
  wire [32:0]\S2[1] ;
  wire [32:0]\S2[1]_OBUF ;
  wire [32:0]\S2[2] ;
  wire [32:0]\S2[2]_OBUF ;
  wire [32:0]\S2[3] ;
  wire [32:0]\S2[3]_OBUF ;
  wire [32:0]\S3[0] ;
  wire [32:0]\S3[0]_OBUF ;
  wire [32:0]\S3[1] ;
  wire [32:0]\S3[1]_OBUF ;
  wire [32:0]\S3[2] ;
  wire [32:0]\S3[2]_OBUF ;
  wire [32:0]\S3[3] ;
  wire [32:0]\S3[3]_OBUF ;
  wire [32:0]\S4[0] ;
  wire [32:0]\S4[0]_OBUF ;
  wire [32:0]\S4[1] ;
  wire [32:0]\S4[1]_OBUF ;
  wire [32:0]\S4[2] ;
  wire [32:0]\S4[2]_OBUF ;
  wire [32:0]\S4[3] ;
  wire [32:0]\S4[3]_OBUF ;
  wire cestat;
  wire cestat_OBUF;
  wire done;
  wire done_OBUF;
  wire \generate_BRAM_module1[0].bram_instance_n_0 ;
  wire \generate_BRAM_module1[0].bram_instance_n_17 ;
  wire \generate_BRAM_module1[0].bram_instance_n_18 ;
  wire \generate_BRAM_module1[0].bram_instance_n_19 ;
  wire \generate_BRAM_module1[0].bram_instance_n_20 ;
  wire \generate_BRAM_module1[0].bram_instance_n_21 ;
  wire \generate_BRAM_module1[0].bram_instance_n_22 ;
  wire \generate_BRAM_module1[0].bram_instance_n_23 ;
  wire \generate_BRAM_module1[0].bram_instance_n_24 ;
  wire \generate_BRAM_module1[0].bram_instance_n_25 ;
  wire \generate_BRAM_module1[0].bram_instance_n_26 ;
  wire \generate_BRAM_module1[0].bram_instance_n_27 ;
  wire \generate_BRAM_module1[0].bram_instance_n_28 ;
  wire \generate_BRAM_module1[0].bram_instance_n_29 ;
  wire \generate_BRAM_module1[0].bram_instance_n_30 ;
  wire \generate_BRAM_module1[0].bram_instance_n_31 ;
  wire \generate_BRAM_module1[1].bram_instance_n_0 ;
  wire \generate_BRAM_module1[1].bram_instance_n_17 ;
  wire \generate_BRAM_module1[1].bram_instance_n_18 ;
  wire \generate_BRAM_module1[1].bram_instance_n_19 ;
  wire \generate_BRAM_module1[1].bram_instance_n_20 ;
  wire \generate_BRAM_module1[1].bram_instance_n_21 ;
  wire \generate_BRAM_module1[1].bram_instance_n_22 ;
  wire \generate_BRAM_module1[1].bram_instance_n_23 ;
  wire \generate_BRAM_module1[1].bram_instance_n_24 ;
  wire \generate_BRAM_module1[1].bram_instance_n_25 ;
  wire \generate_BRAM_module1[1].bram_instance_n_26 ;
  wire \generate_BRAM_module1[1].bram_instance_n_27 ;
  wire \generate_BRAM_module1[1].bram_instance_n_28 ;
  wire \generate_BRAM_module1[1].bram_instance_n_29 ;
  wire \generate_BRAM_module1[1].bram_instance_n_30 ;
  wire \generate_BRAM_module1[1].bram_instance_n_31 ;
  wire \generate_BRAM_module1[2].bram_instance_n_0 ;
  wire \generate_BRAM_module1[2].bram_instance_n_17 ;
  wire \generate_BRAM_module1[2].bram_instance_n_18 ;
  wire \generate_BRAM_module1[2].bram_instance_n_19 ;
  wire \generate_BRAM_module1[2].bram_instance_n_20 ;
  wire \generate_BRAM_module1[2].bram_instance_n_21 ;
  wire \generate_BRAM_module1[2].bram_instance_n_22 ;
  wire \generate_BRAM_module1[2].bram_instance_n_23 ;
  wire \generate_BRAM_module1[2].bram_instance_n_24 ;
  wire \generate_BRAM_module1[2].bram_instance_n_25 ;
  wire \generate_BRAM_module1[2].bram_instance_n_26 ;
  wire \generate_BRAM_module1[2].bram_instance_n_27 ;
  wire \generate_BRAM_module1[2].bram_instance_n_28 ;
  wire \generate_BRAM_module1[2].bram_instance_n_29 ;
  wire \generate_BRAM_module1[2].bram_instance_n_30 ;
  wire \generate_BRAM_module1[2].bram_instance_n_31 ;
  wire \generate_BRAM_module1[3].bram_instance_n_0 ;
  wire \generate_BRAM_module1[3].bram_instance_n_17 ;
  wire \generate_BRAM_module1[3].bram_instance_n_18 ;
  wire \generate_BRAM_module1[3].bram_instance_n_19 ;
  wire \generate_BRAM_module1[3].bram_instance_n_20 ;
  wire \generate_BRAM_module1[3].bram_instance_n_21 ;
  wire \generate_BRAM_module1[3].bram_instance_n_22 ;
  wire \generate_BRAM_module1[3].bram_instance_n_23 ;
  wire \generate_BRAM_module1[3].bram_instance_n_24 ;
  wire \generate_BRAM_module1[3].bram_instance_n_25 ;
  wire \generate_BRAM_module1[3].bram_instance_n_26 ;
  wire \generate_BRAM_module1[3].bram_instance_n_27 ;
  wire \generate_BRAM_module1[3].bram_instance_n_28 ;
  wire \generate_BRAM_module1[3].bram_instance_n_29 ;
  wire \generate_BRAM_module1[3].bram_instance_n_30 ;
  wire \generate_BRAM_module1[3].bram_instance_n_31 ;
  wire \generate_BRAM_module2[0].bram_instance_n_0 ;
  wire \generate_BRAM_module2[0].bram_instance_n_17 ;
  wire \generate_BRAM_module2[0].bram_instance_n_18 ;
  wire \generate_BRAM_module2[0].bram_instance_n_19 ;
  wire \generate_BRAM_module2[0].bram_instance_n_20 ;
  wire \generate_BRAM_module2[0].bram_instance_n_21 ;
  wire \generate_BRAM_module2[0].bram_instance_n_22 ;
  wire \generate_BRAM_module2[0].bram_instance_n_23 ;
  wire \generate_BRAM_module2[0].bram_instance_n_24 ;
  wire \generate_BRAM_module2[0].bram_instance_n_25 ;
  wire \generate_BRAM_module2[0].bram_instance_n_26 ;
  wire \generate_BRAM_module2[0].bram_instance_n_27 ;
  wire \generate_BRAM_module2[0].bram_instance_n_28 ;
  wire \generate_BRAM_module2[0].bram_instance_n_29 ;
  wire \generate_BRAM_module2[0].bram_instance_n_30 ;
  wire \generate_BRAM_module2[0].bram_instance_n_31 ;
  wire \generate_BRAM_module2[1].bram_instance_n_0 ;
  wire \generate_BRAM_module2[1].bram_instance_n_17 ;
  wire \generate_BRAM_module2[1].bram_instance_n_18 ;
  wire \generate_BRAM_module2[1].bram_instance_n_19 ;
  wire \generate_BRAM_module2[1].bram_instance_n_20 ;
  wire \generate_BRAM_module2[1].bram_instance_n_21 ;
  wire \generate_BRAM_module2[1].bram_instance_n_22 ;
  wire \generate_BRAM_module2[1].bram_instance_n_23 ;
  wire \generate_BRAM_module2[1].bram_instance_n_24 ;
  wire \generate_BRAM_module2[1].bram_instance_n_25 ;
  wire \generate_BRAM_module2[1].bram_instance_n_26 ;
  wire \generate_BRAM_module2[1].bram_instance_n_27 ;
  wire \generate_BRAM_module2[1].bram_instance_n_28 ;
  wire \generate_BRAM_module2[1].bram_instance_n_29 ;
  wire \generate_BRAM_module2[1].bram_instance_n_30 ;
  wire \generate_BRAM_module2[1].bram_instance_n_31 ;
  wire \generate_BRAM_module2[2].bram_instance_n_0 ;
  wire \generate_BRAM_module2[2].bram_instance_n_17 ;
  wire \generate_BRAM_module2[2].bram_instance_n_18 ;
  wire \generate_BRAM_module2[2].bram_instance_n_19 ;
  wire \generate_BRAM_module2[2].bram_instance_n_20 ;
  wire \generate_BRAM_module2[2].bram_instance_n_21 ;
  wire \generate_BRAM_module2[2].bram_instance_n_22 ;
  wire \generate_BRAM_module2[2].bram_instance_n_23 ;
  wire \generate_BRAM_module2[2].bram_instance_n_24 ;
  wire \generate_BRAM_module2[2].bram_instance_n_25 ;
  wire \generate_BRAM_module2[2].bram_instance_n_26 ;
  wire \generate_BRAM_module2[2].bram_instance_n_27 ;
  wire \generate_BRAM_module2[2].bram_instance_n_28 ;
  wire \generate_BRAM_module2[2].bram_instance_n_29 ;
  wire \generate_BRAM_module2[2].bram_instance_n_30 ;
  wire \generate_BRAM_module2[2].bram_instance_n_31 ;
  wire \generate_BRAM_module2[3].bram_instance_n_0 ;
  wire \generate_BRAM_module2[3].bram_instance_n_17 ;
  wire \generate_BRAM_module2[3].bram_instance_n_18 ;
  wire \generate_BRAM_module2[3].bram_instance_n_19 ;
  wire \generate_BRAM_module2[3].bram_instance_n_20 ;
  wire \generate_BRAM_module2[3].bram_instance_n_21 ;
  wire \generate_BRAM_module2[3].bram_instance_n_22 ;
  wire \generate_BRAM_module2[3].bram_instance_n_23 ;
  wire \generate_BRAM_module2[3].bram_instance_n_24 ;
  wire \generate_BRAM_module2[3].bram_instance_n_25 ;
  wire \generate_BRAM_module2[3].bram_instance_n_26 ;
  wire \generate_BRAM_module2[3].bram_instance_n_27 ;
  wire \generate_BRAM_module2[3].bram_instance_n_28 ;
  wire \generate_BRAM_module2[3].bram_instance_n_29 ;
  wire \generate_BRAM_module2[3].bram_instance_n_30 ;
  wire \generate_BRAM_module2[3].bram_instance_n_31 ;
  wire \generate_BRAM_module3[0].bram_instance_n_0 ;
  wire \generate_BRAM_module3[0].bram_instance_n_17 ;
  wire \generate_BRAM_module3[0].bram_instance_n_18 ;
  wire \generate_BRAM_module3[0].bram_instance_n_19 ;
  wire \generate_BRAM_module3[0].bram_instance_n_20 ;
  wire \generate_BRAM_module3[0].bram_instance_n_21 ;
  wire \generate_BRAM_module3[0].bram_instance_n_22 ;
  wire \generate_BRAM_module3[0].bram_instance_n_23 ;
  wire \generate_BRAM_module3[0].bram_instance_n_24 ;
  wire \generate_BRAM_module3[0].bram_instance_n_25 ;
  wire \generate_BRAM_module3[0].bram_instance_n_26 ;
  wire \generate_BRAM_module3[0].bram_instance_n_27 ;
  wire \generate_BRAM_module3[0].bram_instance_n_28 ;
  wire \generate_BRAM_module3[0].bram_instance_n_29 ;
  wire \generate_BRAM_module3[0].bram_instance_n_30 ;
  wire \generate_BRAM_module3[0].bram_instance_n_31 ;
  wire \generate_BRAM_module3[1].bram_instance_n_0 ;
  wire \generate_BRAM_module3[1].bram_instance_n_17 ;
  wire \generate_BRAM_module3[1].bram_instance_n_18 ;
  wire \generate_BRAM_module3[1].bram_instance_n_19 ;
  wire \generate_BRAM_module3[1].bram_instance_n_20 ;
  wire \generate_BRAM_module3[1].bram_instance_n_21 ;
  wire \generate_BRAM_module3[1].bram_instance_n_22 ;
  wire \generate_BRAM_module3[1].bram_instance_n_23 ;
  wire \generate_BRAM_module3[1].bram_instance_n_24 ;
  wire \generate_BRAM_module3[1].bram_instance_n_25 ;
  wire \generate_BRAM_module3[1].bram_instance_n_26 ;
  wire \generate_BRAM_module3[1].bram_instance_n_27 ;
  wire \generate_BRAM_module3[1].bram_instance_n_28 ;
  wire \generate_BRAM_module3[1].bram_instance_n_29 ;
  wire \generate_BRAM_module3[1].bram_instance_n_30 ;
  wire \generate_BRAM_module3[1].bram_instance_n_31 ;
  wire \generate_BRAM_module3[2].bram_instance_n_0 ;
  wire \generate_BRAM_module3[2].bram_instance_n_17 ;
  wire \generate_BRAM_module3[2].bram_instance_n_18 ;
  wire \generate_BRAM_module3[2].bram_instance_n_19 ;
  wire \generate_BRAM_module3[2].bram_instance_n_20 ;
  wire \generate_BRAM_module3[2].bram_instance_n_21 ;
  wire \generate_BRAM_module3[2].bram_instance_n_22 ;
  wire \generate_BRAM_module3[2].bram_instance_n_23 ;
  wire \generate_BRAM_module3[2].bram_instance_n_24 ;
  wire \generate_BRAM_module3[2].bram_instance_n_25 ;
  wire \generate_BRAM_module3[2].bram_instance_n_26 ;
  wire \generate_BRAM_module3[2].bram_instance_n_27 ;
  wire \generate_BRAM_module3[2].bram_instance_n_28 ;
  wire \generate_BRAM_module3[2].bram_instance_n_29 ;
  wire \generate_BRAM_module3[2].bram_instance_n_30 ;
  wire \generate_BRAM_module3[2].bram_instance_n_31 ;
  wire \generate_BRAM_module3[3].bram_instance_n_0 ;
  wire \generate_BRAM_module3[3].bram_instance_n_17 ;
  wire \generate_BRAM_module3[3].bram_instance_n_18 ;
  wire \generate_BRAM_module3[3].bram_instance_n_19 ;
  wire \generate_BRAM_module3[3].bram_instance_n_20 ;
  wire \generate_BRAM_module3[3].bram_instance_n_21 ;
  wire \generate_BRAM_module3[3].bram_instance_n_22 ;
  wire \generate_BRAM_module3[3].bram_instance_n_23 ;
  wire \generate_BRAM_module3[3].bram_instance_n_24 ;
  wire \generate_BRAM_module3[3].bram_instance_n_25 ;
  wire \generate_BRAM_module3[3].bram_instance_n_26 ;
  wire \generate_BRAM_module3[3].bram_instance_n_27 ;
  wire \generate_BRAM_module3[3].bram_instance_n_28 ;
  wire \generate_BRAM_module3[3].bram_instance_n_29 ;
  wire \generate_BRAM_module3[3].bram_instance_n_30 ;
  wire \generate_BRAM_module3[3].bram_instance_n_31 ;
  wire \generate_BRAM_module4[0].bram_instance_n_0 ;
  wire \generate_BRAM_module4[0].bram_instance_n_1 ;
  wire \generate_BRAM_module4[0].bram_instance_n_10 ;
  wire \generate_BRAM_module4[0].bram_instance_n_11 ;
  wire \generate_BRAM_module4[0].bram_instance_n_12 ;
  wire \generate_BRAM_module4[0].bram_instance_n_13 ;
  wire \generate_BRAM_module4[0].bram_instance_n_14 ;
  wire \generate_BRAM_module4[0].bram_instance_n_15 ;
  wire \generate_BRAM_module4[0].bram_instance_n_2 ;
  wire \generate_BRAM_module4[0].bram_instance_n_3 ;
  wire \generate_BRAM_module4[0].bram_instance_n_4 ;
  wire \generate_BRAM_module4[0].bram_instance_n_5 ;
  wire \generate_BRAM_module4[0].bram_instance_n_6 ;
  wire \generate_BRAM_module4[0].bram_instance_n_7 ;
  wire \generate_BRAM_module4[0].bram_instance_n_8 ;
  wire \generate_BRAM_module4[0].bram_instance_n_9 ;
  wire \generate_BRAM_module4[1].bram_instance_n_0 ;
  wire \generate_BRAM_module4[1].bram_instance_n_1 ;
  wire \generate_BRAM_module4[1].bram_instance_n_10 ;
  wire \generate_BRAM_module4[1].bram_instance_n_11 ;
  wire \generate_BRAM_module4[1].bram_instance_n_12 ;
  wire \generate_BRAM_module4[1].bram_instance_n_13 ;
  wire \generate_BRAM_module4[1].bram_instance_n_14 ;
  wire \generate_BRAM_module4[1].bram_instance_n_15 ;
  wire \generate_BRAM_module4[1].bram_instance_n_2 ;
  wire \generate_BRAM_module4[1].bram_instance_n_3 ;
  wire \generate_BRAM_module4[1].bram_instance_n_4 ;
  wire \generate_BRAM_module4[1].bram_instance_n_5 ;
  wire \generate_BRAM_module4[1].bram_instance_n_6 ;
  wire \generate_BRAM_module4[1].bram_instance_n_7 ;
  wire \generate_BRAM_module4[1].bram_instance_n_8 ;
  wire \generate_BRAM_module4[1].bram_instance_n_9 ;
  wire \generate_BRAM_module4[2].bram_instance_n_0 ;
  wire \generate_BRAM_module4[2].bram_instance_n_1 ;
  wire \generate_BRAM_module4[2].bram_instance_n_10 ;
  wire \generate_BRAM_module4[2].bram_instance_n_11 ;
  wire \generate_BRAM_module4[2].bram_instance_n_12 ;
  wire \generate_BRAM_module4[2].bram_instance_n_13 ;
  wire \generate_BRAM_module4[2].bram_instance_n_14 ;
  wire \generate_BRAM_module4[2].bram_instance_n_15 ;
  wire \generate_BRAM_module4[2].bram_instance_n_2 ;
  wire \generate_BRAM_module4[2].bram_instance_n_3 ;
  wire \generate_BRAM_module4[2].bram_instance_n_4 ;
  wire \generate_BRAM_module4[2].bram_instance_n_5 ;
  wire \generate_BRAM_module4[2].bram_instance_n_6 ;
  wire \generate_BRAM_module4[2].bram_instance_n_7 ;
  wire \generate_BRAM_module4[2].bram_instance_n_8 ;
  wire \generate_BRAM_module4[2].bram_instance_n_9 ;
  wire \generate_BRAM_module4[3].bram_instance_n_1 ;
  wire \generate_BRAM_module4[3].bram_instance_n_10 ;
  wire \generate_BRAM_module4[3].bram_instance_n_11 ;
  wire \generate_BRAM_module4[3].bram_instance_n_12 ;
  wire \generate_BRAM_module4[3].bram_instance_n_13 ;
  wire \generate_BRAM_module4[3].bram_instance_n_14 ;
  wire \generate_BRAM_module4[3].bram_instance_n_15 ;
  wire \generate_BRAM_module4[3].bram_instance_n_16 ;
  wire \generate_BRAM_module4[3].bram_instance_n_2 ;
  wire \generate_BRAM_module4[3].bram_instance_n_3 ;
  wire \generate_BRAM_module4[3].bram_instance_n_4 ;
  wire \generate_BRAM_module4[3].bram_instance_n_5 ;
  wire \generate_BRAM_module4[3].bram_instance_n_6 ;
  wire \generate_BRAM_module4[3].bram_instance_n_7 ;
  wire \generate_BRAM_module4[3].bram_instance_n_8 ;
  wire \generate_BRAM_module4[3].bram_instance_n_9 ;
  wire [15:0]\input_vector[0] ;
  wire [15:0]\input_vector[1] ;
  wire [15:0]\input_vector[2] ;
  wire [15:0]\input_vector[3] ;
  wire [15:0]\input_vector[4] ;
  wire [15:0]\input_vector[5] ;
  wire [15:0]\input_vector[6] ;
  wire [15:0]\input_vector[7] ;
  wire mmx_unit_1_n_132;
  wire mmx_unit_1_n_133;
  wire mmx_unit_1_n_134;
  wire mmx_unit_1_n_135;
  wire mmx_unit_1_n_136;
  wire mmx_unit_1_n_137;
  wire mmx_unit_1_n_138;
  wire mmx_unit_1_n_139;
  wire mmx_unit_1_n_140;
  wire mmx_unit_1_n_141;
  wire mmx_unit_1_n_142;
  wire mmx_unit_1_n_143;
  wire mmx_unit_1_n_144;
  wire mmx_unit_1_n_145;
  wire mmx_unit_1_n_146;
  wire mmx_unit_1_n_147;
  wire \mul_count[0]_i_2_n_0 ;
  wire \mul_count_reg[0]_i_1_n_0 ;
  wire \mul_count_reg[0]_i_1_n_1 ;
  wire \mul_count_reg[0]_i_1_n_2 ;
  wire \mul_count_reg[0]_i_1_n_3 ;
  wire \mul_count_reg[0]_i_1_n_4 ;
  wire \mul_count_reg[0]_i_1_n_5 ;
  wire \mul_count_reg[0]_i_1_n_6 ;
  wire \mul_count_reg[0]_i_1_n_7 ;
  wire \mul_count_reg[0]_rep__0_n_0 ;
  wire \mul_count_reg[0]_rep_n_0 ;
  wire \mul_count_reg[12]_i_1_n_0 ;
  wire \mul_count_reg[12]_i_1_n_1 ;
  wire \mul_count_reg[12]_i_1_n_2 ;
  wire \mul_count_reg[12]_i_1_n_3 ;
  wire \mul_count_reg[12]_i_1_n_4 ;
  wire \mul_count_reg[12]_i_1_n_5 ;
  wire \mul_count_reg[12]_i_1_n_6 ;
  wire \mul_count_reg[12]_i_1_n_7 ;
  wire \mul_count_reg[16]_i_1_n_0 ;
  wire \mul_count_reg[16]_i_1_n_1 ;
  wire \mul_count_reg[16]_i_1_n_2 ;
  wire \mul_count_reg[16]_i_1_n_3 ;
  wire \mul_count_reg[16]_i_1_n_4 ;
  wire \mul_count_reg[16]_i_1_n_5 ;
  wire \mul_count_reg[16]_i_1_n_6 ;
  wire \mul_count_reg[16]_i_1_n_7 ;
  wire \mul_count_reg[1]_rep__0_n_0 ;
  wire \mul_count_reg[1]_rep_n_0 ;
  wire \mul_count_reg[20]_i_1_n_0 ;
  wire \mul_count_reg[20]_i_1_n_1 ;
  wire \mul_count_reg[20]_i_1_n_2 ;
  wire \mul_count_reg[20]_i_1_n_3 ;
  wire \mul_count_reg[20]_i_1_n_4 ;
  wire \mul_count_reg[20]_i_1_n_5 ;
  wire \mul_count_reg[20]_i_1_n_6 ;
  wire \mul_count_reg[20]_i_1_n_7 ;
  wire \mul_count_reg[24]_i_1_n_0 ;
  wire \mul_count_reg[24]_i_1_n_1 ;
  wire \mul_count_reg[24]_i_1_n_2 ;
  wire \mul_count_reg[24]_i_1_n_3 ;
  wire \mul_count_reg[24]_i_1_n_4 ;
  wire \mul_count_reg[24]_i_1_n_5 ;
  wire \mul_count_reg[24]_i_1_n_6 ;
  wire \mul_count_reg[24]_i_1_n_7 ;
  wire \mul_count_reg[28]_i_1_n_1 ;
  wire \mul_count_reg[28]_i_1_n_2 ;
  wire \mul_count_reg[28]_i_1_n_3 ;
  wire \mul_count_reg[28]_i_1_n_4 ;
  wire \mul_count_reg[28]_i_1_n_5 ;
  wire \mul_count_reg[28]_i_1_n_6 ;
  wire \mul_count_reg[28]_i_1_n_7 ;
  wire \mul_count_reg[2]_rep__0_n_0 ;
  wire \mul_count_reg[2]_rep_n_0 ;
  wire \mul_count_reg[3]_rep__0_n_0 ;
  wire \mul_count_reg[3]_rep_n_0 ;
  wire \mul_count_reg[4]_i_1_n_0 ;
  wire \mul_count_reg[4]_i_1_n_1 ;
  wire \mul_count_reg[4]_i_1_n_2 ;
  wire \mul_count_reg[4]_i_1_n_3 ;
  wire \mul_count_reg[4]_i_1_n_4 ;
  wire \mul_count_reg[4]_i_1_n_5 ;
  wire \mul_count_reg[4]_i_1_n_6 ;
  wire \mul_count_reg[4]_i_1_n_7 ;
  wire \mul_count_reg[8]_i_1_n_0 ;
  wire \mul_count_reg[8]_i_1_n_1 ;
  wire \mul_count_reg[8]_i_1_n_2 ;
  wire \mul_count_reg[8]_i_1_n_3 ;
  wire \mul_count_reg[8]_i_1_n_4 ;
  wire \mul_count_reg[8]_i_1_n_5 ;
  wire \mul_count_reg[8]_i_1_n_6 ;
  wire \mul_count_reg[8]_i_1_n_7 ;
  wire \mul_count_reg_n_0_[10] ;
  wire \mul_count_reg_n_0_[11] ;
  wire \mul_count_reg_n_0_[12] ;
  wire \mul_count_reg_n_0_[13] ;
  wire \mul_count_reg_n_0_[14] ;
  wire \mul_count_reg_n_0_[15] ;
  wire \mul_count_reg_n_0_[16] ;
  wire \mul_count_reg_n_0_[17] ;
  wire \mul_count_reg_n_0_[18] ;
  wire \mul_count_reg_n_0_[19] ;
  wire \mul_count_reg_n_0_[20] ;
  wire \mul_count_reg_n_0_[21] ;
  wire \mul_count_reg_n_0_[22] ;
  wire \mul_count_reg_n_0_[23] ;
  wire \mul_count_reg_n_0_[24] ;
  wire \mul_count_reg_n_0_[25] ;
  wire \mul_count_reg_n_0_[26] ;
  wire \mul_count_reg_n_0_[27] ;
  wire \mul_count_reg_n_0_[28] ;
  wire \mul_count_reg_n_0_[29] ;
  wire \mul_count_reg_n_0_[30] ;
  wire \mul_count_reg_n_0_[31] ;
  wire \mul_count_reg_n_0_[8] ;
  wire \mul_count_reg_n_0_[9] ;
  wire present_state1;
  wire present_state2;
  wire \present_state[0]_i_1_n_0 ;
  wire \present_state[1]_i_10_n_0 ;
  wire \present_state[1]_i_11_n_0 ;
  wire \present_state[1]_i_12_n_0 ;
  wire \present_state[1]_i_14_n_0 ;
  wire \present_state[1]_i_15_n_0 ;
  wire \present_state[1]_i_16_n_0 ;
  wire \present_state[1]_i_17_n_0 ;
  wire \present_state[1]_i_19_n_0 ;
  wire \present_state[1]_i_1_n_0 ;
  wire \present_state[1]_i_20_n_0 ;
  wire \present_state[1]_i_21_n_0 ;
  wire \present_state[1]_i_22_n_0 ;
  wire \present_state[1]_i_23_n_0 ;
  wire \present_state[1]_i_24_n_0 ;
  wire \present_state[1]_i_25_n_0 ;
  wire \present_state[1]_i_26_n_0 ;
  wire \present_state[1]_i_27_n_0 ;
  wire \present_state[1]_i_28_n_0 ;
  wire \present_state[1]_i_29_n_0 ;
  wire \present_state[1]_i_2_n_0 ;
  wire \present_state[1]_i_30_n_0 ;
  wire \present_state[1]_i_6_n_0 ;
  wire \present_state[1]_i_7_n_0 ;
  wire \present_state[1]_i_8_n_0 ;
  wire \present_state_reg[1]_i_13_n_0 ;
  wire \present_state_reg[1]_i_13_n_1 ;
  wire \present_state_reg[1]_i_13_n_2 ;
  wire \present_state_reg[1]_i_13_n_3 ;
  wire \present_state_reg[1]_i_18_n_0 ;
  wire \present_state_reg[1]_i_18_n_1 ;
  wire \present_state_reg[1]_i_18_n_2 ;
  wire \present_state_reg[1]_i_18_n_3 ;
  wire \present_state_reg[1]_i_3_n_2 ;
  wire \present_state_reg[1]_i_3_n_3 ;
  wire \present_state_reg[1]_i_4_n_2 ;
  wire \present_state_reg[1]_i_4_n_3 ;
  wire \present_state_reg[1]_i_5_n_0 ;
  wire \present_state_reg[1]_i_5_n_1 ;
  wire \present_state_reg[1]_i_5_n_2 ;
  wire \present_state_reg[1]_i_5_n_3 ;
  wire \present_state_reg[1]_i_9_n_0 ;
  wire \present_state_reg[1]_i_9_n_1 ;
  wire \present_state_reg[1]_i_9_n_2 ;
  wire \present_state_reg[1]_i_9_n_3 ;
  wire [15:0]\r1[0] ;
  wire [15:0]\r1[0]_OBUF ;
  wire [15:0]\r1[1] ;
  wire [15:0]\r1[1]_OBUF ;
  wire [15:0]\r1[2] ;
  wire [15:0]\r1[2]_OBUF ;
  wire [15:0]\r1[3] ;
  wire \r1[3][15]_INST_0_i_1_n_0 ;
  wire [15:0]\r1[3]_OBUF ;
  wire [15:0]\r2[0] ;
  wire [15:0]\r2[0]_OBUF ;
  wire [15:0]\r2[1] ;
  wire [15:0]\r2[1]_OBUF ;
  wire [15:0]\r2[2] ;
  wire [15:0]\r2[2]_OBUF ;
  wire [15:0]\r2[3] ;
  wire [15:0]\r2[3]_OBUF ;
  wire [15:0]\r3[0] ;
  wire [15:0]\r3[0]_OBUF ;
  wire [15:0]\r3[1] ;
  wire [15:0]\r3[1]_OBUF ;
  wire [15:0]\r3[2] ;
  wire [15:0]\r3[2]_OBUF ;
  wire [15:0]\r3[3] ;
  wire [15:0]\r3[3]_OBUF ;
  wire [15:0]\r4[0] ;
  wire [15:0]\r4[0]_OBUF ;
  wire [15:0]\r4[1] ;
  wire [15:0]\r4[1]_OBUF ;
  wire [15:0]\r4[2] ;
  wire [15:0]\r4[2]_OBUF ;
  wire [15:0]\r4[3] ;
  wire [15:0]\r4[3]_OBUF ;
  wire ram_reg_0_15_0_0_i_1__0_n_0;
  wire ram_reg_0_15_0_0_i_1__10_n_0;
  wire ram_reg_0_15_0_0_i_1__11_n_0;
  wire ram_reg_0_15_0_0_i_1__12_n_0;
  wire ram_reg_0_15_0_0_i_1__13_n_0;
  wire ram_reg_0_15_0_0_i_1__14_n_0;
  wire ram_reg_0_15_0_0_i_1__1_n_0;
  wire ram_reg_0_15_0_0_i_1__2_n_0;
  wire ram_reg_0_15_0_0_i_1__3_n_0;
  wire ram_reg_0_15_0_0_i_1__4_n_0;
  wire ram_reg_0_15_0_0_i_1__5_n_0;
  wire ram_reg_0_15_0_0_i_1__6_n_0;
  wire ram_reg_0_15_0_0_i_1__7_n_0;
  wire ram_reg_0_15_0_0_i_1__8_n_0;
  wire ram_reg_0_15_0_0_i_1__9_n_0;
  wire ram_reg_0_15_0_0_i_1_n_0;
  wire ram_reg_0_15_10_10_i_1__0_n_0;
  wire ram_reg_0_15_10_10_i_1__10_n_0;
  wire ram_reg_0_15_10_10_i_1__11_n_0;
  wire ram_reg_0_15_10_10_i_1__12_n_0;
  wire ram_reg_0_15_10_10_i_1__13_n_0;
  wire ram_reg_0_15_10_10_i_1__14_n_0;
  wire ram_reg_0_15_10_10_i_1__1_n_0;
  wire ram_reg_0_15_10_10_i_1__2_n_0;
  wire ram_reg_0_15_10_10_i_1__3_n_0;
  wire ram_reg_0_15_10_10_i_1__4_n_0;
  wire ram_reg_0_15_10_10_i_1__5_n_0;
  wire ram_reg_0_15_10_10_i_1__6_n_0;
  wire ram_reg_0_15_10_10_i_1__7_n_0;
  wire ram_reg_0_15_10_10_i_1__8_n_0;
  wire ram_reg_0_15_10_10_i_1__9_n_0;
  wire ram_reg_0_15_10_10_i_1_n_0;
  wire ram_reg_0_15_11_11_i_1__0_n_0;
  wire ram_reg_0_15_11_11_i_1__10_n_0;
  wire ram_reg_0_15_11_11_i_1__11_n_0;
  wire ram_reg_0_15_11_11_i_1__12_n_0;
  wire ram_reg_0_15_11_11_i_1__13_n_0;
  wire ram_reg_0_15_11_11_i_1__14_n_0;
  wire ram_reg_0_15_11_11_i_1__1_n_0;
  wire ram_reg_0_15_11_11_i_1__2_n_0;
  wire ram_reg_0_15_11_11_i_1__3_n_0;
  wire ram_reg_0_15_11_11_i_1__4_n_0;
  wire ram_reg_0_15_11_11_i_1__5_n_0;
  wire ram_reg_0_15_11_11_i_1__6_n_0;
  wire ram_reg_0_15_11_11_i_1__7_n_0;
  wire ram_reg_0_15_11_11_i_1__8_n_0;
  wire ram_reg_0_15_11_11_i_1__9_n_0;
  wire ram_reg_0_15_11_11_i_1_n_0;
  wire ram_reg_0_15_12_12_i_1__0_n_0;
  wire ram_reg_0_15_12_12_i_1__10_n_0;
  wire ram_reg_0_15_12_12_i_1__11_n_0;
  wire ram_reg_0_15_12_12_i_1__12_n_0;
  wire ram_reg_0_15_12_12_i_1__13_n_0;
  wire ram_reg_0_15_12_12_i_1__14_n_0;
  wire ram_reg_0_15_12_12_i_1__1_n_0;
  wire ram_reg_0_15_12_12_i_1__2_n_0;
  wire ram_reg_0_15_12_12_i_1__3_n_0;
  wire ram_reg_0_15_12_12_i_1__4_n_0;
  wire ram_reg_0_15_12_12_i_1__5_n_0;
  wire ram_reg_0_15_12_12_i_1__6_n_0;
  wire ram_reg_0_15_12_12_i_1__7_n_0;
  wire ram_reg_0_15_12_12_i_1__8_n_0;
  wire ram_reg_0_15_12_12_i_1__9_n_0;
  wire ram_reg_0_15_12_12_i_1_n_0;
  wire ram_reg_0_15_13_13_i_1__0_n_0;
  wire ram_reg_0_15_13_13_i_1__10_n_0;
  wire ram_reg_0_15_13_13_i_1__11_n_0;
  wire ram_reg_0_15_13_13_i_1__12_n_0;
  wire ram_reg_0_15_13_13_i_1__13_n_0;
  wire ram_reg_0_15_13_13_i_1__14_n_0;
  wire ram_reg_0_15_13_13_i_1__1_n_0;
  wire ram_reg_0_15_13_13_i_1__2_n_0;
  wire ram_reg_0_15_13_13_i_1__3_n_0;
  wire ram_reg_0_15_13_13_i_1__4_n_0;
  wire ram_reg_0_15_13_13_i_1__5_n_0;
  wire ram_reg_0_15_13_13_i_1__6_n_0;
  wire ram_reg_0_15_13_13_i_1__7_n_0;
  wire ram_reg_0_15_13_13_i_1__8_n_0;
  wire ram_reg_0_15_13_13_i_1__9_n_0;
  wire ram_reg_0_15_13_13_i_1_n_0;
  wire ram_reg_0_15_14_14_i_1__0_n_0;
  wire ram_reg_0_15_14_14_i_1__10_n_0;
  wire ram_reg_0_15_14_14_i_1__11_n_0;
  wire ram_reg_0_15_14_14_i_1__12_n_0;
  wire ram_reg_0_15_14_14_i_1__13_n_0;
  wire ram_reg_0_15_14_14_i_1__14_n_0;
  wire ram_reg_0_15_14_14_i_1__1_n_0;
  wire ram_reg_0_15_14_14_i_1__2_n_0;
  wire ram_reg_0_15_14_14_i_1__3_n_0;
  wire ram_reg_0_15_14_14_i_1__4_n_0;
  wire ram_reg_0_15_14_14_i_1__5_n_0;
  wire ram_reg_0_15_14_14_i_1__6_n_0;
  wire ram_reg_0_15_14_14_i_1__7_n_0;
  wire ram_reg_0_15_14_14_i_1__8_n_0;
  wire ram_reg_0_15_14_14_i_1__9_n_0;
  wire ram_reg_0_15_14_14_i_1_n_0;
  wire ram_reg_0_15_15_15_i_1__0_n_0;
  wire ram_reg_0_15_15_15_i_1__10_n_0;
  wire ram_reg_0_15_15_15_i_1__11_n_0;
  wire ram_reg_0_15_15_15_i_1__12_n_0;
  wire ram_reg_0_15_15_15_i_1__13_n_0;
  wire ram_reg_0_15_15_15_i_1__14_n_0;
  wire ram_reg_0_15_15_15_i_1__1_n_0;
  wire ram_reg_0_15_15_15_i_1__2_n_0;
  wire ram_reg_0_15_15_15_i_1__3_n_0;
  wire ram_reg_0_15_15_15_i_1__4_n_0;
  wire ram_reg_0_15_15_15_i_1__5_n_0;
  wire ram_reg_0_15_15_15_i_1__6_n_0;
  wire ram_reg_0_15_15_15_i_1__7_n_0;
  wire ram_reg_0_15_15_15_i_1__8_n_0;
  wire ram_reg_0_15_15_15_i_1__9_n_0;
  wire ram_reg_0_15_15_15_i_1_n_0;
  wire ram_reg_0_15_1_1_i_1__0_n_0;
  wire ram_reg_0_15_1_1_i_1__10_n_0;
  wire ram_reg_0_15_1_1_i_1__11_n_0;
  wire ram_reg_0_15_1_1_i_1__12_n_0;
  wire ram_reg_0_15_1_1_i_1__13_n_0;
  wire ram_reg_0_15_1_1_i_1__14_n_0;
  wire ram_reg_0_15_1_1_i_1__1_n_0;
  wire ram_reg_0_15_1_1_i_1__2_n_0;
  wire ram_reg_0_15_1_1_i_1__3_n_0;
  wire ram_reg_0_15_1_1_i_1__4_n_0;
  wire ram_reg_0_15_1_1_i_1__5_n_0;
  wire ram_reg_0_15_1_1_i_1__6_n_0;
  wire ram_reg_0_15_1_1_i_1__7_n_0;
  wire ram_reg_0_15_1_1_i_1__8_n_0;
  wire ram_reg_0_15_1_1_i_1__9_n_0;
  wire ram_reg_0_15_1_1_i_1_n_0;
  wire ram_reg_0_15_2_2_i_1__0_n_0;
  wire ram_reg_0_15_2_2_i_1__10_n_0;
  wire ram_reg_0_15_2_2_i_1__11_n_0;
  wire ram_reg_0_15_2_2_i_1__12_n_0;
  wire ram_reg_0_15_2_2_i_1__13_n_0;
  wire ram_reg_0_15_2_2_i_1__14_n_0;
  wire ram_reg_0_15_2_2_i_1__1_n_0;
  wire ram_reg_0_15_2_2_i_1__2_n_0;
  wire ram_reg_0_15_2_2_i_1__3_n_0;
  wire ram_reg_0_15_2_2_i_1__4_n_0;
  wire ram_reg_0_15_2_2_i_1__5_n_0;
  wire ram_reg_0_15_2_2_i_1__6_n_0;
  wire ram_reg_0_15_2_2_i_1__7_n_0;
  wire ram_reg_0_15_2_2_i_1__8_n_0;
  wire ram_reg_0_15_2_2_i_1__9_n_0;
  wire ram_reg_0_15_2_2_i_1_n_0;
  wire ram_reg_0_15_3_3_i_1__0_n_0;
  wire ram_reg_0_15_3_3_i_1__10_n_0;
  wire ram_reg_0_15_3_3_i_1__11_n_0;
  wire ram_reg_0_15_3_3_i_1__12_n_0;
  wire ram_reg_0_15_3_3_i_1__13_n_0;
  wire ram_reg_0_15_3_3_i_1__14_n_0;
  wire ram_reg_0_15_3_3_i_1__1_n_0;
  wire ram_reg_0_15_3_3_i_1__2_n_0;
  wire ram_reg_0_15_3_3_i_1__3_n_0;
  wire ram_reg_0_15_3_3_i_1__4_n_0;
  wire ram_reg_0_15_3_3_i_1__5_n_0;
  wire ram_reg_0_15_3_3_i_1__6_n_0;
  wire ram_reg_0_15_3_3_i_1__7_n_0;
  wire ram_reg_0_15_3_3_i_1__8_n_0;
  wire ram_reg_0_15_3_3_i_1__9_n_0;
  wire ram_reg_0_15_3_3_i_1_n_0;
  wire ram_reg_0_15_4_4_i_1__0_n_0;
  wire ram_reg_0_15_4_4_i_1__10_n_0;
  wire ram_reg_0_15_4_4_i_1__11_n_0;
  wire ram_reg_0_15_4_4_i_1__12_n_0;
  wire ram_reg_0_15_4_4_i_1__13_n_0;
  wire ram_reg_0_15_4_4_i_1__14_n_0;
  wire ram_reg_0_15_4_4_i_1__1_n_0;
  wire ram_reg_0_15_4_4_i_1__2_n_0;
  wire ram_reg_0_15_4_4_i_1__3_n_0;
  wire ram_reg_0_15_4_4_i_1__4_n_0;
  wire ram_reg_0_15_4_4_i_1__5_n_0;
  wire ram_reg_0_15_4_4_i_1__6_n_0;
  wire ram_reg_0_15_4_4_i_1__7_n_0;
  wire ram_reg_0_15_4_4_i_1__8_n_0;
  wire ram_reg_0_15_4_4_i_1__9_n_0;
  wire ram_reg_0_15_4_4_i_1_n_0;
  wire ram_reg_0_15_5_5_i_1__0_n_0;
  wire ram_reg_0_15_5_5_i_1__10_n_0;
  wire ram_reg_0_15_5_5_i_1__11_n_0;
  wire ram_reg_0_15_5_5_i_1__12_n_0;
  wire ram_reg_0_15_5_5_i_1__13_n_0;
  wire ram_reg_0_15_5_5_i_1__14_n_0;
  wire ram_reg_0_15_5_5_i_1__1_n_0;
  wire ram_reg_0_15_5_5_i_1__2_n_0;
  wire ram_reg_0_15_5_5_i_1__3_n_0;
  wire ram_reg_0_15_5_5_i_1__4_n_0;
  wire ram_reg_0_15_5_5_i_1__5_n_0;
  wire ram_reg_0_15_5_5_i_1__6_n_0;
  wire ram_reg_0_15_5_5_i_1__7_n_0;
  wire ram_reg_0_15_5_5_i_1__8_n_0;
  wire ram_reg_0_15_5_5_i_1__9_n_0;
  wire ram_reg_0_15_5_5_i_1_n_0;
  wire ram_reg_0_15_6_6_i_1__0_n_0;
  wire ram_reg_0_15_6_6_i_1__10_n_0;
  wire ram_reg_0_15_6_6_i_1__11_n_0;
  wire ram_reg_0_15_6_6_i_1__12_n_0;
  wire ram_reg_0_15_6_6_i_1__13_n_0;
  wire ram_reg_0_15_6_6_i_1__14_n_0;
  wire ram_reg_0_15_6_6_i_1__1_n_0;
  wire ram_reg_0_15_6_6_i_1__2_n_0;
  wire ram_reg_0_15_6_6_i_1__3_n_0;
  wire ram_reg_0_15_6_6_i_1__4_n_0;
  wire ram_reg_0_15_6_6_i_1__5_n_0;
  wire ram_reg_0_15_6_6_i_1__6_n_0;
  wire ram_reg_0_15_6_6_i_1__7_n_0;
  wire ram_reg_0_15_6_6_i_1__8_n_0;
  wire ram_reg_0_15_6_6_i_1__9_n_0;
  wire ram_reg_0_15_6_6_i_1_n_0;
  wire ram_reg_0_15_7_7_i_1__0_n_0;
  wire ram_reg_0_15_7_7_i_1__10_n_0;
  wire ram_reg_0_15_7_7_i_1__11_n_0;
  wire ram_reg_0_15_7_7_i_1__12_n_0;
  wire ram_reg_0_15_7_7_i_1__13_n_0;
  wire ram_reg_0_15_7_7_i_1__14_n_0;
  wire ram_reg_0_15_7_7_i_1__1_n_0;
  wire ram_reg_0_15_7_7_i_1__2_n_0;
  wire ram_reg_0_15_7_7_i_1__3_n_0;
  wire ram_reg_0_15_7_7_i_1__4_n_0;
  wire ram_reg_0_15_7_7_i_1__5_n_0;
  wire ram_reg_0_15_7_7_i_1__6_n_0;
  wire ram_reg_0_15_7_7_i_1__7_n_0;
  wire ram_reg_0_15_7_7_i_1__8_n_0;
  wire ram_reg_0_15_7_7_i_1__9_n_0;
  wire ram_reg_0_15_7_7_i_1_n_0;
  wire ram_reg_0_15_8_8_i_1__0_n_0;
  wire ram_reg_0_15_8_8_i_1__10_n_0;
  wire ram_reg_0_15_8_8_i_1__11_n_0;
  wire ram_reg_0_15_8_8_i_1__12_n_0;
  wire ram_reg_0_15_8_8_i_1__13_n_0;
  wire ram_reg_0_15_8_8_i_1__14_n_0;
  wire ram_reg_0_15_8_8_i_1__1_n_0;
  wire ram_reg_0_15_8_8_i_1__2_n_0;
  wire ram_reg_0_15_8_8_i_1__3_n_0;
  wire ram_reg_0_15_8_8_i_1__4_n_0;
  wire ram_reg_0_15_8_8_i_1__5_n_0;
  wire ram_reg_0_15_8_8_i_1__6_n_0;
  wire ram_reg_0_15_8_8_i_1__7_n_0;
  wire ram_reg_0_15_8_8_i_1__8_n_0;
  wire ram_reg_0_15_8_8_i_1__9_n_0;
  wire ram_reg_0_15_8_8_i_1_n_0;
  wire ram_reg_0_15_9_9_i_1__0_n_0;
  wire ram_reg_0_15_9_9_i_1__10_n_0;
  wire ram_reg_0_15_9_9_i_1__11_n_0;
  wire ram_reg_0_15_9_9_i_1__12_n_0;
  wire ram_reg_0_15_9_9_i_1__13_n_0;
  wire ram_reg_0_15_9_9_i_1__14_n_0;
  wire ram_reg_0_15_9_9_i_1__1_n_0;
  wire ram_reg_0_15_9_9_i_1__2_n_0;
  wire ram_reg_0_15_9_9_i_1__3_n_0;
  wire ram_reg_0_15_9_9_i_1__4_n_0;
  wire ram_reg_0_15_9_9_i_1__5_n_0;
  wire ram_reg_0_15_9_9_i_1__6_n_0;
  wire ram_reg_0_15_9_9_i_1__7_n_0;
  wire ram_reg_0_15_9_9_i_1__8_n_0;
  wire ram_reg_0_15_9_9_i_1__9_n_0;
  wire ram_reg_0_15_9_9_i_1_n_0;
  wire [7:0]read;
  wire [7:0]read_OBUF;
  wire reset;
  wire reset_IBUF;
  wire start_bram_assign;
  wire start_bram_assign_IBUF;
  wire start_mul;
  wire start_mul_IBUF;
  wire [1:0]state;
  wire [1:0]state_OBUF;
  wire wr_en;
  wire \write_count[0]_i_2_n_0 ;
  wire \write_count_reg[0]_i_1_n_0 ;
  wire \write_count_reg[0]_i_1_n_1 ;
  wire \write_count_reg[0]_i_1_n_2 ;
  wire \write_count_reg[0]_i_1_n_3 ;
  wire \write_count_reg[0]_i_1_n_4 ;
  wire \write_count_reg[0]_i_1_n_5 ;
  wire \write_count_reg[0]_i_1_n_6 ;
  wire \write_count_reg[0]_i_1_n_7 ;
  wire \write_count_reg[0]_rep_n_0 ;
  wire \write_count_reg[12]_i_1_n_0 ;
  wire \write_count_reg[12]_i_1_n_1 ;
  wire \write_count_reg[12]_i_1_n_2 ;
  wire \write_count_reg[12]_i_1_n_3 ;
  wire \write_count_reg[12]_i_1_n_4 ;
  wire \write_count_reg[12]_i_1_n_5 ;
  wire \write_count_reg[12]_i_1_n_6 ;
  wire \write_count_reg[12]_i_1_n_7 ;
  wire \write_count_reg[16]_i_1_n_0 ;
  wire \write_count_reg[16]_i_1_n_1 ;
  wire \write_count_reg[16]_i_1_n_2 ;
  wire \write_count_reg[16]_i_1_n_3 ;
  wire \write_count_reg[16]_i_1_n_4 ;
  wire \write_count_reg[16]_i_1_n_5 ;
  wire \write_count_reg[16]_i_1_n_6 ;
  wire \write_count_reg[16]_i_1_n_7 ;
  wire \write_count_reg[1]_rep_n_0 ;
  wire \write_count_reg[20]_i_1_n_0 ;
  wire \write_count_reg[20]_i_1_n_1 ;
  wire \write_count_reg[20]_i_1_n_2 ;
  wire \write_count_reg[20]_i_1_n_3 ;
  wire \write_count_reg[20]_i_1_n_4 ;
  wire \write_count_reg[20]_i_1_n_5 ;
  wire \write_count_reg[20]_i_1_n_6 ;
  wire \write_count_reg[20]_i_1_n_7 ;
  wire \write_count_reg[24]_i_1_n_0 ;
  wire \write_count_reg[24]_i_1_n_1 ;
  wire \write_count_reg[24]_i_1_n_2 ;
  wire \write_count_reg[24]_i_1_n_3 ;
  wire \write_count_reg[24]_i_1_n_4 ;
  wire \write_count_reg[24]_i_1_n_5 ;
  wire \write_count_reg[24]_i_1_n_6 ;
  wire \write_count_reg[24]_i_1_n_7 ;
  wire \write_count_reg[28]_i_1_n_1 ;
  wire \write_count_reg[28]_i_1_n_2 ;
  wire \write_count_reg[28]_i_1_n_3 ;
  wire \write_count_reg[28]_i_1_n_4 ;
  wire \write_count_reg[28]_i_1_n_5 ;
  wire \write_count_reg[28]_i_1_n_6 ;
  wire \write_count_reg[28]_i_1_n_7 ;
  wire \write_count_reg[2]_rep_n_0 ;
  wire \write_count_reg[3]_rep_n_0 ;
  wire \write_count_reg[4]_i_1_n_0 ;
  wire \write_count_reg[4]_i_1_n_1 ;
  wire \write_count_reg[4]_i_1_n_2 ;
  wire \write_count_reg[4]_i_1_n_3 ;
  wire \write_count_reg[4]_i_1_n_4 ;
  wire \write_count_reg[4]_i_1_n_5 ;
  wire \write_count_reg[4]_i_1_n_6 ;
  wire \write_count_reg[4]_i_1_n_7 ;
  wire \write_count_reg[8]_i_1_n_0 ;
  wire \write_count_reg[8]_i_1_n_1 ;
  wire \write_count_reg[8]_i_1_n_2 ;
  wire \write_count_reg[8]_i_1_n_3 ;
  wire \write_count_reg[8]_i_1_n_4 ;
  wire \write_count_reg[8]_i_1_n_5 ;
  wire \write_count_reg[8]_i_1_n_6 ;
  wire \write_count_reg[8]_i_1_n_7 ;
  wire \write_count_reg_n_0_[0] ;
  wire \write_count_reg_n_0_[10] ;
  wire \write_count_reg_n_0_[11] ;
  wire \write_count_reg_n_0_[12] ;
  wire \write_count_reg_n_0_[13] ;
  wire \write_count_reg_n_0_[14] ;
  wire \write_count_reg_n_0_[15] ;
  wire \write_count_reg_n_0_[16] ;
  wire \write_count_reg_n_0_[17] ;
  wire \write_count_reg_n_0_[18] ;
  wire \write_count_reg_n_0_[19] ;
  wire \write_count_reg_n_0_[1] ;
  wire \write_count_reg_n_0_[20] ;
  wire \write_count_reg_n_0_[21] ;
  wire \write_count_reg_n_0_[22] ;
  wire \write_count_reg_n_0_[23] ;
  wire \write_count_reg_n_0_[24] ;
  wire \write_count_reg_n_0_[25] ;
  wire \write_count_reg_n_0_[26] ;
  wire \write_count_reg_n_0_[27] ;
  wire \write_count_reg_n_0_[28] ;
  wire \write_count_reg_n_0_[29] ;
  wire \write_count_reg_n_0_[2] ;
  wire \write_count_reg_n_0_[30] ;
  wire \write_count_reg_n_0_[31] ;
  wire \write_count_reg_n_0_[3] ;
  wire \write_count_reg_n_0_[4] ;
  wire \write_count_reg_n_0_[5] ;
  wire \write_count_reg_n_0_[6] ;
  wire \write_count_reg_n_0_[7] ;
  wire \write_count_reg_n_0_[8] ;
  wire \write_count_reg_n_0_[9] ;
  wire [15:0]\wv1[0] ;
  wire [15:0]\wv1[1] ;
  wire [15:0]\wv1[2] ;
  wire [15:0]\wv1[3] ;
  wire [15:0]\wv2[0] ;
  wire [15:0]\wv2[1] ;
  wire [15:0]\wv2[2] ;
  wire [15:0]\wv2[3] ;
  wire [15:0]\wv3[0] ;
  wire [15:0]\wv3[1] ;
  wire [15:0]\wv3[2] ;
  wire [15:0]\wv3[3] ;
  wire [15:0]\wv4[0] ;
  wire [15:0]\wv4[1] ;
  wire [15:0]\wv4[2] ;
  wire [15:0]\wv4[3] ;
  wire [3:3]\NLW_mul_count_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_present_state_reg[1]_i_13_O_UNCONNECTED ;
  wire [3:0]\NLW_present_state_reg[1]_i_18_O_UNCONNECTED ;
  wire [3:3]\NLW_present_state_reg[1]_i_3_CO_UNCONNECTED ;
  wire [3:0]\NLW_present_state_reg[1]_i_3_O_UNCONNECTED ;
  wire [3:3]\NLW_present_state_reg[1]_i_4_CO_UNCONNECTED ;
  wire [3:0]\NLW_present_state_reg[1]_i_4_O_UNCONNECTED ;
  wire [3:0]\NLW_present_state_reg[1]_i_5_O_UNCONNECTED ;
  wire [3:0]\NLW_present_state_reg[1]_i_9_O_UNCONNECTED ;
  wire [3:3]\NLW_write_count_reg[28]_i_1_CO_UNCONNECTED ;

initial begin
 $sdf_annotate("ram_cell_time_synth.sdf",,,,"tool_control");
end
  IBUF ACC_reg_i_100
       (.I(\input_vector[0] [13]),
        .O(ACC_reg_i_100_n_0));
  IBUF ACC_reg_i_101
       (.I(\input_vector[7] [13]),
        .O(ACC_reg_i_101_n_0));
  IBUF ACC_reg_i_102
       (.I(\input_vector[6] [13]),
        .O(ACC_reg_i_102_n_0));
  IBUF ACC_reg_i_103
       (.I(\input_vector[5] [13]),
        .O(ACC_reg_i_103_n_0));
  IBUF ACC_reg_i_104
       (.I(\input_vector[4] [13]),
        .O(ACC_reg_i_104_n_0));
  IBUF ACC_reg_i_105
       (.I(\input_vector[3] [12]),
        .O(ACC_reg_i_105_n_0));
  IBUF ACC_reg_i_106
       (.I(\input_vector[2] [12]),
        .O(ACC_reg_i_106_n_0));
  IBUF ACC_reg_i_107
       (.I(\input_vector[1] [12]),
        .O(ACC_reg_i_107_n_0));
  IBUF ACC_reg_i_108
       (.I(\input_vector[0] [12]),
        .O(ACC_reg_i_108_n_0));
  IBUF ACC_reg_i_109
       (.I(\input_vector[7] [12]),
        .O(ACC_reg_i_109_n_0));
  IBUF ACC_reg_i_110
       (.I(\input_vector[6] [12]),
        .O(ACC_reg_i_110_n_0));
  IBUF ACC_reg_i_111
       (.I(\input_vector[5] [12]),
        .O(ACC_reg_i_111_n_0));
  IBUF ACC_reg_i_112
       (.I(\input_vector[4] [12]),
        .O(ACC_reg_i_112_n_0));
  IBUF ACC_reg_i_113
       (.I(\input_vector[3] [11]),
        .O(ACC_reg_i_113_n_0));
  IBUF ACC_reg_i_114
       (.I(\input_vector[2] [11]),
        .O(ACC_reg_i_114_n_0));
  IBUF ACC_reg_i_115
       (.I(\input_vector[1] [11]),
        .O(ACC_reg_i_115_n_0));
  IBUF ACC_reg_i_116
       (.I(\input_vector[0] [11]),
        .O(ACC_reg_i_116_n_0));
  IBUF ACC_reg_i_117
       (.I(\input_vector[7] [11]),
        .O(ACC_reg_i_117_n_0));
  IBUF ACC_reg_i_118
       (.I(\input_vector[6] [11]),
        .O(ACC_reg_i_118_n_0));
  IBUF ACC_reg_i_119
       (.I(\input_vector[5] [11]),
        .O(ACC_reg_i_119_n_0));
  IBUF ACC_reg_i_120
       (.I(\input_vector[4] [11]),
        .O(ACC_reg_i_120_n_0));
  IBUF ACC_reg_i_121
       (.I(\input_vector[3] [10]),
        .O(ACC_reg_i_121_n_0));
  IBUF ACC_reg_i_122
       (.I(\input_vector[2] [10]),
        .O(ACC_reg_i_122_n_0));
  IBUF ACC_reg_i_123
       (.I(\input_vector[1] [10]),
        .O(ACC_reg_i_123_n_0));
  IBUF ACC_reg_i_124
       (.I(\input_vector[0] [10]),
        .O(ACC_reg_i_124_n_0));
  IBUF ACC_reg_i_125
       (.I(\input_vector[7] [10]),
        .O(ACC_reg_i_125_n_0));
  IBUF ACC_reg_i_126
       (.I(\input_vector[6] [10]),
        .O(ACC_reg_i_126_n_0));
  IBUF ACC_reg_i_127
       (.I(\input_vector[5] [10]),
        .O(ACC_reg_i_127_n_0));
  IBUF ACC_reg_i_128
       (.I(\input_vector[4] [10]),
        .O(ACC_reg_i_128_n_0));
  IBUF ACC_reg_i_129
       (.I(\input_vector[3] [9]),
        .O(ACC_reg_i_129_n_0));
  IBUF ACC_reg_i_130
       (.I(\input_vector[2] [9]),
        .O(ACC_reg_i_130_n_0));
  IBUF ACC_reg_i_131
       (.I(\input_vector[1] [9]),
        .O(ACC_reg_i_131_n_0));
  IBUF ACC_reg_i_132
       (.I(\input_vector[0] [9]),
        .O(ACC_reg_i_132_n_0));
  IBUF ACC_reg_i_133
       (.I(\input_vector[7] [9]),
        .O(ACC_reg_i_133_n_0));
  IBUF ACC_reg_i_134
       (.I(\input_vector[6] [9]),
        .O(ACC_reg_i_134_n_0));
  IBUF ACC_reg_i_135
       (.I(\input_vector[5] [9]),
        .O(ACC_reg_i_135_n_0));
  IBUF ACC_reg_i_136
       (.I(\input_vector[4] [9]),
        .O(ACC_reg_i_136_n_0));
  IBUF ACC_reg_i_137
       (.I(\input_vector[3] [8]),
        .O(ACC_reg_i_137_n_0));
  IBUF ACC_reg_i_138
       (.I(\input_vector[2] [8]),
        .O(ACC_reg_i_138_n_0));
  IBUF ACC_reg_i_139
       (.I(\input_vector[1] [8]),
        .O(ACC_reg_i_139_n_0));
  IBUF ACC_reg_i_140
       (.I(\input_vector[0] [8]),
        .O(ACC_reg_i_140_n_0));
  IBUF ACC_reg_i_141
       (.I(\input_vector[7] [8]),
        .O(ACC_reg_i_141_n_0));
  IBUF ACC_reg_i_142
       (.I(\input_vector[6] [8]),
        .O(ACC_reg_i_142_n_0));
  IBUF ACC_reg_i_143
       (.I(\input_vector[5] [8]),
        .O(ACC_reg_i_143_n_0));
  IBUF ACC_reg_i_144
       (.I(\input_vector[4] [8]),
        .O(ACC_reg_i_144_n_0));
  IBUF ACC_reg_i_145
       (.I(\input_vector[3] [7]),
        .O(ACC_reg_i_145_n_0));
  IBUF ACC_reg_i_146
       (.I(\input_vector[2] [7]),
        .O(ACC_reg_i_146_n_0));
  IBUF ACC_reg_i_147
       (.I(\input_vector[1] [7]),
        .O(ACC_reg_i_147_n_0));
  IBUF ACC_reg_i_148
       (.I(\input_vector[0] [7]),
        .O(ACC_reg_i_148_n_0));
  IBUF ACC_reg_i_149
       (.I(\input_vector[7] [7]),
        .O(ACC_reg_i_149_n_0));
  IBUF ACC_reg_i_150
       (.I(\input_vector[6] [7]),
        .O(ACC_reg_i_150_n_0));
  IBUF ACC_reg_i_151
       (.I(\input_vector[5] [7]),
        .O(ACC_reg_i_151_n_0));
  IBUF ACC_reg_i_152
       (.I(\input_vector[4] [7]),
        .O(ACC_reg_i_152_n_0));
  IBUF ACC_reg_i_153
       (.I(\input_vector[3] [6]),
        .O(ACC_reg_i_153_n_0));
  IBUF ACC_reg_i_154
       (.I(\input_vector[2] [6]),
        .O(ACC_reg_i_154_n_0));
  IBUF ACC_reg_i_155
       (.I(\input_vector[1] [6]),
        .O(ACC_reg_i_155_n_0));
  IBUF ACC_reg_i_156
       (.I(\input_vector[0] [6]),
        .O(ACC_reg_i_156_n_0));
  IBUF ACC_reg_i_157
       (.I(\input_vector[7] [6]),
        .O(ACC_reg_i_157_n_0));
  IBUF ACC_reg_i_158
       (.I(\input_vector[6] [6]),
        .O(ACC_reg_i_158_n_0));
  IBUF ACC_reg_i_159
       (.I(\input_vector[5] [6]),
        .O(ACC_reg_i_159_n_0));
  IBUF ACC_reg_i_160
       (.I(\input_vector[4] [6]),
        .O(ACC_reg_i_160_n_0));
  IBUF ACC_reg_i_161
       (.I(\input_vector[3] [5]),
        .O(ACC_reg_i_161_n_0));
  IBUF ACC_reg_i_162
       (.I(\input_vector[2] [5]),
        .O(ACC_reg_i_162_n_0));
  IBUF ACC_reg_i_163
       (.I(\input_vector[1] [5]),
        .O(ACC_reg_i_163_n_0));
  IBUF ACC_reg_i_164
       (.I(\input_vector[0] [5]),
        .O(ACC_reg_i_164_n_0));
  IBUF ACC_reg_i_165
       (.I(\input_vector[7] [5]),
        .O(ACC_reg_i_165_n_0));
  IBUF ACC_reg_i_166
       (.I(\input_vector[6] [5]),
        .O(ACC_reg_i_166_n_0));
  IBUF ACC_reg_i_167
       (.I(\input_vector[5] [5]),
        .O(ACC_reg_i_167_n_0));
  IBUF ACC_reg_i_168
       (.I(\input_vector[4] [5]),
        .O(ACC_reg_i_168_n_0));
  IBUF ACC_reg_i_169
       (.I(\input_vector[3] [4]),
        .O(ACC_reg_i_169_n_0));
  IBUF ACC_reg_i_170
       (.I(\input_vector[2] [4]),
        .O(ACC_reg_i_170_n_0));
  IBUF ACC_reg_i_171
       (.I(\input_vector[1] [4]),
        .O(ACC_reg_i_171_n_0));
  IBUF ACC_reg_i_172
       (.I(\input_vector[0] [4]),
        .O(ACC_reg_i_172_n_0));
  IBUF ACC_reg_i_173
       (.I(\input_vector[7] [4]),
        .O(ACC_reg_i_173_n_0));
  IBUF ACC_reg_i_174
       (.I(\input_vector[6] [4]),
        .O(ACC_reg_i_174_n_0));
  IBUF ACC_reg_i_175
       (.I(\input_vector[5] [4]),
        .O(ACC_reg_i_175_n_0));
  IBUF ACC_reg_i_176
       (.I(\input_vector[4] [4]),
        .O(ACC_reg_i_176_n_0));
  IBUF ACC_reg_i_177
       (.I(\input_vector[3] [3]),
        .O(ACC_reg_i_177_n_0));
  IBUF ACC_reg_i_178
       (.I(\input_vector[2] [3]),
        .O(ACC_reg_i_178_n_0));
  IBUF ACC_reg_i_179
       (.I(\input_vector[1] [3]),
        .O(ACC_reg_i_179_n_0));
  IBUF ACC_reg_i_180
       (.I(\input_vector[0] [3]),
        .O(ACC_reg_i_180_n_0));
  IBUF ACC_reg_i_181
       (.I(\input_vector[7] [3]),
        .O(ACC_reg_i_181_n_0));
  IBUF ACC_reg_i_182
       (.I(\input_vector[6] [3]),
        .O(ACC_reg_i_182_n_0));
  IBUF ACC_reg_i_183
       (.I(\input_vector[5] [3]),
        .O(ACC_reg_i_183_n_0));
  IBUF ACC_reg_i_184
       (.I(\input_vector[4] [3]),
        .O(ACC_reg_i_184_n_0));
  IBUF ACC_reg_i_185
       (.I(\input_vector[3] [2]),
        .O(ACC_reg_i_185_n_0));
  IBUF ACC_reg_i_186
       (.I(\input_vector[2] [2]),
        .O(ACC_reg_i_186_n_0));
  IBUF ACC_reg_i_187
       (.I(\input_vector[1] [2]),
        .O(ACC_reg_i_187_n_0));
  IBUF ACC_reg_i_188
       (.I(\input_vector[0] [2]),
        .O(ACC_reg_i_188_n_0));
  IBUF ACC_reg_i_189
       (.I(\input_vector[7] [2]),
        .O(ACC_reg_i_189_n_0));
  IBUF ACC_reg_i_190
       (.I(\input_vector[6] [2]),
        .O(ACC_reg_i_190_n_0));
  IBUF ACC_reg_i_191
       (.I(\input_vector[5] [2]),
        .O(ACC_reg_i_191_n_0));
  IBUF ACC_reg_i_192
       (.I(\input_vector[4] [2]),
        .O(ACC_reg_i_192_n_0));
  IBUF ACC_reg_i_193
       (.I(\input_vector[3] [1]),
        .O(ACC_reg_i_193_n_0));
  IBUF ACC_reg_i_194
       (.I(\input_vector[2] [1]),
        .O(ACC_reg_i_194_n_0));
  IBUF ACC_reg_i_195
       (.I(\input_vector[1] [1]),
        .O(ACC_reg_i_195_n_0));
  IBUF ACC_reg_i_196
       (.I(\input_vector[0] [1]),
        .O(ACC_reg_i_196_n_0));
  IBUF ACC_reg_i_197
       (.I(\input_vector[7] [1]),
        .O(ACC_reg_i_197_n_0));
  IBUF ACC_reg_i_198
       (.I(\input_vector[6] [1]),
        .O(ACC_reg_i_198_n_0));
  IBUF ACC_reg_i_199
       (.I(\input_vector[5] [1]),
        .O(ACC_reg_i_199_n_0));
  IBUF ACC_reg_i_200
       (.I(\input_vector[4] [1]),
        .O(ACC_reg_i_200_n_0));
  IBUF ACC_reg_i_201
       (.I(\input_vector[3] [0]),
        .O(ACC_reg_i_201_n_0));
  IBUF ACC_reg_i_202
       (.I(\input_vector[2] [0]),
        .O(ACC_reg_i_202_n_0));
  IBUF ACC_reg_i_203
       (.I(\input_vector[1] [0]),
        .O(ACC_reg_i_203_n_0));
  IBUF ACC_reg_i_204
       (.I(\input_vector[0] [0]),
        .O(ACC_reg_i_204_n_0));
  IBUF ACC_reg_i_205
       (.I(\input_vector[7] [0]),
        .O(ACC_reg_i_205_n_0));
  IBUF ACC_reg_i_206
       (.I(\input_vector[6] [0]),
        .O(ACC_reg_i_206_n_0));
  IBUF ACC_reg_i_207
       (.I(\input_vector[5] [0]),
        .O(ACC_reg_i_207_n_0));
  IBUF ACC_reg_i_208
       (.I(\input_vector[4] [0]),
        .O(ACC_reg_i_208_n_0));
  IBUF ACC_reg_i_81
       (.I(\input_vector[3] [15]),
        .O(ACC_reg_i_81_n_0));
  IBUF ACC_reg_i_82
       (.I(\input_vector[2] [15]),
        .O(ACC_reg_i_82_n_0));
  IBUF ACC_reg_i_83
       (.I(\input_vector[1] [15]),
        .O(ACC_reg_i_83_n_0));
  IBUF ACC_reg_i_84
       (.I(\input_vector[0] [15]),
        .O(ACC_reg_i_84_n_0));
  IBUF ACC_reg_i_85
       (.I(\input_vector[7] [15]),
        .O(ACC_reg_i_85_n_0));
  IBUF ACC_reg_i_86
       (.I(\input_vector[6] [15]),
        .O(ACC_reg_i_86_n_0));
  IBUF ACC_reg_i_87
       (.I(\input_vector[5] [15]),
        .O(ACC_reg_i_87_n_0));
  IBUF ACC_reg_i_88
       (.I(\input_vector[4] [15]),
        .O(ACC_reg_i_88_n_0));
  IBUF ACC_reg_i_89
       (.I(\input_vector[3] [14]),
        .O(ACC_reg_i_89_n_0));
  IBUF ACC_reg_i_90
       (.I(\input_vector[2] [14]),
        .O(ACC_reg_i_90_n_0));
  IBUF ACC_reg_i_91
       (.I(\input_vector[1] [14]),
        .O(ACC_reg_i_91_n_0));
  IBUF ACC_reg_i_92
       (.I(\input_vector[0] [14]),
        .O(ACC_reg_i_92_n_0));
  IBUF ACC_reg_i_93
       (.I(\input_vector[7] [14]),
        .O(ACC_reg_i_93_n_0));
  IBUF ACC_reg_i_94
       (.I(\input_vector[6] [14]),
        .O(ACC_reg_i_94_n_0));
  IBUF ACC_reg_i_95
       (.I(\input_vector[5] [14]),
        .O(ACC_reg_i_95_n_0));
  IBUF ACC_reg_i_96
       (.I(\input_vector[4] [14]),
        .O(ACC_reg_i_96_n_0));
  IBUF ACC_reg_i_97
       (.I(\input_vector[3] [13]),
        .O(ACC_reg_i_97_n_0));
  IBUF ACC_reg_i_98
       (.I(\input_vector[2] [13]),
        .O(ACC_reg_i_98_n_0));
  IBUF ACC_reg_i_99
       (.I(\input_vector[1] [13]),
        .O(ACC_reg_i_99_n_0));
  BUFG CLK_IBUF_BUFG_inst
       (.I(CLK_IBUF),
        .O(CLK_IBUF_BUFG));
  IBUF CLK_IBUF_inst
       (.I(CLK),
        .O(CLK_IBUF));
  IBUF RST_IBUF_inst
       (.I(RST),
        .O(RST_IBUF));
  OBUF \S1[0][0]_INST_0 
       (.I(\S1[0]_OBUF [0]),
        .O(\S1[0] [0]));
  OBUF \S1[0][10]_INST_0 
       (.I(\S1[0]_OBUF [10]),
        .O(\S1[0] [10]));
  OBUF \S1[0][11]_INST_0 
       (.I(\S1[0]_OBUF [11]),
        .O(\S1[0] [11]));
  OBUF \S1[0][12]_INST_0 
       (.I(\S1[0]_OBUF [12]),
        .O(\S1[0] [12]));
  OBUF \S1[0][13]_INST_0 
       (.I(\S1[0]_OBUF [13]),
        .O(\S1[0] [13]));
  OBUF \S1[0][14]_INST_0 
       (.I(\S1[0]_OBUF [14]),
        .O(\S1[0] [14]));
  OBUF \S1[0][15]_INST_0 
       (.I(\S1[0]_OBUF [15]),
        .O(\S1[0] [15]));
  OBUF \S1[0][16]_INST_0 
       (.I(\S1[0]_OBUF [16]),
        .O(\S1[0] [16]));
  OBUF \S1[0][17]_INST_0 
       (.I(\S1[0]_OBUF [17]),
        .O(\S1[0] [17]));
  OBUF \S1[0][18]_INST_0 
       (.I(\S1[0]_OBUF [18]),
        .O(\S1[0] [18]));
  OBUF \S1[0][19]_INST_0 
       (.I(\S1[0]_OBUF [19]),
        .O(\S1[0] [19]));
  OBUF \S1[0][1]_INST_0 
       (.I(\S1[0]_OBUF [1]),
        .O(\S1[0] [1]));
  OBUF \S1[0][20]_INST_0 
       (.I(\S1[0]_OBUF [20]),
        .O(\S1[0] [20]));
  OBUF \S1[0][21]_INST_0 
       (.I(\S1[0]_OBUF [21]),
        .O(\S1[0] [21]));
  OBUF \S1[0][22]_INST_0 
       (.I(\S1[0]_OBUF [22]),
        .O(\S1[0] [22]));
  OBUF \S1[0][23]_INST_0 
       (.I(\S1[0]_OBUF [23]),
        .O(\S1[0] [23]));
  OBUF \S1[0][24]_INST_0 
       (.I(\S1[0]_OBUF [24]),
        .O(\S1[0] [24]));
  OBUF \S1[0][25]_INST_0 
       (.I(\S1[0]_OBUF [25]),
        .O(\S1[0] [25]));
  OBUF \S1[0][26]_INST_0 
       (.I(\S1[0]_OBUF [26]),
        .O(\S1[0] [26]));
  OBUF \S1[0][27]_INST_0 
       (.I(\S1[0]_OBUF [27]),
        .O(\S1[0] [27]));
  OBUF \S1[0][28]_INST_0 
       (.I(\S1[0]_OBUF [28]),
        .O(\S1[0] [28]));
  OBUF \S1[0][29]_INST_0 
       (.I(\S1[0]_OBUF [29]),
        .O(\S1[0] [29]));
  OBUF \S1[0][2]_INST_0 
       (.I(\S1[0]_OBUF [2]),
        .O(\S1[0] [2]));
  OBUF \S1[0][30]_INST_0 
       (.I(\S1[0]_OBUF [30]),
        .O(\S1[0] [30]));
  OBUF \S1[0][31]_INST_0 
       (.I(\S1[0]_OBUF [31]),
        .O(\S1[0] [31]));
  OBUF \S1[0][32]_INST_0 
       (.I(\S1[0]_OBUF [32]),
        .O(\S1[0] [32]));
  OBUF \S1[0][3]_INST_0 
       (.I(\S1[0]_OBUF [3]),
        .O(\S1[0] [3]));
  OBUF \S1[0][4]_INST_0 
       (.I(\S1[0]_OBUF [4]),
        .O(\S1[0] [4]));
  OBUF \S1[0][5]_INST_0 
       (.I(\S1[0]_OBUF [5]),
        .O(\S1[0] [5]));
  OBUF \S1[0][6]_INST_0 
       (.I(\S1[0]_OBUF [6]),
        .O(\S1[0] [6]));
  OBUF \S1[0][7]_INST_0 
       (.I(\S1[0]_OBUF [7]),
        .O(\S1[0] [7]));
  OBUF \S1[0][8]_INST_0 
       (.I(\S1[0]_OBUF [8]),
        .O(\S1[0] [8]));
  OBUF \S1[0][9]_INST_0 
       (.I(\S1[0]_OBUF [9]),
        .O(\S1[0] [9]));
  OBUF \S1[1][0]_INST_0 
       (.I(\S1[1]_OBUF [0]),
        .O(\S1[1] [0]));
  OBUF \S1[1][10]_INST_0 
       (.I(\S1[1]_OBUF [10]),
        .O(\S1[1] [10]));
  OBUF \S1[1][11]_INST_0 
       (.I(\S1[1]_OBUF [11]),
        .O(\S1[1] [11]));
  OBUF \S1[1][12]_INST_0 
       (.I(\S1[1]_OBUF [12]),
        .O(\S1[1] [12]));
  OBUF \S1[1][13]_INST_0 
       (.I(\S1[1]_OBUF [13]),
        .O(\S1[1] [13]));
  OBUF \S1[1][14]_INST_0 
       (.I(\S1[1]_OBUF [14]),
        .O(\S1[1] [14]));
  OBUF \S1[1][15]_INST_0 
       (.I(\S1[1]_OBUF [15]),
        .O(\S1[1] [15]));
  OBUF \S1[1][16]_INST_0 
       (.I(\S1[1]_OBUF [16]),
        .O(\S1[1] [16]));
  OBUF \S1[1][17]_INST_0 
       (.I(\S1[1]_OBUF [17]),
        .O(\S1[1] [17]));
  OBUF \S1[1][18]_INST_0 
       (.I(\S1[1]_OBUF [18]),
        .O(\S1[1] [18]));
  OBUF \S1[1][19]_INST_0 
       (.I(\S1[1]_OBUF [19]),
        .O(\S1[1] [19]));
  OBUF \S1[1][1]_INST_0 
       (.I(\S1[1]_OBUF [1]),
        .O(\S1[1] [1]));
  OBUF \S1[1][20]_INST_0 
       (.I(\S1[1]_OBUF [20]),
        .O(\S1[1] [20]));
  OBUF \S1[1][21]_INST_0 
       (.I(\S1[1]_OBUF [21]),
        .O(\S1[1] [21]));
  OBUF \S1[1][22]_INST_0 
       (.I(\S1[1]_OBUF [22]),
        .O(\S1[1] [22]));
  OBUF \S1[1][23]_INST_0 
       (.I(\S1[1]_OBUF [23]),
        .O(\S1[1] [23]));
  OBUF \S1[1][24]_INST_0 
       (.I(\S1[1]_OBUF [24]),
        .O(\S1[1] [24]));
  OBUF \S1[1][25]_INST_0 
       (.I(\S1[1]_OBUF [25]),
        .O(\S1[1] [25]));
  OBUF \S1[1][26]_INST_0 
       (.I(\S1[1]_OBUF [26]),
        .O(\S1[1] [26]));
  OBUF \S1[1][27]_INST_0 
       (.I(\S1[1]_OBUF [27]),
        .O(\S1[1] [27]));
  OBUF \S1[1][28]_INST_0 
       (.I(\S1[1]_OBUF [28]),
        .O(\S1[1] [28]));
  OBUF \S1[1][29]_INST_0 
       (.I(\S1[1]_OBUF [29]),
        .O(\S1[1] [29]));
  OBUF \S1[1][2]_INST_0 
       (.I(\S1[1]_OBUF [2]),
        .O(\S1[1] [2]));
  OBUF \S1[1][30]_INST_0 
       (.I(\S1[1]_OBUF [30]),
        .O(\S1[1] [30]));
  OBUF \S1[1][31]_INST_0 
       (.I(\S1[1]_OBUF [31]),
        .O(\S1[1] [31]));
  OBUF \S1[1][32]_INST_0 
       (.I(\S1[1]_OBUF [32]),
        .O(\S1[1] [32]));
  OBUF \S1[1][3]_INST_0 
       (.I(\S1[1]_OBUF [3]),
        .O(\S1[1] [3]));
  OBUF \S1[1][4]_INST_0 
       (.I(\S1[1]_OBUF [4]),
        .O(\S1[1] [4]));
  OBUF \S1[1][5]_INST_0 
       (.I(\S1[1]_OBUF [5]),
        .O(\S1[1] [5]));
  OBUF \S1[1][6]_INST_0 
       (.I(\S1[1]_OBUF [6]),
        .O(\S1[1] [6]));
  OBUF \S1[1][7]_INST_0 
       (.I(\S1[1]_OBUF [7]),
        .O(\S1[1] [7]));
  OBUF \S1[1][8]_INST_0 
       (.I(\S1[1]_OBUF [8]),
        .O(\S1[1] [8]));
  OBUF \S1[1][9]_INST_0 
       (.I(\S1[1]_OBUF [9]),
        .O(\S1[1] [9]));
  OBUF \S1[2][0]_INST_0 
       (.I(\S1[2]_OBUF [0]),
        .O(\S1[2] [0]));
  OBUF \S1[2][10]_INST_0 
       (.I(\S1[2]_OBUF [10]),
        .O(\S1[2] [10]));
  OBUF \S1[2][11]_INST_0 
       (.I(\S1[2]_OBUF [11]),
        .O(\S1[2] [11]));
  OBUF \S1[2][12]_INST_0 
       (.I(\S1[2]_OBUF [12]),
        .O(\S1[2] [12]));
  OBUF \S1[2][13]_INST_0 
       (.I(\S1[2]_OBUF [13]),
        .O(\S1[2] [13]));
  OBUF \S1[2][14]_INST_0 
       (.I(\S1[2]_OBUF [14]),
        .O(\S1[2] [14]));
  OBUF \S1[2][15]_INST_0 
       (.I(\S1[2]_OBUF [15]),
        .O(\S1[2] [15]));
  OBUF \S1[2][16]_INST_0 
       (.I(\S1[2]_OBUF [16]),
        .O(\S1[2] [16]));
  OBUF \S1[2][17]_INST_0 
       (.I(\S1[2]_OBUF [17]),
        .O(\S1[2] [17]));
  OBUF \S1[2][18]_INST_0 
       (.I(\S1[2]_OBUF [18]),
        .O(\S1[2] [18]));
  OBUF \S1[2][19]_INST_0 
       (.I(\S1[2]_OBUF [19]),
        .O(\S1[2] [19]));
  OBUF \S1[2][1]_INST_0 
       (.I(\S1[2]_OBUF [1]),
        .O(\S1[2] [1]));
  OBUF \S1[2][20]_INST_0 
       (.I(\S1[2]_OBUF [20]),
        .O(\S1[2] [20]));
  OBUF \S1[2][21]_INST_0 
       (.I(\S1[2]_OBUF [21]),
        .O(\S1[2] [21]));
  OBUF \S1[2][22]_INST_0 
       (.I(\S1[2]_OBUF [22]),
        .O(\S1[2] [22]));
  OBUF \S1[2][23]_INST_0 
       (.I(\S1[2]_OBUF [23]),
        .O(\S1[2] [23]));
  OBUF \S1[2][24]_INST_0 
       (.I(\S1[2]_OBUF [24]),
        .O(\S1[2] [24]));
  OBUF \S1[2][25]_INST_0 
       (.I(\S1[2]_OBUF [25]),
        .O(\S1[2] [25]));
  OBUF \S1[2][26]_INST_0 
       (.I(\S1[2]_OBUF [26]),
        .O(\S1[2] [26]));
  OBUF \S1[2][27]_INST_0 
       (.I(\S1[2]_OBUF [27]),
        .O(\S1[2] [27]));
  OBUF \S1[2][28]_INST_0 
       (.I(\S1[2]_OBUF [28]),
        .O(\S1[2] [28]));
  OBUF \S1[2][29]_INST_0 
       (.I(\S1[2]_OBUF [29]),
        .O(\S1[2] [29]));
  OBUF \S1[2][2]_INST_0 
       (.I(\S1[2]_OBUF [2]),
        .O(\S1[2] [2]));
  OBUF \S1[2][30]_INST_0 
       (.I(\S1[2]_OBUF [30]),
        .O(\S1[2] [30]));
  OBUF \S1[2][31]_INST_0 
       (.I(\S1[2]_OBUF [31]),
        .O(\S1[2] [31]));
  OBUF \S1[2][32]_INST_0 
       (.I(\S1[2]_OBUF [32]),
        .O(\S1[2] [32]));
  OBUF \S1[2][3]_INST_0 
       (.I(\S1[2]_OBUF [3]),
        .O(\S1[2] [3]));
  OBUF \S1[2][4]_INST_0 
       (.I(\S1[2]_OBUF [4]),
        .O(\S1[2] [4]));
  OBUF \S1[2][5]_INST_0 
       (.I(\S1[2]_OBUF [5]),
        .O(\S1[2] [5]));
  OBUF \S1[2][6]_INST_0 
       (.I(\S1[2]_OBUF [6]),
        .O(\S1[2] [6]));
  OBUF \S1[2][7]_INST_0 
       (.I(\S1[2]_OBUF [7]),
        .O(\S1[2] [7]));
  OBUF \S1[2][8]_INST_0 
       (.I(\S1[2]_OBUF [8]),
        .O(\S1[2] [8]));
  OBUF \S1[2][9]_INST_0 
       (.I(\S1[2]_OBUF [9]),
        .O(\S1[2] [9]));
  OBUF \S1[3][0]_INST_0 
       (.I(\S1[3]_OBUF [0]),
        .O(\S1[3] [0]));
  OBUF \S1[3][10]_INST_0 
       (.I(\S1[3]_OBUF [10]),
        .O(\S1[3] [10]));
  OBUF \S1[3][11]_INST_0 
       (.I(\S1[3]_OBUF [11]),
        .O(\S1[3] [11]));
  OBUF \S1[3][12]_INST_0 
       (.I(\S1[3]_OBUF [12]),
        .O(\S1[3] [12]));
  OBUF \S1[3][13]_INST_0 
       (.I(\S1[3]_OBUF [13]),
        .O(\S1[3] [13]));
  OBUF \S1[3][14]_INST_0 
       (.I(\S1[3]_OBUF [14]),
        .O(\S1[3] [14]));
  OBUF \S1[3][15]_INST_0 
       (.I(\S1[3]_OBUF [15]),
        .O(\S1[3] [15]));
  OBUF \S1[3][16]_INST_0 
       (.I(\S1[3]_OBUF [16]),
        .O(\S1[3] [16]));
  OBUF \S1[3][17]_INST_0 
       (.I(\S1[3]_OBUF [17]),
        .O(\S1[3] [17]));
  OBUF \S1[3][18]_INST_0 
       (.I(\S1[3]_OBUF [18]),
        .O(\S1[3] [18]));
  OBUF \S1[3][19]_INST_0 
       (.I(\S1[3]_OBUF [19]),
        .O(\S1[3] [19]));
  OBUF \S1[3][1]_INST_0 
       (.I(\S1[3]_OBUF [1]),
        .O(\S1[3] [1]));
  OBUF \S1[3][20]_INST_0 
       (.I(\S1[3]_OBUF [20]),
        .O(\S1[3] [20]));
  OBUF \S1[3][21]_INST_0 
       (.I(\S1[3]_OBUF [21]),
        .O(\S1[3] [21]));
  OBUF \S1[3][22]_INST_0 
       (.I(\S1[3]_OBUF [22]),
        .O(\S1[3] [22]));
  OBUF \S1[3][23]_INST_0 
       (.I(\S1[3]_OBUF [23]),
        .O(\S1[3] [23]));
  OBUF \S1[3][24]_INST_0 
       (.I(\S1[3]_OBUF [24]),
        .O(\S1[3] [24]));
  OBUF \S1[3][25]_INST_0 
       (.I(\S1[3]_OBUF [25]),
        .O(\S1[3] [25]));
  OBUF \S1[3][26]_INST_0 
       (.I(\S1[3]_OBUF [26]),
        .O(\S1[3] [26]));
  OBUF \S1[3][27]_INST_0 
       (.I(\S1[3]_OBUF [27]),
        .O(\S1[3] [27]));
  OBUF \S1[3][28]_INST_0 
       (.I(\S1[3]_OBUF [28]),
        .O(\S1[3] [28]));
  OBUF \S1[3][29]_INST_0 
       (.I(\S1[3]_OBUF [29]),
        .O(\S1[3] [29]));
  OBUF \S1[3][2]_INST_0 
       (.I(\S1[3]_OBUF [2]),
        .O(\S1[3] [2]));
  OBUF \S1[3][30]_INST_0 
       (.I(\S1[3]_OBUF [30]),
        .O(\S1[3] [30]));
  OBUF \S1[3][31]_INST_0 
       (.I(\S1[3]_OBUF [31]),
        .O(\S1[3] [31]));
  OBUF \S1[3][32]_INST_0 
       (.I(\S1[3]_OBUF [32]),
        .O(\S1[3] [32]));
  OBUF \S1[3][3]_INST_0 
       (.I(\S1[3]_OBUF [3]),
        .O(\S1[3] [3]));
  OBUF \S1[3][4]_INST_0 
       (.I(\S1[3]_OBUF [4]),
        .O(\S1[3] [4]));
  OBUF \S1[3][5]_INST_0 
       (.I(\S1[3]_OBUF [5]),
        .O(\S1[3] [5]));
  OBUF \S1[3][6]_INST_0 
       (.I(\S1[3]_OBUF [6]),
        .O(\S1[3] [6]));
  OBUF \S1[3][7]_INST_0 
       (.I(\S1[3]_OBUF [7]),
        .O(\S1[3] [7]));
  OBUF \S1[3][8]_INST_0 
       (.I(\S1[3]_OBUF [8]),
        .O(\S1[3] [8]));
  OBUF \S1[3][9]_INST_0 
       (.I(\S1[3]_OBUF [9]),
        .O(\S1[3] [9]));
  OBUF \S2[0][0]_INST_0 
       (.I(\S2[0]_OBUF [0]),
        .O(\S2[0] [0]));
  OBUF \S2[0][10]_INST_0 
       (.I(\S2[0]_OBUF [10]),
        .O(\S2[0] [10]));
  OBUF \S2[0][11]_INST_0 
       (.I(\S2[0]_OBUF [11]),
        .O(\S2[0] [11]));
  OBUF \S2[0][12]_INST_0 
       (.I(\S2[0]_OBUF [12]),
        .O(\S2[0] [12]));
  OBUF \S2[0][13]_INST_0 
       (.I(\S2[0]_OBUF [13]),
        .O(\S2[0] [13]));
  OBUF \S2[0][14]_INST_0 
       (.I(\S2[0]_OBUF [14]),
        .O(\S2[0] [14]));
  OBUF \S2[0][15]_INST_0 
       (.I(\S2[0]_OBUF [15]),
        .O(\S2[0] [15]));
  OBUF \S2[0][16]_INST_0 
       (.I(\S2[0]_OBUF [16]),
        .O(\S2[0] [16]));
  OBUF \S2[0][17]_INST_0 
       (.I(\S2[0]_OBUF [17]),
        .O(\S2[0] [17]));
  OBUF \S2[0][18]_INST_0 
       (.I(\S2[0]_OBUF [18]),
        .O(\S2[0] [18]));
  OBUF \S2[0][19]_INST_0 
       (.I(\S2[0]_OBUF [19]),
        .O(\S2[0] [19]));
  OBUF \S2[0][1]_INST_0 
       (.I(\S2[0]_OBUF [1]),
        .O(\S2[0] [1]));
  OBUF \S2[0][20]_INST_0 
       (.I(\S2[0]_OBUF [20]),
        .O(\S2[0] [20]));
  OBUF \S2[0][21]_INST_0 
       (.I(\S2[0]_OBUF [21]),
        .O(\S2[0] [21]));
  OBUF \S2[0][22]_INST_0 
       (.I(\S2[0]_OBUF [22]),
        .O(\S2[0] [22]));
  OBUF \S2[0][23]_INST_0 
       (.I(\S2[0]_OBUF [23]),
        .O(\S2[0] [23]));
  OBUF \S2[0][24]_INST_0 
       (.I(\S2[0]_OBUF [24]),
        .O(\S2[0] [24]));
  OBUF \S2[0][25]_INST_0 
       (.I(\S2[0]_OBUF [25]),
        .O(\S2[0] [25]));
  OBUF \S2[0][26]_INST_0 
       (.I(\S2[0]_OBUF [26]),
        .O(\S2[0] [26]));
  OBUF \S2[0][27]_INST_0 
       (.I(\S2[0]_OBUF [27]),
        .O(\S2[0] [27]));
  OBUF \S2[0][28]_INST_0 
       (.I(\S2[0]_OBUF [28]),
        .O(\S2[0] [28]));
  OBUF \S2[0][29]_INST_0 
       (.I(\S2[0]_OBUF [29]),
        .O(\S2[0] [29]));
  OBUF \S2[0][2]_INST_0 
       (.I(\S2[0]_OBUF [2]),
        .O(\S2[0] [2]));
  OBUF \S2[0][30]_INST_0 
       (.I(\S2[0]_OBUF [30]),
        .O(\S2[0] [30]));
  OBUF \S2[0][31]_INST_0 
       (.I(\S2[0]_OBUF [31]),
        .O(\S2[0] [31]));
  OBUF \S2[0][32]_INST_0 
       (.I(\S2[0]_OBUF [32]),
        .O(\S2[0] [32]));
  OBUF \S2[0][3]_INST_0 
       (.I(\S2[0]_OBUF [3]),
        .O(\S2[0] [3]));
  OBUF \S2[0][4]_INST_0 
       (.I(\S2[0]_OBUF [4]),
        .O(\S2[0] [4]));
  OBUF \S2[0][5]_INST_0 
       (.I(\S2[0]_OBUF [5]),
        .O(\S2[0] [5]));
  OBUF \S2[0][6]_INST_0 
       (.I(\S2[0]_OBUF [6]),
        .O(\S2[0] [6]));
  OBUF \S2[0][7]_INST_0 
       (.I(\S2[0]_OBUF [7]),
        .O(\S2[0] [7]));
  OBUF \S2[0][8]_INST_0 
       (.I(\S2[0]_OBUF [8]),
        .O(\S2[0] [8]));
  OBUF \S2[0][9]_INST_0 
       (.I(\S2[0]_OBUF [9]),
        .O(\S2[0] [9]));
  OBUF \S2[1][0]_INST_0 
       (.I(\S2[1]_OBUF [0]),
        .O(\S2[1] [0]));
  OBUF \S2[1][10]_INST_0 
       (.I(\S2[1]_OBUF [10]),
        .O(\S2[1] [10]));
  OBUF \S2[1][11]_INST_0 
       (.I(\S2[1]_OBUF [11]),
        .O(\S2[1] [11]));
  OBUF \S2[1][12]_INST_0 
       (.I(\S2[1]_OBUF [12]),
        .O(\S2[1] [12]));
  OBUF \S2[1][13]_INST_0 
       (.I(\S2[1]_OBUF [13]),
        .O(\S2[1] [13]));
  OBUF \S2[1][14]_INST_0 
       (.I(\S2[1]_OBUF [14]),
        .O(\S2[1] [14]));
  OBUF \S2[1][15]_INST_0 
       (.I(\S2[1]_OBUF [15]),
        .O(\S2[1] [15]));
  OBUF \S2[1][16]_INST_0 
       (.I(\S2[1]_OBUF [16]),
        .O(\S2[1] [16]));
  OBUF \S2[1][17]_INST_0 
       (.I(\S2[1]_OBUF [17]),
        .O(\S2[1] [17]));
  OBUF \S2[1][18]_INST_0 
       (.I(\S2[1]_OBUF [18]),
        .O(\S2[1] [18]));
  OBUF \S2[1][19]_INST_0 
       (.I(\S2[1]_OBUF [19]),
        .O(\S2[1] [19]));
  OBUF \S2[1][1]_INST_0 
       (.I(\S2[1]_OBUF [1]),
        .O(\S2[1] [1]));
  OBUF \S2[1][20]_INST_0 
       (.I(\S2[1]_OBUF [20]),
        .O(\S2[1] [20]));
  OBUF \S2[1][21]_INST_0 
       (.I(\S2[1]_OBUF [21]),
        .O(\S2[1] [21]));
  OBUF \S2[1][22]_INST_0 
       (.I(\S2[1]_OBUF [22]),
        .O(\S2[1] [22]));
  OBUF \S2[1][23]_INST_0 
       (.I(\S2[1]_OBUF [23]),
        .O(\S2[1] [23]));
  OBUF \S2[1][24]_INST_0 
       (.I(\S2[1]_OBUF [24]),
        .O(\S2[1] [24]));
  OBUF \S2[1][25]_INST_0 
       (.I(\S2[1]_OBUF [25]),
        .O(\S2[1] [25]));
  OBUF \S2[1][26]_INST_0 
       (.I(\S2[1]_OBUF [26]),
        .O(\S2[1] [26]));
  OBUF \S2[1][27]_INST_0 
       (.I(\S2[1]_OBUF [27]),
        .O(\S2[1] [27]));
  OBUF \S2[1][28]_INST_0 
       (.I(\S2[1]_OBUF [28]),
        .O(\S2[1] [28]));
  OBUF \S2[1][29]_INST_0 
       (.I(\S2[1]_OBUF [29]),
        .O(\S2[1] [29]));
  OBUF \S2[1][2]_INST_0 
       (.I(\S2[1]_OBUF [2]),
        .O(\S2[1] [2]));
  OBUF \S2[1][30]_INST_0 
       (.I(\S2[1]_OBUF [30]),
        .O(\S2[1] [30]));
  OBUF \S2[1][31]_INST_0 
       (.I(\S2[1]_OBUF [31]),
        .O(\S2[1] [31]));
  OBUF \S2[1][32]_INST_0 
       (.I(\S2[1]_OBUF [32]),
        .O(\S2[1] [32]));
  OBUF \S2[1][3]_INST_0 
       (.I(\S2[1]_OBUF [3]),
        .O(\S2[1] [3]));
  OBUF \S2[1][4]_INST_0 
       (.I(\S2[1]_OBUF [4]),
        .O(\S2[1] [4]));
  OBUF \S2[1][5]_INST_0 
       (.I(\S2[1]_OBUF [5]),
        .O(\S2[1] [5]));
  OBUF \S2[1][6]_INST_0 
       (.I(\S2[1]_OBUF [6]),
        .O(\S2[1] [6]));
  OBUF \S2[1][7]_INST_0 
       (.I(\S2[1]_OBUF [7]),
        .O(\S2[1] [7]));
  OBUF \S2[1][8]_INST_0 
       (.I(\S2[1]_OBUF [8]),
        .O(\S2[1] [8]));
  OBUF \S2[1][9]_INST_0 
       (.I(\S2[1]_OBUF [9]),
        .O(\S2[1] [9]));
  OBUF \S2[2][0]_INST_0 
       (.I(\S2[2]_OBUF [0]),
        .O(\S2[2] [0]));
  OBUF \S2[2][10]_INST_0 
       (.I(\S2[2]_OBUF [10]),
        .O(\S2[2] [10]));
  OBUF \S2[2][11]_INST_0 
       (.I(\S2[2]_OBUF [11]),
        .O(\S2[2] [11]));
  OBUF \S2[2][12]_INST_0 
       (.I(\S2[2]_OBUF [12]),
        .O(\S2[2] [12]));
  OBUF \S2[2][13]_INST_0 
       (.I(\S2[2]_OBUF [13]),
        .O(\S2[2] [13]));
  OBUF \S2[2][14]_INST_0 
       (.I(\S2[2]_OBUF [14]),
        .O(\S2[2] [14]));
  OBUF \S2[2][15]_INST_0 
       (.I(\S2[2]_OBUF [15]),
        .O(\S2[2] [15]));
  OBUF \S2[2][16]_INST_0 
       (.I(\S2[2]_OBUF [16]),
        .O(\S2[2] [16]));
  OBUF \S2[2][17]_INST_0 
       (.I(\S2[2]_OBUF [17]),
        .O(\S2[2] [17]));
  OBUF \S2[2][18]_INST_0 
       (.I(\S2[2]_OBUF [18]),
        .O(\S2[2] [18]));
  OBUF \S2[2][19]_INST_0 
       (.I(\S2[2]_OBUF [19]),
        .O(\S2[2] [19]));
  OBUF \S2[2][1]_INST_0 
       (.I(\S2[2]_OBUF [1]),
        .O(\S2[2] [1]));
  OBUF \S2[2][20]_INST_0 
       (.I(\S2[2]_OBUF [20]),
        .O(\S2[2] [20]));
  OBUF \S2[2][21]_INST_0 
       (.I(\S2[2]_OBUF [21]),
        .O(\S2[2] [21]));
  OBUF \S2[2][22]_INST_0 
       (.I(\S2[2]_OBUF [22]),
        .O(\S2[2] [22]));
  OBUF \S2[2][23]_INST_0 
       (.I(\S2[2]_OBUF [23]),
        .O(\S2[2] [23]));
  OBUF \S2[2][24]_INST_0 
       (.I(\S2[2]_OBUF [24]),
        .O(\S2[2] [24]));
  OBUF \S2[2][25]_INST_0 
       (.I(\S2[2]_OBUF [25]),
        .O(\S2[2] [25]));
  OBUF \S2[2][26]_INST_0 
       (.I(\S2[2]_OBUF [26]),
        .O(\S2[2] [26]));
  OBUF \S2[2][27]_INST_0 
       (.I(\S2[2]_OBUF [27]),
        .O(\S2[2] [27]));
  OBUF \S2[2][28]_INST_0 
       (.I(\S2[2]_OBUF [28]),
        .O(\S2[2] [28]));
  OBUF \S2[2][29]_INST_0 
       (.I(\S2[2]_OBUF [29]),
        .O(\S2[2] [29]));
  OBUF \S2[2][2]_INST_0 
       (.I(\S2[2]_OBUF [2]),
        .O(\S2[2] [2]));
  OBUF \S2[2][30]_INST_0 
       (.I(\S2[2]_OBUF [30]),
        .O(\S2[2] [30]));
  OBUF \S2[2][31]_INST_0 
       (.I(\S2[2]_OBUF [31]),
        .O(\S2[2] [31]));
  OBUF \S2[2][32]_INST_0 
       (.I(\S2[2]_OBUF [32]),
        .O(\S2[2] [32]));
  OBUF \S2[2][3]_INST_0 
       (.I(\S2[2]_OBUF [3]),
        .O(\S2[2] [3]));
  OBUF \S2[2][4]_INST_0 
       (.I(\S2[2]_OBUF [4]),
        .O(\S2[2] [4]));
  OBUF \S2[2][5]_INST_0 
       (.I(\S2[2]_OBUF [5]),
        .O(\S2[2] [5]));
  OBUF \S2[2][6]_INST_0 
       (.I(\S2[2]_OBUF [6]),
        .O(\S2[2] [6]));
  OBUF \S2[2][7]_INST_0 
       (.I(\S2[2]_OBUF [7]),
        .O(\S2[2] [7]));
  OBUF \S2[2][8]_INST_0 
       (.I(\S2[2]_OBUF [8]),
        .O(\S2[2] [8]));
  OBUF \S2[2][9]_INST_0 
       (.I(\S2[2]_OBUF [9]),
        .O(\S2[2] [9]));
  OBUF \S2[3][0]_INST_0 
       (.I(\S2[3]_OBUF [0]),
        .O(\S2[3] [0]));
  OBUF \S2[3][10]_INST_0 
       (.I(\S2[3]_OBUF [10]),
        .O(\S2[3] [10]));
  OBUF \S2[3][11]_INST_0 
       (.I(\S2[3]_OBUF [11]),
        .O(\S2[3] [11]));
  OBUF \S2[3][12]_INST_0 
       (.I(\S2[3]_OBUF [12]),
        .O(\S2[3] [12]));
  OBUF \S2[3][13]_INST_0 
       (.I(\S2[3]_OBUF [13]),
        .O(\S2[3] [13]));
  OBUF \S2[3][14]_INST_0 
       (.I(\S2[3]_OBUF [14]),
        .O(\S2[3] [14]));
  OBUF \S2[3][15]_INST_0 
       (.I(\S2[3]_OBUF [15]),
        .O(\S2[3] [15]));
  OBUF \S2[3][16]_INST_0 
       (.I(\S2[3]_OBUF [16]),
        .O(\S2[3] [16]));
  OBUF \S2[3][17]_INST_0 
       (.I(\S2[3]_OBUF [17]),
        .O(\S2[3] [17]));
  OBUF \S2[3][18]_INST_0 
       (.I(\S2[3]_OBUF [18]),
        .O(\S2[3] [18]));
  OBUF \S2[3][19]_INST_0 
       (.I(\S2[3]_OBUF [19]),
        .O(\S2[3] [19]));
  OBUF \S2[3][1]_INST_0 
       (.I(\S2[3]_OBUF [1]),
        .O(\S2[3] [1]));
  OBUF \S2[3][20]_INST_0 
       (.I(\S2[3]_OBUF [20]),
        .O(\S2[3] [20]));
  OBUF \S2[3][21]_INST_0 
       (.I(\S2[3]_OBUF [21]),
        .O(\S2[3] [21]));
  OBUF \S2[3][22]_INST_0 
       (.I(\S2[3]_OBUF [22]),
        .O(\S2[3] [22]));
  OBUF \S2[3][23]_INST_0 
       (.I(\S2[3]_OBUF [23]),
        .O(\S2[3] [23]));
  OBUF \S2[3][24]_INST_0 
       (.I(\S2[3]_OBUF [24]),
        .O(\S2[3] [24]));
  OBUF \S2[3][25]_INST_0 
       (.I(\S2[3]_OBUF [25]),
        .O(\S2[3] [25]));
  OBUF \S2[3][26]_INST_0 
       (.I(\S2[3]_OBUF [26]),
        .O(\S2[3] [26]));
  OBUF \S2[3][27]_INST_0 
       (.I(\S2[3]_OBUF [27]),
        .O(\S2[3] [27]));
  OBUF \S2[3][28]_INST_0 
       (.I(\S2[3]_OBUF [28]),
        .O(\S2[3] [28]));
  OBUF \S2[3][29]_INST_0 
       (.I(\S2[3]_OBUF [29]),
        .O(\S2[3] [29]));
  OBUF \S2[3][2]_INST_0 
       (.I(\S2[3]_OBUF [2]),
        .O(\S2[3] [2]));
  OBUF \S2[3][30]_INST_0 
       (.I(\S2[3]_OBUF [30]),
        .O(\S2[3] [30]));
  OBUF \S2[3][31]_INST_0 
       (.I(\S2[3]_OBUF [31]),
        .O(\S2[3] [31]));
  OBUF \S2[3][32]_INST_0 
       (.I(\S2[3]_OBUF [32]),
        .O(\S2[3] [32]));
  OBUF \S2[3][3]_INST_0 
       (.I(\S2[3]_OBUF [3]),
        .O(\S2[3] [3]));
  OBUF \S2[3][4]_INST_0 
       (.I(\S2[3]_OBUF [4]),
        .O(\S2[3] [4]));
  OBUF \S2[3][5]_INST_0 
       (.I(\S2[3]_OBUF [5]),
        .O(\S2[3] [5]));
  OBUF \S2[3][6]_INST_0 
       (.I(\S2[3]_OBUF [6]),
        .O(\S2[3] [6]));
  OBUF \S2[3][7]_INST_0 
       (.I(\S2[3]_OBUF [7]),
        .O(\S2[3] [7]));
  OBUF \S2[3][8]_INST_0 
       (.I(\S2[3]_OBUF [8]),
        .O(\S2[3] [8]));
  OBUF \S2[3][9]_INST_0 
       (.I(\S2[3]_OBUF [9]),
        .O(\S2[3] [9]));
  OBUF \S3[0][0]_INST_0 
       (.I(\S3[0]_OBUF [0]),
        .O(\S3[0] [0]));
  OBUF \S3[0][10]_INST_0 
       (.I(\S3[0]_OBUF [10]),
        .O(\S3[0] [10]));
  OBUF \S3[0][11]_INST_0 
       (.I(\S3[0]_OBUF [11]),
        .O(\S3[0] [11]));
  OBUF \S3[0][12]_INST_0 
       (.I(\S3[0]_OBUF [12]),
        .O(\S3[0] [12]));
  OBUF \S3[0][13]_INST_0 
       (.I(\S3[0]_OBUF [13]),
        .O(\S3[0] [13]));
  OBUF \S3[0][14]_INST_0 
       (.I(\S3[0]_OBUF [14]),
        .O(\S3[0] [14]));
  OBUF \S3[0][15]_INST_0 
       (.I(\S3[0]_OBUF [15]),
        .O(\S3[0] [15]));
  OBUF \S3[0][16]_INST_0 
       (.I(\S3[0]_OBUF [16]),
        .O(\S3[0] [16]));
  OBUF \S3[0][17]_INST_0 
       (.I(\S3[0]_OBUF [17]),
        .O(\S3[0] [17]));
  OBUF \S3[0][18]_INST_0 
       (.I(\S3[0]_OBUF [18]),
        .O(\S3[0] [18]));
  OBUF \S3[0][19]_INST_0 
       (.I(\S3[0]_OBUF [19]),
        .O(\S3[0] [19]));
  OBUF \S3[0][1]_INST_0 
       (.I(\S3[0]_OBUF [1]),
        .O(\S3[0] [1]));
  OBUF \S3[0][20]_INST_0 
       (.I(\S3[0]_OBUF [20]),
        .O(\S3[0] [20]));
  OBUF \S3[0][21]_INST_0 
       (.I(\S3[0]_OBUF [21]),
        .O(\S3[0] [21]));
  OBUF \S3[0][22]_INST_0 
       (.I(\S3[0]_OBUF [22]),
        .O(\S3[0] [22]));
  OBUF \S3[0][23]_INST_0 
       (.I(\S3[0]_OBUF [23]),
        .O(\S3[0] [23]));
  OBUF \S3[0][24]_INST_0 
       (.I(\S3[0]_OBUF [24]),
        .O(\S3[0] [24]));
  OBUF \S3[0][25]_INST_0 
       (.I(\S3[0]_OBUF [25]),
        .O(\S3[0] [25]));
  OBUF \S3[0][26]_INST_0 
       (.I(\S3[0]_OBUF [26]),
        .O(\S3[0] [26]));
  OBUF \S3[0][27]_INST_0 
       (.I(\S3[0]_OBUF [27]),
        .O(\S3[0] [27]));
  OBUF \S3[0][28]_INST_0 
       (.I(\S3[0]_OBUF [28]),
        .O(\S3[0] [28]));
  OBUF \S3[0][29]_INST_0 
       (.I(\S3[0]_OBUF [29]),
        .O(\S3[0] [29]));
  OBUF \S3[0][2]_INST_0 
       (.I(\S3[0]_OBUF [2]),
        .O(\S3[0] [2]));
  OBUF \S3[0][30]_INST_0 
       (.I(\S3[0]_OBUF [30]),
        .O(\S3[0] [30]));
  OBUF \S3[0][31]_INST_0 
       (.I(\S3[0]_OBUF [31]),
        .O(\S3[0] [31]));
  OBUF \S3[0][32]_INST_0 
       (.I(\S3[0]_OBUF [32]),
        .O(\S3[0] [32]));
  OBUF \S3[0][3]_INST_0 
       (.I(\S3[0]_OBUF [3]),
        .O(\S3[0] [3]));
  OBUF \S3[0][4]_INST_0 
       (.I(\S3[0]_OBUF [4]),
        .O(\S3[0] [4]));
  OBUF \S3[0][5]_INST_0 
       (.I(\S3[0]_OBUF [5]),
        .O(\S3[0] [5]));
  OBUF \S3[0][6]_INST_0 
       (.I(\S3[0]_OBUF [6]),
        .O(\S3[0] [6]));
  OBUF \S3[0][7]_INST_0 
       (.I(\S3[0]_OBUF [7]),
        .O(\S3[0] [7]));
  OBUF \S3[0][8]_INST_0 
       (.I(\S3[0]_OBUF [8]),
        .O(\S3[0] [8]));
  OBUF \S3[0][9]_INST_0 
       (.I(\S3[0]_OBUF [9]),
        .O(\S3[0] [9]));
  OBUF \S3[1][0]_INST_0 
       (.I(\S3[1]_OBUF [0]),
        .O(\S3[1] [0]));
  OBUF \S3[1][10]_INST_0 
       (.I(\S3[1]_OBUF [10]),
        .O(\S3[1] [10]));
  OBUF \S3[1][11]_INST_0 
       (.I(\S3[1]_OBUF [11]),
        .O(\S3[1] [11]));
  OBUF \S3[1][12]_INST_0 
       (.I(\S3[1]_OBUF [12]),
        .O(\S3[1] [12]));
  OBUF \S3[1][13]_INST_0 
       (.I(\S3[1]_OBUF [13]),
        .O(\S3[1] [13]));
  OBUF \S3[1][14]_INST_0 
       (.I(\S3[1]_OBUF [14]),
        .O(\S3[1] [14]));
  OBUF \S3[1][15]_INST_0 
       (.I(\S3[1]_OBUF [15]),
        .O(\S3[1] [15]));
  OBUF \S3[1][16]_INST_0 
       (.I(\S3[1]_OBUF [16]),
        .O(\S3[1] [16]));
  OBUF \S3[1][17]_INST_0 
       (.I(\S3[1]_OBUF [17]),
        .O(\S3[1] [17]));
  OBUF \S3[1][18]_INST_0 
       (.I(\S3[1]_OBUF [18]),
        .O(\S3[1] [18]));
  OBUF \S3[1][19]_INST_0 
       (.I(\S3[1]_OBUF [19]),
        .O(\S3[1] [19]));
  OBUF \S3[1][1]_INST_0 
       (.I(\S3[1]_OBUF [1]),
        .O(\S3[1] [1]));
  OBUF \S3[1][20]_INST_0 
       (.I(\S3[1]_OBUF [20]),
        .O(\S3[1] [20]));
  OBUF \S3[1][21]_INST_0 
       (.I(\S3[1]_OBUF [21]),
        .O(\S3[1] [21]));
  OBUF \S3[1][22]_INST_0 
       (.I(\S3[1]_OBUF [22]),
        .O(\S3[1] [22]));
  OBUF \S3[1][23]_INST_0 
       (.I(\S3[1]_OBUF [23]),
        .O(\S3[1] [23]));
  OBUF \S3[1][24]_INST_0 
       (.I(\S3[1]_OBUF [24]),
        .O(\S3[1] [24]));
  OBUF \S3[1][25]_INST_0 
       (.I(\S3[1]_OBUF [25]),
        .O(\S3[1] [25]));
  OBUF \S3[1][26]_INST_0 
       (.I(\S3[1]_OBUF [26]),
        .O(\S3[1] [26]));
  OBUF \S3[1][27]_INST_0 
       (.I(\S3[1]_OBUF [27]),
        .O(\S3[1] [27]));
  OBUF \S3[1][28]_INST_0 
       (.I(\S3[1]_OBUF [28]),
        .O(\S3[1] [28]));
  OBUF \S3[1][29]_INST_0 
       (.I(\S3[1]_OBUF [29]),
        .O(\S3[1] [29]));
  OBUF \S3[1][2]_INST_0 
       (.I(\S3[1]_OBUF [2]),
        .O(\S3[1] [2]));
  OBUF \S3[1][30]_INST_0 
       (.I(\S3[1]_OBUF [30]),
        .O(\S3[1] [30]));
  OBUF \S3[1][31]_INST_0 
       (.I(\S3[1]_OBUF [31]),
        .O(\S3[1] [31]));
  OBUF \S3[1][32]_INST_0 
       (.I(\S3[1]_OBUF [32]),
        .O(\S3[1] [32]));
  OBUF \S3[1][3]_INST_0 
       (.I(\S3[1]_OBUF [3]),
        .O(\S3[1] [3]));
  OBUF \S3[1][4]_INST_0 
       (.I(\S3[1]_OBUF [4]),
        .O(\S3[1] [4]));
  OBUF \S3[1][5]_INST_0 
       (.I(\S3[1]_OBUF [5]),
        .O(\S3[1] [5]));
  OBUF \S3[1][6]_INST_0 
       (.I(\S3[1]_OBUF [6]),
        .O(\S3[1] [6]));
  OBUF \S3[1][7]_INST_0 
       (.I(\S3[1]_OBUF [7]),
        .O(\S3[1] [7]));
  OBUF \S3[1][8]_INST_0 
       (.I(\S3[1]_OBUF [8]),
        .O(\S3[1] [8]));
  OBUF \S3[1][9]_INST_0 
       (.I(\S3[1]_OBUF [9]),
        .O(\S3[1] [9]));
  OBUF \S3[2][0]_INST_0 
       (.I(\S3[2]_OBUF [0]),
        .O(\S3[2] [0]));
  OBUF \S3[2][10]_INST_0 
       (.I(\S3[2]_OBUF [10]),
        .O(\S3[2] [10]));
  OBUF \S3[2][11]_INST_0 
       (.I(\S3[2]_OBUF [11]),
        .O(\S3[2] [11]));
  OBUF \S3[2][12]_INST_0 
       (.I(\S3[2]_OBUF [12]),
        .O(\S3[2] [12]));
  OBUF \S3[2][13]_INST_0 
       (.I(\S3[2]_OBUF [13]),
        .O(\S3[2] [13]));
  OBUF \S3[2][14]_INST_0 
       (.I(\S3[2]_OBUF [14]),
        .O(\S3[2] [14]));
  OBUF \S3[2][15]_INST_0 
       (.I(\S3[2]_OBUF [15]),
        .O(\S3[2] [15]));
  OBUF \S3[2][16]_INST_0 
       (.I(\S3[2]_OBUF [16]),
        .O(\S3[2] [16]));
  OBUF \S3[2][17]_INST_0 
       (.I(\S3[2]_OBUF [17]),
        .O(\S3[2] [17]));
  OBUF \S3[2][18]_INST_0 
       (.I(\S3[2]_OBUF [18]),
        .O(\S3[2] [18]));
  OBUF \S3[2][19]_INST_0 
       (.I(\S3[2]_OBUF [19]),
        .O(\S3[2] [19]));
  OBUF \S3[2][1]_INST_0 
       (.I(\S3[2]_OBUF [1]),
        .O(\S3[2] [1]));
  OBUF \S3[2][20]_INST_0 
       (.I(\S3[2]_OBUF [20]),
        .O(\S3[2] [20]));
  OBUF \S3[2][21]_INST_0 
       (.I(\S3[2]_OBUF [21]),
        .O(\S3[2] [21]));
  OBUF \S3[2][22]_INST_0 
       (.I(\S3[2]_OBUF [22]),
        .O(\S3[2] [22]));
  OBUF \S3[2][23]_INST_0 
       (.I(\S3[2]_OBUF [23]),
        .O(\S3[2] [23]));
  OBUF \S3[2][24]_INST_0 
       (.I(\S3[2]_OBUF [24]),
        .O(\S3[2] [24]));
  OBUF \S3[2][25]_INST_0 
       (.I(\S3[2]_OBUF [25]),
        .O(\S3[2] [25]));
  OBUF \S3[2][26]_INST_0 
       (.I(\S3[2]_OBUF [26]),
        .O(\S3[2] [26]));
  OBUF \S3[2][27]_INST_0 
       (.I(\S3[2]_OBUF [27]),
        .O(\S3[2] [27]));
  OBUF \S3[2][28]_INST_0 
       (.I(\S3[2]_OBUF [28]),
        .O(\S3[2] [28]));
  OBUF \S3[2][29]_INST_0 
       (.I(\S3[2]_OBUF [29]),
        .O(\S3[2] [29]));
  OBUF \S3[2][2]_INST_0 
       (.I(\S3[2]_OBUF [2]),
        .O(\S3[2] [2]));
  OBUF \S3[2][30]_INST_0 
       (.I(\S3[2]_OBUF [30]),
        .O(\S3[2] [30]));
  OBUF \S3[2][31]_INST_0 
       (.I(\S3[2]_OBUF [31]),
        .O(\S3[2] [31]));
  OBUF \S3[2][32]_INST_0 
       (.I(\S3[2]_OBUF [32]),
        .O(\S3[2] [32]));
  OBUF \S3[2][3]_INST_0 
       (.I(\S3[2]_OBUF [3]),
        .O(\S3[2] [3]));
  OBUF \S3[2][4]_INST_0 
       (.I(\S3[2]_OBUF [4]),
        .O(\S3[2] [4]));
  OBUF \S3[2][5]_INST_0 
       (.I(\S3[2]_OBUF [5]),
        .O(\S3[2] [5]));
  OBUF \S3[2][6]_INST_0 
       (.I(\S3[2]_OBUF [6]),
        .O(\S3[2] [6]));
  OBUF \S3[2][7]_INST_0 
       (.I(\S3[2]_OBUF [7]),
        .O(\S3[2] [7]));
  OBUF \S3[2][8]_INST_0 
       (.I(\S3[2]_OBUF [8]),
        .O(\S3[2] [8]));
  OBUF \S3[2][9]_INST_0 
       (.I(\S3[2]_OBUF [9]),
        .O(\S3[2] [9]));
  OBUF \S3[3][0]_INST_0 
       (.I(\S3[3]_OBUF [0]),
        .O(\S3[3] [0]));
  OBUF \S3[3][10]_INST_0 
       (.I(\S3[3]_OBUF [10]),
        .O(\S3[3] [10]));
  OBUF \S3[3][11]_INST_0 
       (.I(\S3[3]_OBUF [11]),
        .O(\S3[3] [11]));
  OBUF \S3[3][12]_INST_0 
       (.I(\S3[3]_OBUF [12]),
        .O(\S3[3] [12]));
  OBUF \S3[3][13]_INST_0 
       (.I(\S3[3]_OBUF [13]),
        .O(\S3[3] [13]));
  OBUF \S3[3][14]_INST_0 
       (.I(\S3[3]_OBUF [14]),
        .O(\S3[3] [14]));
  OBUF \S3[3][15]_INST_0 
       (.I(\S3[3]_OBUF [15]),
        .O(\S3[3] [15]));
  OBUF \S3[3][16]_INST_0 
       (.I(\S3[3]_OBUF [16]),
        .O(\S3[3] [16]));
  OBUF \S3[3][17]_INST_0 
       (.I(\S3[3]_OBUF [17]),
        .O(\S3[3] [17]));
  OBUF \S3[3][18]_INST_0 
       (.I(\S3[3]_OBUF [18]),
        .O(\S3[3] [18]));
  OBUF \S3[3][19]_INST_0 
       (.I(\S3[3]_OBUF [19]),
        .O(\S3[3] [19]));
  OBUF \S3[3][1]_INST_0 
       (.I(\S3[3]_OBUF [1]),
        .O(\S3[3] [1]));
  OBUF \S3[3][20]_INST_0 
       (.I(\S3[3]_OBUF [20]),
        .O(\S3[3] [20]));
  OBUF \S3[3][21]_INST_0 
       (.I(\S3[3]_OBUF [21]),
        .O(\S3[3] [21]));
  OBUF \S3[3][22]_INST_0 
       (.I(\S3[3]_OBUF [22]),
        .O(\S3[3] [22]));
  OBUF \S3[3][23]_INST_0 
       (.I(\S3[3]_OBUF [23]),
        .O(\S3[3] [23]));
  OBUF \S3[3][24]_INST_0 
       (.I(\S3[3]_OBUF [24]),
        .O(\S3[3] [24]));
  OBUF \S3[3][25]_INST_0 
       (.I(\S3[3]_OBUF [25]),
        .O(\S3[3] [25]));
  OBUF \S3[3][26]_INST_0 
       (.I(\S3[3]_OBUF [26]),
        .O(\S3[3] [26]));
  OBUF \S3[3][27]_INST_0 
       (.I(\S3[3]_OBUF [27]),
        .O(\S3[3] [27]));
  OBUF \S3[3][28]_INST_0 
       (.I(\S3[3]_OBUF [28]),
        .O(\S3[3] [28]));
  OBUF \S3[3][29]_INST_0 
       (.I(\S3[3]_OBUF [29]),
        .O(\S3[3] [29]));
  OBUF \S3[3][2]_INST_0 
       (.I(\S3[3]_OBUF [2]),
        .O(\S3[3] [2]));
  OBUF \S3[3][30]_INST_0 
       (.I(\S3[3]_OBUF [30]),
        .O(\S3[3] [30]));
  OBUF \S3[3][31]_INST_0 
       (.I(\S3[3]_OBUF [31]),
        .O(\S3[3] [31]));
  OBUF \S3[3][32]_INST_0 
       (.I(\S3[3]_OBUF [32]),
        .O(\S3[3] [32]));
  OBUF \S3[3][3]_INST_0 
       (.I(\S3[3]_OBUF [3]),
        .O(\S3[3] [3]));
  OBUF \S3[3][4]_INST_0 
       (.I(\S3[3]_OBUF [4]),
        .O(\S3[3] [4]));
  OBUF \S3[3][5]_INST_0 
       (.I(\S3[3]_OBUF [5]),
        .O(\S3[3] [5]));
  OBUF \S3[3][6]_INST_0 
       (.I(\S3[3]_OBUF [6]),
        .O(\S3[3] [6]));
  OBUF \S3[3][7]_INST_0 
       (.I(\S3[3]_OBUF [7]),
        .O(\S3[3] [7]));
  OBUF \S3[3][8]_INST_0 
       (.I(\S3[3]_OBUF [8]),
        .O(\S3[3] [8]));
  OBUF \S3[3][9]_INST_0 
       (.I(\S3[3]_OBUF [9]),
        .O(\S3[3] [9]));
  OBUF \S4[0][0]_INST_0 
       (.I(\S4[0]_OBUF [0]),
        .O(\S4[0] [0]));
  OBUF \S4[0][10]_INST_0 
       (.I(\S4[0]_OBUF [10]),
        .O(\S4[0] [10]));
  OBUF \S4[0][11]_INST_0 
       (.I(\S4[0]_OBUF [11]),
        .O(\S4[0] [11]));
  OBUF \S4[0][12]_INST_0 
       (.I(\S4[0]_OBUF [12]),
        .O(\S4[0] [12]));
  OBUF \S4[0][13]_INST_0 
       (.I(\S4[0]_OBUF [13]),
        .O(\S4[0] [13]));
  OBUF \S4[0][14]_INST_0 
       (.I(\S4[0]_OBUF [14]),
        .O(\S4[0] [14]));
  OBUF \S4[0][15]_INST_0 
       (.I(\S4[0]_OBUF [15]),
        .O(\S4[0] [15]));
  OBUF \S4[0][16]_INST_0 
       (.I(\S4[0]_OBUF [16]),
        .O(\S4[0] [16]));
  OBUF \S4[0][17]_INST_0 
       (.I(\S4[0]_OBUF [17]),
        .O(\S4[0] [17]));
  OBUF \S4[0][18]_INST_0 
       (.I(\S4[0]_OBUF [18]),
        .O(\S4[0] [18]));
  OBUF \S4[0][19]_INST_0 
       (.I(\S4[0]_OBUF [19]),
        .O(\S4[0] [19]));
  OBUF \S4[0][1]_INST_0 
       (.I(\S4[0]_OBUF [1]),
        .O(\S4[0] [1]));
  OBUF \S4[0][20]_INST_0 
       (.I(\S4[0]_OBUF [20]),
        .O(\S4[0] [20]));
  OBUF \S4[0][21]_INST_0 
       (.I(\S4[0]_OBUF [21]),
        .O(\S4[0] [21]));
  OBUF \S4[0][22]_INST_0 
       (.I(\S4[0]_OBUF [22]),
        .O(\S4[0] [22]));
  OBUF \S4[0][23]_INST_0 
       (.I(\S4[0]_OBUF [23]),
        .O(\S4[0] [23]));
  OBUF \S4[0][24]_INST_0 
       (.I(\S4[0]_OBUF [24]),
        .O(\S4[0] [24]));
  OBUF \S4[0][25]_INST_0 
       (.I(\S4[0]_OBUF [25]),
        .O(\S4[0] [25]));
  OBUF \S4[0][26]_INST_0 
       (.I(\S4[0]_OBUF [26]),
        .O(\S4[0] [26]));
  OBUF \S4[0][27]_INST_0 
       (.I(\S4[0]_OBUF [27]),
        .O(\S4[0] [27]));
  OBUF \S4[0][28]_INST_0 
       (.I(\S4[0]_OBUF [28]),
        .O(\S4[0] [28]));
  OBUF \S4[0][29]_INST_0 
       (.I(\S4[0]_OBUF [29]),
        .O(\S4[0] [29]));
  OBUF \S4[0][2]_INST_0 
       (.I(\S4[0]_OBUF [2]),
        .O(\S4[0] [2]));
  OBUF \S4[0][30]_INST_0 
       (.I(\S4[0]_OBUF [30]),
        .O(\S4[0] [30]));
  OBUF \S4[0][31]_INST_0 
       (.I(\S4[0]_OBUF [31]),
        .O(\S4[0] [31]));
  OBUF \S4[0][32]_INST_0 
       (.I(\S4[0]_OBUF [32]),
        .O(\S4[0] [32]));
  OBUF \S4[0][3]_INST_0 
       (.I(\S4[0]_OBUF [3]),
        .O(\S4[0] [3]));
  OBUF \S4[0][4]_INST_0 
       (.I(\S4[0]_OBUF [4]),
        .O(\S4[0] [4]));
  OBUF \S4[0][5]_INST_0 
       (.I(\S4[0]_OBUF [5]),
        .O(\S4[0] [5]));
  OBUF \S4[0][6]_INST_0 
       (.I(\S4[0]_OBUF [6]),
        .O(\S4[0] [6]));
  OBUF \S4[0][7]_INST_0 
       (.I(\S4[0]_OBUF [7]),
        .O(\S4[0] [7]));
  OBUF \S4[0][8]_INST_0 
       (.I(\S4[0]_OBUF [8]),
        .O(\S4[0] [8]));
  OBUF \S4[0][9]_INST_0 
       (.I(\S4[0]_OBUF [9]),
        .O(\S4[0] [9]));
  OBUF \S4[1][0]_INST_0 
       (.I(\S4[1]_OBUF [0]),
        .O(\S4[1] [0]));
  OBUF \S4[1][10]_INST_0 
       (.I(\S4[1]_OBUF [10]),
        .O(\S4[1] [10]));
  OBUF \S4[1][11]_INST_0 
       (.I(\S4[1]_OBUF [11]),
        .O(\S4[1] [11]));
  OBUF \S4[1][12]_INST_0 
       (.I(\S4[1]_OBUF [12]),
        .O(\S4[1] [12]));
  OBUF \S4[1][13]_INST_0 
       (.I(\S4[1]_OBUF [13]),
        .O(\S4[1] [13]));
  OBUF \S4[1][14]_INST_0 
       (.I(\S4[1]_OBUF [14]),
        .O(\S4[1] [14]));
  OBUF \S4[1][15]_INST_0 
       (.I(\S4[1]_OBUF [15]),
        .O(\S4[1] [15]));
  OBUF \S4[1][16]_INST_0 
       (.I(\S4[1]_OBUF [16]),
        .O(\S4[1] [16]));
  OBUF \S4[1][17]_INST_0 
       (.I(\S4[1]_OBUF [17]),
        .O(\S4[1] [17]));
  OBUF \S4[1][18]_INST_0 
       (.I(\S4[1]_OBUF [18]),
        .O(\S4[1] [18]));
  OBUF \S4[1][19]_INST_0 
       (.I(\S4[1]_OBUF [19]),
        .O(\S4[1] [19]));
  OBUF \S4[1][1]_INST_0 
       (.I(\S4[1]_OBUF [1]),
        .O(\S4[1] [1]));
  OBUF \S4[1][20]_INST_0 
       (.I(\S4[1]_OBUF [20]),
        .O(\S4[1] [20]));
  OBUF \S4[1][21]_INST_0 
       (.I(\S4[1]_OBUF [21]),
        .O(\S4[1] [21]));
  OBUF \S4[1][22]_INST_0 
       (.I(\S4[1]_OBUF [22]),
        .O(\S4[1] [22]));
  OBUF \S4[1][23]_INST_0 
       (.I(\S4[1]_OBUF [23]),
        .O(\S4[1] [23]));
  OBUF \S4[1][24]_INST_0 
       (.I(\S4[1]_OBUF [24]),
        .O(\S4[1] [24]));
  OBUF \S4[1][25]_INST_0 
       (.I(\S4[1]_OBUF [25]),
        .O(\S4[1] [25]));
  OBUF \S4[1][26]_INST_0 
       (.I(\S4[1]_OBUF [26]),
        .O(\S4[1] [26]));
  OBUF \S4[1][27]_INST_0 
       (.I(\S4[1]_OBUF [27]),
        .O(\S4[1] [27]));
  OBUF \S4[1][28]_INST_0 
       (.I(\S4[1]_OBUF [28]),
        .O(\S4[1] [28]));
  OBUF \S4[1][29]_INST_0 
       (.I(\S4[1]_OBUF [29]),
        .O(\S4[1] [29]));
  OBUF \S4[1][2]_INST_0 
       (.I(\S4[1]_OBUF [2]),
        .O(\S4[1] [2]));
  OBUF \S4[1][30]_INST_0 
       (.I(\S4[1]_OBUF [30]),
        .O(\S4[1] [30]));
  OBUF \S4[1][31]_INST_0 
       (.I(\S4[1]_OBUF [31]),
        .O(\S4[1] [31]));
  OBUF \S4[1][32]_INST_0 
       (.I(\S4[1]_OBUF [32]),
        .O(\S4[1] [32]));
  OBUF \S4[1][3]_INST_0 
       (.I(\S4[1]_OBUF [3]),
        .O(\S4[1] [3]));
  OBUF \S4[1][4]_INST_0 
       (.I(\S4[1]_OBUF [4]),
        .O(\S4[1] [4]));
  OBUF \S4[1][5]_INST_0 
       (.I(\S4[1]_OBUF [5]),
        .O(\S4[1] [5]));
  OBUF \S4[1][6]_INST_0 
       (.I(\S4[1]_OBUF [6]),
        .O(\S4[1] [6]));
  OBUF \S4[1][7]_INST_0 
       (.I(\S4[1]_OBUF [7]),
        .O(\S4[1] [7]));
  OBUF \S4[1][8]_INST_0 
       (.I(\S4[1]_OBUF [8]),
        .O(\S4[1] [8]));
  OBUF \S4[1][9]_INST_0 
       (.I(\S4[1]_OBUF [9]),
        .O(\S4[1] [9]));
  OBUF \S4[2][0]_INST_0 
       (.I(\S4[2]_OBUF [0]),
        .O(\S4[2] [0]));
  OBUF \S4[2][10]_INST_0 
       (.I(\S4[2]_OBUF [10]),
        .O(\S4[2] [10]));
  OBUF \S4[2][11]_INST_0 
       (.I(\S4[2]_OBUF [11]),
        .O(\S4[2] [11]));
  OBUF \S4[2][12]_INST_0 
       (.I(\S4[2]_OBUF [12]),
        .O(\S4[2] [12]));
  OBUF \S4[2][13]_INST_0 
       (.I(\S4[2]_OBUF [13]),
        .O(\S4[2] [13]));
  OBUF \S4[2][14]_INST_0 
       (.I(\S4[2]_OBUF [14]),
        .O(\S4[2] [14]));
  OBUF \S4[2][15]_INST_0 
       (.I(\S4[2]_OBUF [15]),
        .O(\S4[2] [15]));
  OBUF \S4[2][16]_INST_0 
       (.I(\S4[2]_OBUF [16]),
        .O(\S4[2] [16]));
  OBUF \S4[2][17]_INST_0 
       (.I(\S4[2]_OBUF [17]),
        .O(\S4[2] [17]));
  OBUF \S4[2][18]_INST_0 
       (.I(\S4[2]_OBUF [18]),
        .O(\S4[2] [18]));
  OBUF \S4[2][19]_INST_0 
       (.I(\S4[2]_OBUF [19]),
        .O(\S4[2] [19]));
  OBUF \S4[2][1]_INST_0 
       (.I(\S4[2]_OBUF [1]),
        .O(\S4[2] [1]));
  OBUF \S4[2][20]_INST_0 
       (.I(\S4[2]_OBUF [20]),
        .O(\S4[2] [20]));
  OBUF \S4[2][21]_INST_0 
       (.I(\S4[2]_OBUF [21]),
        .O(\S4[2] [21]));
  OBUF \S4[2][22]_INST_0 
       (.I(\S4[2]_OBUF [22]),
        .O(\S4[2] [22]));
  OBUF \S4[2][23]_INST_0 
       (.I(\S4[2]_OBUF [23]),
        .O(\S4[2] [23]));
  OBUF \S4[2][24]_INST_0 
       (.I(\S4[2]_OBUF [24]),
        .O(\S4[2] [24]));
  OBUF \S4[2][25]_INST_0 
       (.I(\S4[2]_OBUF [25]),
        .O(\S4[2] [25]));
  OBUF \S4[2][26]_INST_0 
       (.I(\S4[2]_OBUF [26]),
        .O(\S4[2] [26]));
  OBUF \S4[2][27]_INST_0 
       (.I(\S4[2]_OBUF [27]),
        .O(\S4[2] [27]));
  OBUF \S4[2][28]_INST_0 
       (.I(\S4[2]_OBUF [28]),
        .O(\S4[2] [28]));
  OBUF \S4[2][29]_INST_0 
       (.I(\S4[2]_OBUF [29]),
        .O(\S4[2] [29]));
  OBUF \S4[2][2]_INST_0 
       (.I(\S4[2]_OBUF [2]),
        .O(\S4[2] [2]));
  OBUF \S4[2][30]_INST_0 
       (.I(\S4[2]_OBUF [30]),
        .O(\S4[2] [30]));
  OBUF \S4[2][31]_INST_0 
       (.I(\S4[2]_OBUF [31]),
        .O(\S4[2] [31]));
  OBUF \S4[2][32]_INST_0 
       (.I(\S4[2]_OBUF [32]),
        .O(\S4[2] [32]));
  OBUF \S4[2][3]_INST_0 
       (.I(\S4[2]_OBUF [3]),
        .O(\S4[2] [3]));
  OBUF \S4[2][4]_INST_0 
       (.I(\S4[2]_OBUF [4]),
        .O(\S4[2] [4]));
  OBUF \S4[2][5]_INST_0 
       (.I(\S4[2]_OBUF [5]),
        .O(\S4[2] [5]));
  OBUF \S4[2][6]_INST_0 
       (.I(\S4[2]_OBUF [6]),
        .O(\S4[2] [6]));
  OBUF \S4[2][7]_INST_0 
       (.I(\S4[2]_OBUF [7]),
        .O(\S4[2] [7]));
  OBUF \S4[2][8]_INST_0 
       (.I(\S4[2]_OBUF [8]),
        .O(\S4[2] [8]));
  OBUF \S4[2][9]_INST_0 
       (.I(\S4[2]_OBUF [9]),
        .O(\S4[2] [9]));
  OBUF \S4[3][0]_INST_0 
       (.I(\S4[3]_OBUF [0]),
        .O(\S4[3] [0]));
  OBUF \S4[3][10]_INST_0 
       (.I(\S4[3]_OBUF [10]),
        .O(\S4[3] [10]));
  OBUF \S4[3][11]_INST_0 
       (.I(\S4[3]_OBUF [11]),
        .O(\S4[3] [11]));
  OBUF \S4[3][12]_INST_0 
       (.I(\S4[3]_OBUF [12]),
        .O(\S4[3] [12]));
  OBUF \S4[3][13]_INST_0 
       (.I(\S4[3]_OBUF [13]),
        .O(\S4[3] [13]));
  OBUF \S4[3][14]_INST_0 
       (.I(\S4[3]_OBUF [14]),
        .O(\S4[3] [14]));
  OBUF \S4[3][15]_INST_0 
       (.I(\S4[3]_OBUF [15]),
        .O(\S4[3] [15]));
  OBUF \S4[3][16]_INST_0 
       (.I(\S4[3]_OBUF [16]),
        .O(\S4[3] [16]));
  OBUF \S4[3][17]_INST_0 
       (.I(\S4[3]_OBUF [17]),
        .O(\S4[3] [17]));
  OBUF \S4[3][18]_INST_0 
       (.I(\S4[3]_OBUF [18]),
        .O(\S4[3] [18]));
  OBUF \S4[3][19]_INST_0 
       (.I(\S4[3]_OBUF [19]),
        .O(\S4[3] [19]));
  OBUF \S4[3][1]_INST_0 
       (.I(\S4[3]_OBUF [1]),
        .O(\S4[3] [1]));
  OBUF \S4[3][20]_INST_0 
       (.I(\S4[3]_OBUF [20]),
        .O(\S4[3] [20]));
  OBUF \S4[3][21]_INST_0 
       (.I(\S4[3]_OBUF [21]),
        .O(\S4[3] [21]));
  OBUF \S4[3][22]_INST_0 
       (.I(\S4[3]_OBUF [22]),
        .O(\S4[3] [22]));
  OBUF \S4[3][23]_INST_0 
       (.I(\S4[3]_OBUF [23]),
        .O(\S4[3] [23]));
  OBUF \S4[3][24]_INST_0 
       (.I(\S4[3]_OBUF [24]),
        .O(\S4[3] [24]));
  OBUF \S4[3][25]_INST_0 
       (.I(\S4[3]_OBUF [25]),
        .O(\S4[3] [25]));
  OBUF \S4[3][26]_INST_0 
       (.I(\S4[3]_OBUF [26]),
        .O(\S4[3] [26]));
  OBUF \S4[3][27]_INST_0 
       (.I(\S4[3]_OBUF [27]),
        .O(\S4[3] [27]));
  OBUF \S4[3][28]_INST_0 
       (.I(\S4[3]_OBUF [28]),
        .O(\S4[3] [28]));
  OBUF \S4[3][29]_INST_0 
       (.I(\S4[3]_OBUF [29]),
        .O(\S4[3] [29]));
  OBUF \S4[3][2]_INST_0 
       (.I(\S4[3]_OBUF [2]),
        .O(\S4[3] [2]));
  OBUF \S4[3][30]_INST_0 
       (.I(\S4[3]_OBUF [30]),
        .O(\S4[3] [30]));
  OBUF \S4[3][31]_INST_0 
       (.I(\S4[3]_OBUF [31]),
        .O(\S4[3] [31]));
  OBUF \S4[3][32]_INST_0 
       (.I(\S4[3]_OBUF [32]),
        .O(\S4[3] [32]));
  OBUF \S4[3][3]_INST_0 
       (.I(\S4[3]_OBUF [3]),
        .O(\S4[3] [3]));
  OBUF \S4[3][4]_INST_0 
       (.I(\S4[3]_OBUF [4]),
        .O(\S4[3] [4]));
  OBUF \S4[3][5]_INST_0 
       (.I(\S4[3]_OBUF [5]),
        .O(\S4[3] [5]));
  OBUF \S4[3][6]_INST_0 
       (.I(\S4[3]_OBUF [6]),
        .O(\S4[3] [6]));
  OBUF \S4[3][7]_INST_0 
       (.I(\S4[3]_OBUF [7]),
        .O(\S4[3] [7]));
  OBUF \S4[3][8]_INST_0 
       (.I(\S4[3]_OBUF [8]),
        .O(\S4[3] [8]));
  OBUF \S4[3][9]_INST_0 
       (.I(\S4[3]_OBUF [9]),
        .O(\S4[3] [9]));
  OBUF cestat_OBUF_inst
       (.I(cestat_OBUF),
        .O(cestat));
  OBUF done_OBUF_inst
       (.I(done_OBUF),
        .O(done));
  dual_port_ram \generate_BRAM_module1[0].bram_instance 
       (.ACC_reg(\generate_BRAM_module1[0].bram_instance_n_0 ),
        .ACC_reg_0(\generate_BRAM_module1[0].bram_instance_n_17 ),
        .ACC_reg_1(\generate_BRAM_module1[0].bram_instance_n_18 ),
        .ACC_reg_10(\generate_BRAM_module1[0].bram_instance_n_27 ),
        .ACC_reg_11(\generate_BRAM_module1[0].bram_instance_n_28 ),
        .ACC_reg_12(\generate_BRAM_module1[0].bram_instance_n_29 ),
        .ACC_reg_13(\generate_BRAM_module1[0].bram_instance_n_30 ),
        .ACC_reg_14(\generate_BRAM_module1[0].bram_instance_n_31 ),
        .ACC_reg_2(\generate_BRAM_module1[0].bram_instance_n_19 ),
        .ACC_reg_3(\generate_BRAM_module1[0].bram_instance_n_20 ),
        .ACC_reg_4(\generate_BRAM_module1[0].bram_instance_n_21 ),
        .ACC_reg_5(\generate_BRAM_module1[0].bram_instance_n_22 ),
        .ACC_reg_6(\generate_BRAM_module1[0].bram_instance_n_23 ),
        .ACC_reg_7(\generate_BRAM_module1[0].bram_instance_n_24 ),
        .ACC_reg_8(\generate_BRAM_module1[0].bram_instance_n_25 ),
        .ACC_reg_9(\generate_BRAM_module1[0].bram_instance_n_26 ),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_0({\write_count_reg[3]_rep_n_0 ,\write_count_reg[2]_rep_n_0 ,\write_count_reg[1]_rep_n_0 ,\write_count_reg[0]_rep_n_0 }),
        .addr_in_1({\mul_count_reg[3]_rep_n_0 ,\mul_count_reg[2]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r1[0]_OBUF ),
        .\mul_count_reg[0]_rep (\mul_count_reg[0]_rep_n_0 ),
        .\mul_count_reg[1]_rep__0 (\mul_count_reg[1]_rep__0_n_0 ),
        .\mul_count_reg[2]_rep (\mul_count_reg[2]_rep_n_0 ),
        .\mul_count_reg[3]_rep__0 (\mul_count_reg[3]_rep__0_n_0 ),
        .read(read_OBUF[1]),
        .wr_en(wr_en),
        .\wv1[0] ({ram_reg_0_15_15_15_i_1__2_n_0,ram_reg_0_15_14_14_i_1__2_n_0,ram_reg_0_15_13_13_i_1__2_n_0,ram_reg_0_15_12_12_i_1__2_n_0,ram_reg_0_15_11_11_i_1__2_n_0,ram_reg_0_15_10_10_i_1__2_n_0,ram_reg_0_15_9_9_i_1__2_n_0,ram_reg_0_15_8_8_i_1__2_n_0,ram_reg_0_15_7_7_i_1__2_n_0,ram_reg_0_15_6_6_i_1__2_n_0,ram_reg_0_15_5_5_i_1__2_n_0,ram_reg_0_15_4_4_i_1__2_n_0,ram_reg_0_15_3_3_i_1__2_n_0,ram_reg_0_15_2_2_i_1__2_n_0,ram_reg_0_15_1_1_i_1__2_n_0,ram_reg_0_15_0_0_i_1__2_n_0}));
  dual_port_ram_0 \generate_BRAM_module1[1].bram_instance 
       (.ACC_reg(\generate_BRAM_module1[1].bram_instance_n_0 ),
        .ACC_reg_0(\generate_BRAM_module1[1].bram_instance_n_17 ),
        .ACC_reg_1(\generate_BRAM_module1[1].bram_instance_n_18 ),
        .ACC_reg_10(\generate_BRAM_module1[1].bram_instance_n_27 ),
        .ACC_reg_11(\generate_BRAM_module1[1].bram_instance_n_28 ),
        .ACC_reg_12(\generate_BRAM_module1[1].bram_instance_n_29 ),
        .ACC_reg_13(\generate_BRAM_module1[1].bram_instance_n_30 ),
        .ACC_reg_14(\generate_BRAM_module1[1].bram_instance_n_31 ),
        .ACC_reg_2(\generate_BRAM_module1[1].bram_instance_n_19 ),
        .ACC_reg_3(\generate_BRAM_module1[1].bram_instance_n_20 ),
        .ACC_reg_4(\generate_BRAM_module1[1].bram_instance_n_21 ),
        .ACC_reg_5(\generate_BRAM_module1[1].bram_instance_n_22 ),
        .ACC_reg_6(\generate_BRAM_module1[1].bram_instance_n_23 ),
        .ACC_reg_7(\generate_BRAM_module1[1].bram_instance_n_24 ),
        .ACC_reg_8(\generate_BRAM_module1[1].bram_instance_n_25 ),
        .ACC_reg_9(\generate_BRAM_module1[1].bram_instance_n_26 ),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r1[1]_OBUF ),
        .out({\write_count_reg_n_0_[3] ,\write_count_reg_n_0_[2] ,\write_count_reg_n_0_[1] ,\write_count_reg_n_0_[0] }),
        .read(read_OBUF[3:0]),
        .wr_en(wr_en),
        .\wv1[1] ({ram_reg_0_15_15_15_i_1__1_n_0,ram_reg_0_15_14_14_i_1__1_n_0,ram_reg_0_15_13_13_i_1__1_n_0,ram_reg_0_15_12_12_i_1__1_n_0,ram_reg_0_15_11_11_i_1__1_n_0,ram_reg_0_15_10_10_i_1__1_n_0,ram_reg_0_15_9_9_i_1__1_n_0,ram_reg_0_15_8_8_i_1__1_n_0,ram_reg_0_15_7_7_i_1__1_n_0,ram_reg_0_15_6_6_i_1__1_n_0,ram_reg_0_15_5_5_i_1__1_n_0,ram_reg_0_15_4_4_i_1__1_n_0,ram_reg_0_15_3_3_i_1__1_n_0,ram_reg_0_15_2_2_i_1__1_n_0,ram_reg_0_15_1_1_i_1__1_n_0,ram_reg_0_15_0_0_i_1__1_n_0}));
  dual_port_ram_1 \generate_BRAM_module1[2].bram_instance 
       (.ACC_reg(\generate_BRAM_module1[2].bram_instance_n_0 ),
        .ACC_reg_0(\generate_BRAM_module1[2].bram_instance_n_17 ),
        .ACC_reg_1(\generate_BRAM_module1[2].bram_instance_n_18 ),
        .ACC_reg_10(\generate_BRAM_module1[2].bram_instance_n_27 ),
        .ACC_reg_11(\generate_BRAM_module1[2].bram_instance_n_28 ),
        .ACC_reg_12(\generate_BRAM_module1[2].bram_instance_n_29 ),
        .ACC_reg_13(\generate_BRAM_module1[2].bram_instance_n_30 ),
        .ACC_reg_14(\generate_BRAM_module1[2].bram_instance_n_31 ),
        .ACC_reg_2(\generate_BRAM_module1[2].bram_instance_n_19 ),
        .ACC_reg_3(\generate_BRAM_module1[2].bram_instance_n_20 ),
        .ACC_reg_4(\generate_BRAM_module1[2].bram_instance_n_21 ),
        .ACC_reg_5(\generate_BRAM_module1[2].bram_instance_n_22 ),
        .ACC_reg_6(\generate_BRAM_module1[2].bram_instance_n_23 ),
        .ACC_reg_7(\generate_BRAM_module1[2].bram_instance_n_24 ),
        .ACC_reg_8(\generate_BRAM_module1[2].bram_instance_n_25 ),
        .ACC_reg_9(\generate_BRAM_module1[2].bram_instance_n_26 ),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_0({\write_count_reg[3]_rep_n_0 ,\write_count_reg[2]_rep_n_0 ,\write_count_reg[1]_rep_n_0 ,\write_count_reg[0]_rep_n_0 }),
        .addr_in_1({\mul_count_reg[3]_rep__0_n_0 ,\mul_count_reg[2]_rep_n_0 ,\mul_count_reg[1]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r1[2]_OBUF ),
        .\mul_count_reg[0]_rep (\mul_count_reg[0]_rep_n_0 ),
        .wr_en(wr_en),
        .\wv1[2] ({ram_reg_0_15_15_15_i_1__0_n_0,ram_reg_0_15_14_14_i_1__0_n_0,ram_reg_0_15_13_13_i_1__0_n_0,ram_reg_0_15_12_12_i_1__0_n_0,ram_reg_0_15_11_11_i_1__0_n_0,ram_reg_0_15_10_10_i_1__0_n_0,ram_reg_0_15_9_9_i_1__0_n_0,ram_reg_0_15_8_8_i_1__0_n_0,ram_reg_0_15_7_7_i_1__0_n_0,ram_reg_0_15_6_6_i_1__0_n_0,ram_reg_0_15_5_5_i_1__0_n_0,ram_reg_0_15_4_4_i_1__0_n_0,ram_reg_0_15_3_3_i_1__0_n_0,ram_reg_0_15_2_2_i_1__0_n_0,ram_reg_0_15_1_1_i_1__0_n_0,ram_reg_0_15_0_0_i_1__0_n_0}));
  dual_port_ram_2 \generate_BRAM_module1[3].bram_instance 
       (.ACC_reg(\generate_BRAM_module1[3].bram_instance_n_0 ),
        .ACC_reg_0(\generate_BRAM_module1[3].bram_instance_n_17 ),
        .ACC_reg_1(\generate_BRAM_module1[3].bram_instance_n_18 ),
        .ACC_reg_10(\generate_BRAM_module1[3].bram_instance_n_27 ),
        .ACC_reg_11(\generate_BRAM_module1[3].bram_instance_n_28 ),
        .ACC_reg_12(\generate_BRAM_module1[3].bram_instance_n_29 ),
        .ACC_reg_13(\generate_BRAM_module1[3].bram_instance_n_30 ),
        .ACC_reg_14(\generate_BRAM_module1[3].bram_instance_n_31 ),
        .ACC_reg_2(\generate_BRAM_module1[3].bram_instance_n_19 ),
        .ACC_reg_3(\generate_BRAM_module1[3].bram_instance_n_20 ),
        .ACC_reg_4(\generate_BRAM_module1[3].bram_instance_n_21 ),
        .ACC_reg_5(\generate_BRAM_module1[3].bram_instance_n_22 ),
        .ACC_reg_6(\generate_BRAM_module1[3].bram_instance_n_23 ),
        .ACC_reg_7(\generate_BRAM_module1[3].bram_instance_n_24 ),
        .ACC_reg_8(\generate_BRAM_module1[3].bram_instance_n_25 ),
        .ACC_reg_9(\generate_BRAM_module1[3].bram_instance_n_26 ),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_1(\mul_count_reg[3]_rep_n_0 ),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r1[3]_OBUF ),
        .out({\write_count_reg_n_0_[3] ,\write_count_reg_n_0_[2] ,\write_count_reg_n_0_[1] ,\write_count_reg_n_0_[0] }),
        .read(read_OBUF[2:0]),
        .wr_en(wr_en),
        .\wv1[3] ({ram_reg_0_15_15_15_i_1_n_0,ram_reg_0_15_14_14_i_1_n_0,ram_reg_0_15_13_13_i_1_n_0,ram_reg_0_15_12_12_i_1_n_0,ram_reg_0_15_11_11_i_1_n_0,ram_reg_0_15_10_10_i_1_n_0,ram_reg_0_15_9_9_i_1_n_0,ram_reg_0_15_8_8_i_1_n_0,ram_reg_0_15_7_7_i_1_n_0,ram_reg_0_15_6_6_i_1_n_0,ram_reg_0_15_5_5_i_1_n_0,ram_reg_0_15_4_4_i_1_n_0,ram_reg_0_15_3_3_i_1_n_0,ram_reg_0_15_2_2_i_1_n_0,ram_reg_0_15_1_1_i_1_n_0,ram_reg_0_15_0_0_i_1_n_0}));
  dual_port_ram_3 \generate_BRAM_module2[0].bram_instance 
       (.ACC_reg(\generate_BRAM_module2[0].bram_instance_n_0 ),
        .ACC_reg_0(\generate_BRAM_module2[0].bram_instance_n_17 ),
        .ACC_reg_1(\generate_BRAM_module2[0].bram_instance_n_18 ),
        .ACC_reg_10(\generate_BRAM_module2[0].bram_instance_n_27 ),
        .ACC_reg_11(\generate_BRAM_module2[0].bram_instance_n_28 ),
        .ACC_reg_12(\generate_BRAM_module2[0].bram_instance_n_29 ),
        .ACC_reg_13(\generate_BRAM_module2[0].bram_instance_n_30 ),
        .ACC_reg_14(\generate_BRAM_module2[0].bram_instance_n_31 ),
        .ACC_reg_2(\generate_BRAM_module2[0].bram_instance_n_19 ),
        .ACC_reg_3(\generate_BRAM_module2[0].bram_instance_n_20 ),
        .ACC_reg_4(\generate_BRAM_module2[0].bram_instance_n_21 ),
        .ACC_reg_5(\generate_BRAM_module2[0].bram_instance_n_22 ),
        .ACC_reg_6(\generate_BRAM_module2[0].bram_instance_n_23 ),
        .ACC_reg_7(\generate_BRAM_module2[0].bram_instance_n_24 ),
        .ACC_reg_8(\generate_BRAM_module2[0].bram_instance_n_25 ),
        .ACC_reg_9(\generate_BRAM_module2[0].bram_instance_n_26 ),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_0({\write_count_reg[3]_rep_n_0 ,\write_count_reg[2]_rep_n_0 ,\write_count_reg[1]_rep_n_0 ,\write_count_reg[0]_rep_n_0 }),
        .addr_in_1({\mul_count_reg[3]_rep__0_n_0 ,\mul_count_reg[2]_rep_n_0 ,\mul_count_reg[1]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r2[0]_OBUF ),
        .\mul_count_reg[0]_rep (\mul_count_reg[0]_rep_n_0 ),
        .wr_en(wr_en),
        .\wv2[0] ({ram_reg_0_15_15_15_i_1__6_n_0,ram_reg_0_15_14_14_i_1__6_n_0,ram_reg_0_15_13_13_i_1__6_n_0,ram_reg_0_15_12_12_i_1__6_n_0,ram_reg_0_15_11_11_i_1__6_n_0,ram_reg_0_15_10_10_i_1__6_n_0,ram_reg_0_15_9_9_i_1__6_n_0,ram_reg_0_15_8_8_i_1__6_n_0,ram_reg_0_15_7_7_i_1__6_n_0,ram_reg_0_15_6_6_i_1__6_n_0,ram_reg_0_15_5_5_i_1__6_n_0,ram_reg_0_15_4_4_i_1__6_n_0,ram_reg_0_15_3_3_i_1__6_n_0,ram_reg_0_15_2_2_i_1__6_n_0,ram_reg_0_15_1_1_i_1__6_n_0,ram_reg_0_15_0_0_i_1__6_n_0}));
  dual_port_ram_4 \generate_BRAM_module2[1].bram_instance 
       (.ACC_reg(\generate_BRAM_module2[1].bram_instance_n_0 ),
        .ACC_reg_0(\generate_BRAM_module2[1].bram_instance_n_17 ),
        .ACC_reg_1(\generate_BRAM_module2[1].bram_instance_n_18 ),
        .ACC_reg_10(\generate_BRAM_module2[1].bram_instance_n_27 ),
        .ACC_reg_11(\generate_BRAM_module2[1].bram_instance_n_28 ),
        .ACC_reg_12(\generate_BRAM_module2[1].bram_instance_n_29 ),
        .ACC_reg_13(\generate_BRAM_module2[1].bram_instance_n_30 ),
        .ACC_reg_14(\generate_BRAM_module2[1].bram_instance_n_31 ),
        .ACC_reg_2(\generate_BRAM_module2[1].bram_instance_n_19 ),
        .ACC_reg_3(\generate_BRAM_module2[1].bram_instance_n_20 ),
        .ACC_reg_4(\generate_BRAM_module2[1].bram_instance_n_21 ),
        .ACC_reg_5(\generate_BRAM_module2[1].bram_instance_n_22 ),
        .ACC_reg_6(\generate_BRAM_module2[1].bram_instance_n_23 ),
        .ACC_reg_7(\generate_BRAM_module2[1].bram_instance_n_24 ),
        .ACC_reg_8(\generate_BRAM_module2[1].bram_instance_n_25 ),
        .ACC_reg_9(\generate_BRAM_module2[1].bram_instance_n_26 ),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r2[1]_OBUF ),
        .out({\write_count_reg_n_0_[3] ,\write_count_reg_n_0_[2] ,\write_count_reg_n_0_[1] ,\write_count_reg_n_0_[0] }),
        .read(read_OBUF[3:0]),
        .wr_en(wr_en),
        .\wv2[1] ({ram_reg_0_15_15_15_i_1__5_n_0,ram_reg_0_15_14_14_i_1__5_n_0,ram_reg_0_15_13_13_i_1__5_n_0,ram_reg_0_15_12_12_i_1__5_n_0,ram_reg_0_15_11_11_i_1__5_n_0,ram_reg_0_15_10_10_i_1__5_n_0,ram_reg_0_15_9_9_i_1__5_n_0,ram_reg_0_15_8_8_i_1__5_n_0,ram_reg_0_15_7_7_i_1__5_n_0,ram_reg_0_15_6_6_i_1__5_n_0,ram_reg_0_15_5_5_i_1__5_n_0,ram_reg_0_15_4_4_i_1__5_n_0,ram_reg_0_15_3_3_i_1__5_n_0,ram_reg_0_15_2_2_i_1__5_n_0,ram_reg_0_15_1_1_i_1__5_n_0,ram_reg_0_15_0_0_i_1__5_n_0}));
  dual_port_ram_5 \generate_BRAM_module2[2].bram_instance 
       (.ACC_reg(\generate_BRAM_module2[2].bram_instance_n_0 ),
        .ACC_reg_0(\generate_BRAM_module2[2].bram_instance_n_17 ),
        .ACC_reg_1(\generate_BRAM_module2[2].bram_instance_n_18 ),
        .ACC_reg_10(\generate_BRAM_module2[2].bram_instance_n_27 ),
        .ACC_reg_11(\generate_BRAM_module2[2].bram_instance_n_28 ),
        .ACC_reg_12(\generate_BRAM_module2[2].bram_instance_n_29 ),
        .ACC_reg_13(\generate_BRAM_module2[2].bram_instance_n_30 ),
        .ACC_reg_14(\generate_BRAM_module2[2].bram_instance_n_31 ),
        .ACC_reg_2(\generate_BRAM_module2[2].bram_instance_n_19 ),
        .ACC_reg_3(\generate_BRAM_module2[2].bram_instance_n_20 ),
        .ACC_reg_4(\generate_BRAM_module2[2].bram_instance_n_21 ),
        .ACC_reg_5(\generate_BRAM_module2[2].bram_instance_n_22 ),
        .ACC_reg_6(\generate_BRAM_module2[2].bram_instance_n_23 ),
        .ACC_reg_7(\generate_BRAM_module2[2].bram_instance_n_24 ),
        .ACC_reg_8(\generate_BRAM_module2[2].bram_instance_n_25 ),
        .ACC_reg_9(\generate_BRAM_module2[2].bram_instance_n_26 ),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_0({\write_count_reg[3]_rep_n_0 ,\write_count_reg[2]_rep_n_0 ,\write_count_reg[1]_rep_n_0 ,\write_count_reg[0]_rep_n_0 }),
        .addr_in_1({\mul_count_reg[3]_rep__0_n_0 ,\mul_count_reg[2]_rep_n_0 ,\mul_count_reg[1]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r2[2]_OBUF ),
        .\mul_count_reg[0]_rep (\mul_count_reg[0]_rep_n_0 ),
        .wr_en(wr_en),
        .\wv2[2] ({ram_reg_0_15_15_15_i_1__4_n_0,ram_reg_0_15_14_14_i_1__4_n_0,ram_reg_0_15_13_13_i_1__4_n_0,ram_reg_0_15_12_12_i_1__4_n_0,ram_reg_0_15_11_11_i_1__4_n_0,ram_reg_0_15_10_10_i_1__4_n_0,ram_reg_0_15_9_9_i_1__4_n_0,ram_reg_0_15_8_8_i_1__4_n_0,ram_reg_0_15_7_7_i_1__4_n_0,ram_reg_0_15_6_6_i_1__4_n_0,ram_reg_0_15_5_5_i_1__4_n_0,ram_reg_0_15_4_4_i_1__4_n_0,ram_reg_0_15_3_3_i_1__4_n_0,ram_reg_0_15_2_2_i_1__4_n_0,ram_reg_0_15_1_1_i_1__4_n_0,ram_reg_0_15_0_0_i_1__4_n_0}));
  dual_port_ram_6 \generate_BRAM_module2[3].bram_instance 
       (.ACC_reg(\generate_BRAM_module2[3].bram_instance_n_0 ),
        .ACC_reg_0(\generate_BRAM_module2[3].bram_instance_n_17 ),
        .ACC_reg_1(\generate_BRAM_module2[3].bram_instance_n_18 ),
        .ACC_reg_10(\generate_BRAM_module2[3].bram_instance_n_27 ),
        .ACC_reg_11(\generate_BRAM_module2[3].bram_instance_n_28 ),
        .ACC_reg_12(\generate_BRAM_module2[3].bram_instance_n_29 ),
        .ACC_reg_13(\generate_BRAM_module2[3].bram_instance_n_30 ),
        .ACC_reg_14(\generate_BRAM_module2[3].bram_instance_n_31 ),
        .ACC_reg_2(\generate_BRAM_module2[3].bram_instance_n_19 ),
        .ACC_reg_3(\generate_BRAM_module2[3].bram_instance_n_20 ),
        .ACC_reg_4(\generate_BRAM_module2[3].bram_instance_n_21 ),
        .ACC_reg_5(\generate_BRAM_module2[3].bram_instance_n_22 ),
        .ACC_reg_6(\generate_BRAM_module2[3].bram_instance_n_23 ),
        .ACC_reg_7(\generate_BRAM_module2[3].bram_instance_n_24 ),
        .ACC_reg_8(\generate_BRAM_module2[3].bram_instance_n_25 ),
        .ACC_reg_9(\generate_BRAM_module2[3].bram_instance_n_26 ),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_1(\mul_count_reg[3]_rep_n_0 ),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r2[3]_OBUF ),
        .out({\write_count_reg_n_0_[3] ,\write_count_reg_n_0_[2] ,\write_count_reg_n_0_[1] ,\write_count_reg_n_0_[0] }),
        .read(read_OBUF[2:0]),
        .wr_en(wr_en),
        .\wv2[3] ({ram_reg_0_15_15_15_i_1__3_n_0,ram_reg_0_15_14_14_i_1__3_n_0,ram_reg_0_15_13_13_i_1__3_n_0,ram_reg_0_15_12_12_i_1__3_n_0,ram_reg_0_15_11_11_i_1__3_n_0,ram_reg_0_15_10_10_i_1__3_n_0,ram_reg_0_15_9_9_i_1__3_n_0,ram_reg_0_15_8_8_i_1__3_n_0,ram_reg_0_15_7_7_i_1__3_n_0,ram_reg_0_15_6_6_i_1__3_n_0,ram_reg_0_15_5_5_i_1__3_n_0,ram_reg_0_15_4_4_i_1__3_n_0,ram_reg_0_15_3_3_i_1__3_n_0,ram_reg_0_15_2_2_i_1__3_n_0,ram_reg_0_15_1_1_i_1__3_n_0,ram_reg_0_15_0_0_i_1__3_n_0}));
  dual_port_ram_7 \generate_BRAM_module3[0].bram_instance 
       (.CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .MULTR0(\generate_BRAM_module3[0].bram_instance_n_0 ),
        .MULTR0_0(\generate_BRAM_module3[0].bram_instance_n_17 ),
        .MULTR0_1(\generate_BRAM_module3[0].bram_instance_n_18 ),
        .MULTR0_10(\generate_BRAM_module3[0].bram_instance_n_27 ),
        .MULTR0_11(\generate_BRAM_module3[0].bram_instance_n_28 ),
        .MULTR0_12(\generate_BRAM_module3[0].bram_instance_n_29 ),
        .MULTR0_13(\generate_BRAM_module3[0].bram_instance_n_30 ),
        .MULTR0_14(\generate_BRAM_module3[0].bram_instance_n_31 ),
        .MULTR0_2(\generate_BRAM_module3[0].bram_instance_n_19 ),
        .MULTR0_3(\generate_BRAM_module3[0].bram_instance_n_20 ),
        .MULTR0_4(\generate_BRAM_module3[0].bram_instance_n_21 ),
        .MULTR0_5(\generate_BRAM_module3[0].bram_instance_n_22 ),
        .MULTR0_6(\generate_BRAM_module3[0].bram_instance_n_23 ),
        .MULTR0_7(\generate_BRAM_module3[0].bram_instance_n_24 ),
        .MULTR0_8(\generate_BRAM_module3[0].bram_instance_n_25 ),
        .MULTR0_9(\generate_BRAM_module3[0].bram_instance_n_26 ),
        .addr_in_0({\write_count_reg[3]_rep_n_0 ,\write_count_reg[2]_rep_n_0 ,\write_count_reg[1]_rep_n_0 ,\write_count_reg[0]_rep_n_0 }),
        .addr_in_1({\mul_count_reg[3]_rep__0_n_0 ,\mul_count_reg[2]_rep_n_0 ,\mul_count_reg[1]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r3[0]_OBUF ),
        .\mul_count_reg[0]_rep (\mul_count_reg[0]_rep_n_0 ),
        .wr_en(wr_en),
        .\wv3[0] ({ram_reg_0_15_15_15_i_1__10_n_0,ram_reg_0_15_14_14_i_1__10_n_0,ram_reg_0_15_13_13_i_1__10_n_0,ram_reg_0_15_12_12_i_1__10_n_0,ram_reg_0_15_11_11_i_1__10_n_0,ram_reg_0_15_10_10_i_1__10_n_0,ram_reg_0_15_9_9_i_1__10_n_0,ram_reg_0_15_8_8_i_1__10_n_0,ram_reg_0_15_7_7_i_1__10_n_0,ram_reg_0_15_6_6_i_1__10_n_0,ram_reg_0_15_5_5_i_1__10_n_0,ram_reg_0_15_4_4_i_1__10_n_0,ram_reg_0_15_3_3_i_1__10_n_0,ram_reg_0_15_2_2_i_1__10_n_0,ram_reg_0_15_1_1_i_1__10_n_0,ram_reg_0_15_0_0_i_1__10_n_0}));
  dual_port_ram_8 \generate_BRAM_module3[1].bram_instance 
       (.CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .MULTR0(\generate_BRAM_module3[1].bram_instance_n_0 ),
        .MULTR0_0(\generate_BRAM_module3[1].bram_instance_n_17 ),
        .MULTR0_1(\generate_BRAM_module3[1].bram_instance_n_18 ),
        .MULTR0_10(\generate_BRAM_module3[1].bram_instance_n_27 ),
        .MULTR0_11(\generate_BRAM_module3[1].bram_instance_n_28 ),
        .MULTR0_12(\generate_BRAM_module3[1].bram_instance_n_29 ),
        .MULTR0_13(\generate_BRAM_module3[1].bram_instance_n_30 ),
        .MULTR0_14(\generate_BRAM_module3[1].bram_instance_n_31 ),
        .MULTR0_2(\generate_BRAM_module3[1].bram_instance_n_19 ),
        .MULTR0_3(\generate_BRAM_module3[1].bram_instance_n_20 ),
        .MULTR0_4(\generate_BRAM_module3[1].bram_instance_n_21 ),
        .MULTR0_5(\generate_BRAM_module3[1].bram_instance_n_22 ),
        .MULTR0_6(\generate_BRAM_module3[1].bram_instance_n_23 ),
        .MULTR0_7(\generate_BRAM_module3[1].bram_instance_n_24 ),
        .MULTR0_8(\generate_BRAM_module3[1].bram_instance_n_25 ),
        .MULTR0_9(\generate_BRAM_module3[1].bram_instance_n_26 ),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r3[1]_OBUF ),
        .out({\write_count_reg_n_0_[3] ,\write_count_reg_n_0_[2] ,\write_count_reg_n_0_[1] ,\write_count_reg_n_0_[0] }),
        .read(read_OBUF[3:0]),
        .wr_en(wr_en),
        .\wv3[1] ({ram_reg_0_15_15_15_i_1__9_n_0,ram_reg_0_15_14_14_i_1__9_n_0,ram_reg_0_15_13_13_i_1__9_n_0,ram_reg_0_15_12_12_i_1__9_n_0,ram_reg_0_15_11_11_i_1__9_n_0,ram_reg_0_15_10_10_i_1__9_n_0,ram_reg_0_15_9_9_i_1__9_n_0,ram_reg_0_15_8_8_i_1__9_n_0,ram_reg_0_15_7_7_i_1__9_n_0,ram_reg_0_15_6_6_i_1__9_n_0,ram_reg_0_15_5_5_i_1__9_n_0,ram_reg_0_15_4_4_i_1__9_n_0,ram_reg_0_15_3_3_i_1__9_n_0,ram_reg_0_15_2_2_i_1__9_n_0,ram_reg_0_15_1_1_i_1__9_n_0,ram_reg_0_15_0_0_i_1__9_n_0}));
  dual_port_ram_9 \generate_BRAM_module3[2].bram_instance 
       (.CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .MULTR0(\generate_BRAM_module3[2].bram_instance_n_0 ),
        .MULTR0_0(\generate_BRAM_module3[2].bram_instance_n_17 ),
        .MULTR0_1(\generate_BRAM_module3[2].bram_instance_n_18 ),
        .MULTR0_10(\generate_BRAM_module3[2].bram_instance_n_27 ),
        .MULTR0_11(\generate_BRAM_module3[2].bram_instance_n_28 ),
        .MULTR0_12(\generate_BRAM_module3[2].bram_instance_n_29 ),
        .MULTR0_13(\generate_BRAM_module3[2].bram_instance_n_30 ),
        .MULTR0_14(\generate_BRAM_module3[2].bram_instance_n_31 ),
        .MULTR0_2(\generate_BRAM_module3[2].bram_instance_n_19 ),
        .MULTR0_3(\generate_BRAM_module3[2].bram_instance_n_20 ),
        .MULTR0_4(\generate_BRAM_module3[2].bram_instance_n_21 ),
        .MULTR0_5(\generate_BRAM_module3[2].bram_instance_n_22 ),
        .MULTR0_6(\generate_BRAM_module3[2].bram_instance_n_23 ),
        .MULTR0_7(\generate_BRAM_module3[2].bram_instance_n_24 ),
        .MULTR0_8(\generate_BRAM_module3[2].bram_instance_n_25 ),
        .MULTR0_9(\generate_BRAM_module3[2].bram_instance_n_26 ),
        .addr_in_0({\write_count_reg[3]_rep_n_0 ,\write_count_reg[2]_rep_n_0 ,\write_count_reg[1]_rep_n_0 ,\write_count_reg[0]_rep_n_0 }),
        .addr_in_1({\mul_count_reg[3]_rep__0_n_0 ,\mul_count_reg[2]_rep_n_0 ,\mul_count_reg[1]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r3[2]_OBUF ),
        .\mul_count_reg[0]_rep (\mul_count_reg[0]_rep_n_0 ),
        .\mul_count_reg[2]_rep__0 (\mul_count_reg[2]_rep__0_n_0 ),
        .wr_en(wr_en),
        .\wv3[2] ({ram_reg_0_15_15_15_i_1__8_n_0,ram_reg_0_15_14_14_i_1__8_n_0,ram_reg_0_15_13_13_i_1__8_n_0,ram_reg_0_15_12_12_i_1__8_n_0,ram_reg_0_15_11_11_i_1__8_n_0,ram_reg_0_15_10_10_i_1__8_n_0,ram_reg_0_15_9_9_i_1__8_n_0,ram_reg_0_15_8_8_i_1__8_n_0,ram_reg_0_15_7_7_i_1__8_n_0,ram_reg_0_15_6_6_i_1__8_n_0,ram_reg_0_15_5_5_i_1__8_n_0,ram_reg_0_15_4_4_i_1__8_n_0,ram_reg_0_15_3_3_i_1__8_n_0,ram_reg_0_15_2_2_i_1__8_n_0,ram_reg_0_15_1_1_i_1__8_n_0,ram_reg_0_15_0_0_i_1__8_n_0}));
  dual_port_ram_10 \generate_BRAM_module3[3].bram_instance 
       (.CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .MULTR0(\generate_BRAM_module3[3].bram_instance_n_0 ),
        .MULTR0_0(\generate_BRAM_module3[3].bram_instance_n_17 ),
        .MULTR0_1(\generate_BRAM_module3[3].bram_instance_n_18 ),
        .MULTR0_10(\generate_BRAM_module3[3].bram_instance_n_27 ),
        .MULTR0_11(\generate_BRAM_module3[3].bram_instance_n_28 ),
        .MULTR0_12(\generate_BRAM_module3[3].bram_instance_n_29 ),
        .MULTR0_13(\generate_BRAM_module3[3].bram_instance_n_30 ),
        .MULTR0_14(\generate_BRAM_module3[3].bram_instance_n_31 ),
        .MULTR0_2(\generate_BRAM_module3[3].bram_instance_n_19 ),
        .MULTR0_3(\generate_BRAM_module3[3].bram_instance_n_20 ),
        .MULTR0_4(\generate_BRAM_module3[3].bram_instance_n_21 ),
        .MULTR0_5(\generate_BRAM_module3[3].bram_instance_n_22 ),
        .MULTR0_6(\generate_BRAM_module3[3].bram_instance_n_23 ),
        .MULTR0_7(\generate_BRAM_module3[3].bram_instance_n_24 ),
        .MULTR0_8(\generate_BRAM_module3[3].bram_instance_n_25 ),
        .MULTR0_9(\generate_BRAM_module3[3].bram_instance_n_26 ),
        .addr_in_1({\mul_count_reg[3]_rep__0_n_0 ,\mul_count_reg[2]_rep_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r3[3]_OBUF ),
        .\mul_count_reg[3]_rep (\mul_count_reg[3]_rep_n_0 ),
        .out({\write_count_reg_n_0_[3] ,\write_count_reg_n_0_[2] ,\write_count_reg_n_0_[1] ,\write_count_reg_n_0_[0] }),
        .read(read_OBUF[3:0]),
        .wr_en(wr_en),
        .\wv3[3] ({ram_reg_0_15_15_15_i_1__7_n_0,ram_reg_0_15_14_14_i_1__7_n_0,ram_reg_0_15_13_13_i_1__7_n_0,ram_reg_0_15_12_12_i_1__7_n_0,ram_reg_0_15_11_11_i_1__7_n_0,ram_reg_0_15_10_10_i_1__7_n_0,ram_reg_0_15_9_9_i_1__7_n_0,ram_reg_0_15_8_8_i_1__7_n_0,ram_reg_0_15_7_7_i_1__7_n_0,ram_reg_0_15_6_6_i_1__7_n_0,ram_reg_0_15_5_5_i_1__7_n_0,ram_reg_0_15_4_4_i_1__7_n_0,ram_reg_0_15_3_3_i_1__7_n_0,ram_reg_0_15_2_2_i_1__7_n_0,ram_reg_0_15_1_1_i_1__7_n_0,ram_reg_0_15_0_0_i_1__7_n_0}));
  dual_port_ram_11 \generate_BRAM_module4[0].bram_instance 
       (.B({\generate_BRAM_module4[0].bram_instance_n_0 ,\generate_BRAM_module4[0].bram_instance_n_1 ,\generate_BRAM_module4[0].bram_instance_n_2 ,\generate_BRAM_module4[0].bram_instance_n_3 ,\generate_BRAM_module4[0].bram_instance_n_4 ,\generate_BRAM_module4[0].bram_instance_n_5 ,\generate_BRAM_module4[0].bram_instance_n_6 ,\generate_BRAM_module4[0].bram_instance_n_7 ,\generate_BRAM_module4[0].bram_instance_n_8 ,\generate_BRAM_module4[0].bram_instance_n_9 ,\generate_BRAM_module4[0].bram_instance_n_10 ,\generate_BRAM_module4[0].bram_instance_n_11 ,\generate_BRAM_module4[0].bram_instance_n_12 ,\generate_BRAM_module4[0].bram_instance_n_13 ,\generate_BRAM_module4[0].bram_instance_n_14 ,\generate_BRAM_module4[0].bram_instance_n_15 }),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_0({\write_count_reg[3]_rep_n_0 ,\write_count_reg[2]_rep_n_0 ,\write_count_reg[1]_rep_n_0 ,\write_count_reg[0]_rep_n_0 }),
        .addr_in_1({\mul_count_reg[3]_rep_n_0 ,\mul_count_reg[2]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r4[0]_OBUF ),
        .\mul_count_reg[0]_rep__0 (\mul_count_reg[0]_rep__0_n_0 ),
        .\mul_count_reg[1]_rep (\mul_count_reg[1]_rep_n_0 ),
        .wr_en(wr_en),
        .\wv4[0] ({ram_reg_0_15_15_15_i_1__14_n_0,ram_reg_0_15_14_14_i_1__14_n_0,ram_reg_0_15_13_13_i_1__14_n_0,ram_reg_0_15_12_12_i_1__14_n_0,ram_reg_0_15_11_11_i_1__14_n_0,ram_reg_0_15_10_10_i_1__14_n_0,ram_reg_0_15_9_9_i_1__14_n_0,ram_reg_0_15_8_8_i_1__14_n_0,ram_reg_0_15_7_7_i_1__14_n_0,ram_reg_0_15_6_6_i_1__14_n_0,ram_reg_0_15_5_5_i_1__14_n_0,ram_reg_0_15_4_4_i_1__14_n_0,ram_reg_0_15_3_3_i_1__14_n_0,ram_reg_0_15_2_2_i_1__14_n_0,ram_reg_0_15_1_1_i_1__14_n_0,ram_reg_0_15_0_0_i_1__14_n_0}));
  dual_port_ram_12 \generate_BRAM_module4[1].bram_instance 
       (.B({\generate_BRAM_module4[1].bram_instance_n_0 ,\generate_BRAM_module4[1].bram_instance_n_1 ,\generate_BRAM_module4[1].bram_instance_n_2 ,\generate_BRAM_module4[1].bram_instance_n_3 ,\generate_BRAM_module4[1].bram_instance_n_4 ,\generate_BRAM_module4[1].bram_instance_n_5 ,\generate_BRAM_module4[1].bram_instance_n_6 ,\generate_BRAM_module4[1].bram_instance_n_7 ,\generate_BRAM_module4[1].bram_instance_n_8 ,\generate_BRAM_module4[1].bram_instance_n_9 ,\generate_BRAM_module4[1].bram_instance_n_10 ,\generate_BRAM_module4[1].bram_instance_n_11 ,\generate_BRAM_module4[1].bram_instance_n_12 ,\generate_BRAM_module4[1].bram_instance_n_13 ,\generate_BRAM_module4[1].bram_instance_n_14 ,\generate_BRAM_module4[1].bram_instance_n_15 }),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_1({\mul_count_reg[3]_rep_n_0 ,\mul_count_reg[2]_rep__0_n_0 ,\mul_count_reg[1]_rep_n_0 ,\mul_count_reg[0]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r4[1]_OBUF ),
        .out({\write_count_reg_n_0_[3] ,\write_count_reg_n_0_[2] ,\write_count_reg_n_0_[1] ,\write_count_reg_n_0_[0] }),
        .wr_en(wr_en),
        .\wv4[1] ({ram_reg_0_15_15_15_i_1__13_n_0,ram_reg_0_15_14_14_i_1__13_n_0,ram_reg_0_15_13_13_i_1__13_n_0,ram_reg_0_15_12_12_i_1__13_n_0,ram_reg_0_15_11_11_i_1__13_n_0,ram_reg_0_15_10_10_i_1__13_n_0,ram_reg_0_15_9_9_i_1__13_n_0,ram_reg_0_15_8_8_i_1__13_n_0,ram_reg_0_15_7_7_i_1__13_n_0,ram_reg_0_15_6_6_i_1__13_n_0,ram_reg_0_15_5_5_i_1__13_n_0,ram_reg_0_15_4_4_i_1__13_n_0,ram_reg_0_15_3_3_i_1__13_n_0,ram_reg_0_15_2_2_i_1__13_n_0,ram_reg_0_15_1_1_i_1__13_n_0,ram_reg_0_15_0_0_i_1__13_n_0}));
  dual_port_ram_13 \generate_BRAM_module4[2].bram_instance 
       (.B({\generate_BRAM_module4[2].bram_instance_n_0 ,\generate_BRAM_module4[2].bram_instance_n_1 ,\generate_BRAM_module4[2].bram_instance_n_2 ,\generate_BRAM_module4[2].bram_instance_n_3 ,\generate_BRAM_module4[2].bram_instance_n_4 ,\generate_BRAM_module4[2].bram_instance_n_5 ,\generate_BRAM_module4[2].bram_instance_n_6 ,\generate_BRAM_module4[2].bram_instance_n_7 ,\generate_BRAM_module4[2].bram_instance_n_8 ,\generate_BRAM_module4[2].bram_instance_n_9 ,\generate_BRAM_module4[2].bram_instance_n_10 ,\generate_BRAM_module4[2].bram_instance_n_11 ,\generate_BRAM_module4[2].bram_instance_n_12 ,\generate_BRAM_module4[2].bram_instance_n_13 ,\generate_BRAM_module4[2].bram_instance_n_14 ,\generate_BRAM_module4[2].bram_instance_n_15 }),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_0({\write_count_reg[3]_rep_n_0 ,\write_count_reg[2]_rep_n_0 ,\write_count_reg[1]_rep_n_0 ,\write_count_reg[0]_rep_n_0 }),
        .addr_in_1({\mul_count_reg[3]_rep_n_0 ,\mul_count_reg[2]_rep__0_n_0 ,\mul_count_reg[1]_rep_n_0 ,\mul_count_reg[0]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r4[2]_OBUF ),
        .\mul_count_reg[3]_rep__0 (\mul_count_reg[3]_rep__0_n_0 ),
        .wr_en(wr_en),
        .\wv4[2] ({ram_reg_0_15_15_15_i_1__12_n_0,ram_reg_0_15_14_14_i_1__12_n_0,ram_reg_0_15_13_13_i_1__12_n_0,ram_reg_0_15_12_12_i_1__12_n_0,ram_reg_0_15_11_11_i_1__12_n_0,ram_reg_0_15_10_10_i_1__12_n_0,ram_reg_0_15_9_9_i_1__12_n_0,ram_reg_0_15_8_8_i_1__12_n_0,ram_reg_0_15_7_7_i_1__12_n_0,ram_reg_0_15_6_6_i_1__12_n_0,ram_reg_0_15_5_5_i_1__12_n_0,ram_reg_0_15_4_4_i_1__12_n_0,ram_reg_0_15_3_3_i_1__12_n_0,ram_reg_0_15_2_2_i_1__12_n_0,ram_reg_0_15_1_1_i_1__12_n_0,ram_reg_0_15_0_0_i_1__12_n_0}));
  dual_port_ram_14 \generate_BRAM_module4[3].bram_instance 
       (.B({\generate_BRAM_module4[3].bram_instance_n_1 ,\generate_BRAM_module4[3].bram_instance_n_2 ,\generate_BRAM_module4[3].bram_instance_n_3 ,\generate_BRAM_module4[3].bram_instance_n_4 ,\generate_BRAM_module4[3].bram_instance_n_5 ,\generate_BRAM_module4[3].bram_instance_n_6 ,\generate_BRAM_module4[3].bram_instance_n_7 ,\generate_BRAM_module4[3].bram_instance_n_8 ,\generate_BRAM_module4[3].bram_instance_n_9 ,\generate_BRAM_module4[3].bram_instance_n_10 ,\generate_BRAM_module4[3].bram_instance_n_11 ,\generate_BRAM_module4[3].bram_instance_n_12 ,\generate_BRAM_module4[3].bram_instance_n_13 ,\generate_BRAM_module4[3].bram_instance_n_14 ,\generate_BRAM_module4[3].bram_instance_n_15 ,\generate_BRAM_module4[3].bram_instance_n_16 }),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .addr_in_1({\mul_count_reg[3]_rep_n_0 ,\mul_count_reg[2]_rep__0_n_0 ,\mul_count_reg[1]_rep_n_0 ,\mul_count_reg[0]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .data_out_10(\r4[3]_OBUF ),
        .out({\write_count_reg_n_0_[3] ,\write_count_reg_n_0_[2] ,\write_count_reg_n_0_[1] ,\write_count_reg_n_0_[0] }),
        .state_OBUF(state_OBUF),
        .wr_en(wr_en),
        .\wv4[3] ({ram_reg_0_15_15_15_i_1__11_n_0,ram_reg_0_15_14_14_i_1__11_n_0,ram_reg_0_15_13_13_i_1__11_n_0,ram_reg_0_15_12_12_i_1__11_n_0,ram_reg_0_15_11_11_i_1__11_n_0,ram_reg_0_15_10_10_i_1__11_n_0,ram_reg_0_15_9_9_i_1__11_n_0,ram_reg_0_15_8_8_i_1__11_n_0,ram_reg_0_15_7_7_i_1__11_n_0,ram_reg_0_15_6_6_i_1__11_n_0,ram_reg_0_15_5_5_i_1__11_n_0,ram_reg_0_15_4_4_i_1__11_n_0,ram_reg_0_15_3_3_i_1__11_n_0,ram_reg_0_15_2_2_i_1__11_n_0,ram_reg_0_15_1_1_i_1__11_n_0,ram_reg_0_15_0_0_i_1__11_n_0}));
  mm_unit mm_unit_instance
       (.B({\generate_BRAM_module4[0].bram_instance_n_0 ,\generate_BRAM_module4[0].bram_instance_n_1 ,\generate_BRAM_module4[0].bram_instance_n_2 ,\generate_BRAM_module4[0].bram_instance_n_3 ,\generate_BRAM_module4[0].bram_instance_n_4 ,\generate_BRAM_module4[0].bram_instance_n_5 ,\generate_BRAM_module4[0].bram_instance_n_6 ,\generate_BRAM_module4[0].bram_instance_n_7 ,\generate_BRAM_module4[0].bram_instance_n_8 ,\generate_BRAM_module4[0].bram_instance_n_9 ,\generate_BRAM_module4[0].bram_instance_n_10 ,\generate_BRAM_module4[0].bram_instance_n_11 ,\generate_BRAM_module4[0].bram_instance_n_12 ,\generate_BRAM_module4[0].bram_instance_n_13 ,\generate_BRAM_module4[0].bram_instance_n_14 ,\generate_BRAM_module4[0].bram_instance_n_15 }),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .P(\S4[0]_OBUF ),
        .RST_IBUF(RST_IBUF),
        .\S4[1][32] (\S4[1]_OBUF ),
        .\S4[2][32] (\S4[2]_OBUF ),
        .\S4[3][32] (\S4[3]_OBUF ),
        .cestat_OBUF(cestat_OBUF),
        .done_OBUF(done_OBUF),
        .\mul_count_reg[2]_rep__0 (mmx_unit_1_n_132),
        .\mul_count_reg[2]_rep__0_0 (mmx_unit_1_n_133),
        .\mul_count_reg[2]_rep__0_1 (mmx_unit_1_n_134),
        .\mul_count_reg[2]_rep__0_10 (mmx_unit_1_n_143),
        .\mul_count_reg[2]_rep__0_11 (mmx_unit_1_n_144),
        .\mul_count_reg[2]_rep__0_12 (mmx_unit_1_n_145),
        .\mul_count_reg[2]_rep__0_13 (mmx_unit_1_n_146),
        .\mul_count_reg[2]_rep__0_14 (mmx_unit_1_n_147),
        .\mul_count_reg[2]_rep__0_2 (mmx_unit_1_n_135),
        .\mul_count_reg[2]_rep__0_3 (mmx_unit_1_n_136),
        .\mul_count_reg[2]_rep__0_4 (mmx_unit_1_n_137),
        .\mul_count_reg[2]_rep__0_5 (mmx_unit_1_n_138),
        .\mul_count_reg[2]_rep__0_6 (mmx_unit_1_n_139),
        .\mul_count_reg[2]_rep__0_7 (mmx_unit_1_n_140),
        .\mul_count_reg[2]_rep__0_8 (mmx_unit_1_n_141),
        .\mul_count_reg[2]_rep__0_9 (mmx_unit_1_n_142),
        .state_OBUF(state_OBUF),
        .\write_count_reg[0] ({\generate_BRAM_module4[1].bram_instance_n_0 ,\generate_BRAM_module4[1].bram_instance_n_1 ,\generate_BRAM_module4[1].bram_instance_n_2 ,\generate_BRAM_module4[1].bram_instance_n_3 ,\generate_BRAM_module4[1].bram_instance_n_4 ,\generate_BRAM_module4[1].bram_instance_n_5 ,\generate_BRAM_module4[1].bram_instance_n_6 ,\generate_BRAM_module4[1].bram_instance_n_7 ,\generate_BRAM_module4[1].bram_instance_n_8 ,\generate_BRAM_module4[1].bram_instance_n_9 ,\generate_BRAM_module4[1].bram_instance_n_10 ,\generate_BRAM_module4[1].bram_instance_n_11 ,\generate_BRAM_module4[1].bram_instance_n_12 ,\generate_BRAM_module4[1].bram_instance_n_13 ,\generate_BRAM_module4[1].bram_instance_n_14 ,\generate_BRAM_module4[1].bram_instance_n_15 }),
        .\write_count_reg[0]_0 ({\generate_BRAM_module4[3].bram_instance_n_1 ,\generate_BRAM_module4[3].bram_instance_n_2 ,\generate_BRAM_module4[3].bram_instance_n_3 ,\generate_BRAM_module4[3].bram_instance_n_4 ,\generate_BRAM_module4[3].bram_instance_n_5 ,\generate_BRAM_module4[3].bram_instance_n_6 ,\generate_BRAM_module4[3].bram_instance_n_7 ,\generate_BRAM_module4[3].bram_instance_n_8 ,\generate_BRAM_module4[3].bram_instance_n_9 ,\generate_BRAM_module4[3].bram_instance_n_10 ,\generate_BRAM_module4[3].bram_instance_n_11 ,\generate_BRAM_module4[3].bram_instance_n_12 ,\generate_BRAM_module4[3].bram_instance_n_13 ,\generate_BRAM_module4[3].bram_instance_n_14 ,\generate_BRAM_module4[3].bram_instance_n_15 ,\generate_BRAM_module4[3].bram_instance_n_16 }),
        .\write_count_reg[0]_rep ({\generate_BRAM_module4[2].bram_instance_n_0 ,\generate_BRAM_module4[2].bram_instance_n_1 ,\generate_BRAM_module4[2].bram_instance_n_2 ,\generate_BRAM_module4[2].bram_instance_n_3 ,\generate_BRAM_module4[2].bram_instance_n_4 ,\generate_BRAM_module4[2].bram_instance_n_5 ,\generate_BRAM_module4[2].bram_instance_n_6 ,\generate_BRAM_module4[2].bram_instance_n_7 ,\generate_BRAM_module4[2].bram_instance_n_8 ,\generate_BRAM_module4[2].bram_instance_n_9 ,\generate_BRAM_module4[2].bram_instance_n_10 ,\generate_BRAM_module4[2].bram_instance_n_11 ,\generate_BRAM_module4[2].bram_instance_n_12 ,\generate_BRAM_module4[2].bram_instance_n_13 ,\generate_BRAM_module4[2].bram_instance_n_14 ,\generate_BRAM_module4[2].bram_instance_n_15 }));
  mma_unit mma_unit_1
       (.ACC_reg(\S1[2]_OBUF [15:0]),
        .\ACC_reg[32] (\S3[1]_OBUF ),
        .\ACC_reg[32]_0 (\S3[2]_OBUF ),
        .\ACC_reg[32]_1 (\S3[3]_OBUF ),
        .ACC_reg_0(\S1[1]_OBUF [15:0]),
        .ACC_reg_1(\S1[0]_OBUF [15:0]),
        .ACC_reg_2(\S2[0]_OBUF [15:0]),
        .ACC_reg_3(\S2[1]_OBUF [15:0]),
        .ACC_reg_4(\S2[2]_OBUF [15:0]),
        .ACC_reg_5(\S2[3]_OBUF [15:0]),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .P(\S1[3]_OBUF [15:0]),
        .Q(\S3[0]_OBUF ),
        .RST_IBUF(RST_IBUF),
        .cestat_OBUF(cestat_OBUF),
        .\mul_count_reg[2]_rep__0 (mmx_unit_1_n_132),
        .\mul_count_reg[2]_rep__0_0 (mmx_unit_1_n_133),
        .\mul_count_reg[2]_rep__0_1 (mmx_unit_1_n_134),
        .\mul_count_reg[2]_rep__0_10 (mmx_unit_1_n_143),
        .\mul_count_reg[2]_rep__0_11 (mmx_unit_1_n_144),
        .\mul_count_reg[2]_rep__0_12 (mmx_unit_1_n_145),
        .\mul_count_reg[2]_rep__0_13 (mmx_unit_1_n_146),
        .\mul_count_reg[2]_rep__0_14 (mmx_unit_1_n_147),
        .\mul_count_reg[2]_rep__0_2 (mmx_unit_1_n_135),
        .\mul_count_reg[2]_rep__0_3 (mmx_unit_1_n_136),
        .\mul_count_reg[2]_rep__0_4 (mmx_unit_1_n_137),
        .\mul_count_reg[2]_rep__0_5 (mmx_unit_1_n_138),
        .\mul_count_reg[2]_rep__0_6 (mmx_unit_1_n_139),
        .\mul_count_reg[2]_rep__0_7 (mmx_unit_1_n_140),
        .\mul_count_reg[2]_rep__0_8 (mmx_unit_1_n_141),
        .\mul_count_reg[2]_rep__0_9 (mmx_unit_1_n_142),
        .state_OBUF(state_OBUF),
        .\write_count_reg[0] (\generate_BRAM_module3[1].bram_instance_n_31 ),
        .\write_count_reg[0]_0 (\generate_BRAM_module3[1].bram_instance_n_30 ),
        .\write_count_reg[0]_1 (\generate_BRAM_module3[1].bram_instance_n_29 ),
        .\write_count_reg[0]_10 (\generate_BRAM_module3[1].bram_instance_n_20 ),
        .\write_count_reg[0]_11 (\generate_BRAM_module3[1].bram_instance_n_19 ),
        .\write_count_reg[0]_12 (\generate_BRAM_module3[1].bram_instance_n_18 ),
        .\write_count_reg[0]_13 (\generate_BRAM_module3[1].bram_instance_n_17 ),
        .\write_count_reg[0]_14 (\generate_BRAM_module3[1].bram_instance_n_0 ),
        .\write_count_reg[0]_15 (\generate_BRAM_module3[3].bram_instance_n_31 ),
        .\write_count_reg[0]_16 (\generate_BRAM_module3[3].bram_instance_n_30 ),
        .\write_count_reg[0]_17 (\generate_BRAM_module3[3].bram_instance_n_29 ),
        .\write_count_reg[0]_18 (\generate_BRAM_module3[3].bram_instance_n_28 ),
        .\write_count_reg[0]_19 (\generate_BRAM_module3[3].bram_instance_n_27 ),
        .\write_count_reg[0]_2 (\generate_BRAM_module3[1].bram_instance_n_28 ),
        .\write_count_reg[0]_20 (\generate_BRAM_module3[3].bram_instance_n_26 ),
        .\write_count_reg[0]_21 (\generate_BRAM_module3[3].bram_instance_n_25 ),
        .\write_count_reg[0]_22 (\generate_BRAM_module3[3].bram_instance_n_24 ),
        .\write_count_reg[0]_23 (\generate_BRAM_module3[3].bram_instance_n_23 ),
        .\write_count_reg[0]_24 (\generate_BRAM_module3[3].bram_instance_n_22 ),
        .\write_count_reg[0]_25 (\generate_BRAM_module3[3].bram_instance_n_21 ),
        .\write_count_reg[0]_26 (\generate_BRAM_module3[3].bram_instance_n_20 ),
        .\write_count_reg[0]_27 (\generate_BRAM_module3[3].bram_instance_n_19 ),
        .\write_count_reg[0]_28 (\generate_BRAM_module3[3].bram_instance_n_18 ),
        .\write_count_reg[0]_29 (\generate_BRAM_module3[3].bram_instance_n_17 ),
        .\write_count_reg[0]_3 (\generate_BRAM_module3[1].bram_instance_n_27 ),
        .\write_count_reg[0]_30 (\generate_BRAM_module3[3].bram_instance_n_0 ),
        .\write_count_reg[0]_4 (\generate_BRAM_module3[1].bram_instance_n_26 ),
        .\write_count_reg[0]_5 (\generate_BRAM_module3[1].bram_instance_n_25 ),
        .\write_count_reg[0]_6 (\generate_BRAM_module3[1].bram_instance_n_24 ),
        .\write_count_reg[0]_7 (\generate_BRAM_module3[1].bram_instance_n_23 ),
        .\write_count_reg[0]_8 (\generate_BRAM_module3[1].bram_instance_n_22 ),
        .\write_count_reg[0]_9 (\generate_BRAM_module3[1].bram_instance_n_21 ),
        .\write_count_reg[0]_rep (\generate_BRAM_module3[0].bram_instance_n_31 ),
        .\write_count_reg[0]_rep_0 (\generate_BRAM_module3[0].bram_instance_n_30 ),
        .\write_count_reg[0]_rep_1 (\generate_BRAM_module3[0].bram_instance_n_29 ),
        .\write_count_reg[0]_rep_10 (\generate_BRAM_module3[0].bram_instance_n_20 ),
        .\write_count_reg[0]_rep_11 (\generate_BRAM_module3[0].bram_instance_n_19 ),
        .\write_count_reg[0]_rep_12 (\generate_BRAM_module3[0].bram_instance_n_18 ),
        .\write_count_reg[0]_rep_13 (\generate_BRAM_module3[0].bram_instance_n_17 ),
        .\write_count_reg[0]_rep_14 (\generate_BRAM_module3[0].bram_instance_n_0 ),
        .\write_count_reg[0]_rep_15 (\generate_BRAM_module3[2].bram_instance_n_31 ),
        .\write_count_reg[0]_rep_16 (\generate_BRAM_module3[2].bram_instance_n_30 ),
        .\write_count_reg[0]_rep_17 (\generate_BRAM_module3[2].bram_instance_n_29 ),
        .\write_count_reg[0]_rep_18 (\generate_BRAM_module3[2].bram_instance_n_28 ),
        .\write_count_reg[0]_rep_19 (\generate_BRAM_module3[2].bram_instance_n_27 ),
        .\write_count_reg[0]_rep_2 (\generate_BRAM_module3[0].bram_instance_n_28 ),
        .\write_count_reg[0]_rep_20 (\generate_BRAM_module3[2].bram_instance_n_26 ),
        .\write_count_reg[0]_rep_21 (\generate_BRAM_module3[2].bram_instance_n_25 ),
        .\write_count_reg[0]_rep_22 (\generate_BRAM_module3[2].bram_instance_n_24 ),
        .\write_count_reg[0]_rep_23 (\generate_BRAM_module3[2].bram_instance_n_23 ),
        .\write_count_reg[0]_rep_24 (\generate_BRAM_module3[2].bram_instance_n_22 ),
        .\write_count_reg[0]_rep_25 (\generate_BRAM_module3[2].bram_instance_n_21 ),
        .\write_count_reg[0]_rep_26 (\generate_BRAM_module3[2].bram_instance_n_20 ),
        .\write_count_reg[0]_rep_27 (\generate_BRAM_module3[2].bram_instance_n_19 ),
        .\write_count_reg[0]_rep_28 (\generate_BRAM_module3[2].bram_instance_n_18 ),
        .\write_count_reg[0]_rep_29 (\generate_BRAM_module3[2].bram_instance_n_17 ),
        .\write_count_reg[0]_rep_3 (\generate_BRAM_module3[0].bram_instance_n_27 ),
        .\write_count_reg[0]_rep_30 (\generate_BRAM_module3[2].bram_instance_n_0 ),
        .\write_count_reg[0]_rep_4 (\generate_BRAM_module3[0].bram_instance_n_26 ),
        .\write_count_reg[0]_rep_5 (\generate_BRAM_module3[0].bram_instance_n_25 ),
        .\write_count_reg[0]_rep_6 (\generate_BRAM_module3[0].bram_instance_n_24 ),
        .\write_count_reg[0]_rep_7 (\generate_BRAM_module3[0].bram_instance_n_23 ),
        .\write_count_reg[0]_rep_8 (\generate_BRAM_module3[0].bram_instance_n_22 ),
        .\write_count_reg[0]_rep_9 (\generate_BRAM_module3[0].bram_instance_n_21 ));
  mmx_unit mmx_unit_1
       (.ACC_reg(mmx_unit_1_n_132),
        .ACC_reg_0(mmx_unit_1_n_133),
        .ACC_reg_1(mmx_unit_1_n_134),
        .ACC_reg_10(mmx_unit_1_n_143),
        .ACC_reg_11(mmx_unit_1_n_144),
        .ACC_reg_12(mmx_unit_1_n_145),
        .ACC_reg_13(mmx_unit_1_n_146),
        .ACC_reg_14(mmx_unit_1_n_147),
        .ACC_reg_2(mmx_unit_1_n_135),
        .ACC_reg_3(mmx_unit_1_n_136),
        .ACC_reg_4(mmx_unit_1_n_137),
        .ACC_reg_5(mmx_unit_1_n_138),
        .ACC_reg_6(mmx_unit_1_n_139),
        .ACC_reg_7(mmx_unit_1_n_140),
        .ACC_reg_8(mmx_unit_1_n_141),
        .ACC_reg_9(mmx_unit_1_n_142),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .P(\S1[0]_OBUF ),
        .RST_IBUF(RST_IBUF),
        .\S1[1][32] (\S1[1]_OBUF ),
        .\S1[2][32] (\S1[2]_OBUF ),
        .\S1[3][32] (\S1[3]_OBUF ),
        .addr_in_1({\mul_count_reg[2]_rep__0_n_0 ,\mul_count_reg[1]_rep_n_0 ,\mul_count_reg[0]_rep__0_n_0 }),
        .cestat_OBUF(cestat_OBUF),
        .\input_vector[0][0] (ACC_reg_i_204_n_0),
        .\input_vector[0][10] (ACC_reg_i_124_n_0),
        .\input_vector[0][11] (ACC_reg_i_116_n_0),
        .\input_vector[0][12] (ACC_reg_i_108_n_0),
        .\input_vector[0][13] (ACC_reg_i_100_n_0),
        .\input_vector[0][14] (ACC_reg_i_92_n_0),
        .\input_vector[0][15] (ACC_reg_i_84_n_0),
        .\input_vector[0][1] (ACC_reg_i_196_n_0),
        .\input_vector[0][2] (ACC_reg_i_188_n_0),
        .\input_vector[0][3] (ACC_reg_i_180_n_0),
        .\input_vector[0][4] (ACC_reg_i_172_n_0),
        .\input_vector[0][5] (ACC_reg_i_164_n_0),
        .\input_vector[0][6] (ACC_reg_i_156_n_0),
        .\input_vector[0][7] (ACC_reg_i_148_n_0),
        .\input_vector[0][8] (ACC_reg_i_140_n_0),
        .\input_vector[0][9] (ACC_reg_i_132_n_0),
        .\input_vector[1][0] (ACC_reg_i_203_n_0),
        .\input_vector[1][10] (ACC_reg_i_123_n_0),
        .\input_vector[1][11] (ACC_reg_i_115_n_0),
        .\input_vector[1][12] (ACC_reg_i_107_n_0),
        .\input_vector[1][13] (ACC_reg_i_99_n_0),
        .\input_vector[1][14] (ACC_reg_i_91_n_0),
        .\input_vector[1][15] (ACC_reg_i_83_n_0),
        .\input_vector[1][1] (ACC_reg_i_195_n_0),
        .\input_vector[1][2] (ACC_reg_i_187_n_0),
        .\input_vector[1][3] (ACC_reg_i_179_n_0),
        .\input_vector[1][4] (ACC_reg_i_171_n_0),
        .\input_vector[1][5] (ACC_reg_i_163_n_0),
        .\input_vector[1][6] (ACC_reg_i_155_n_0),
        .\input_vector[1][7] (ACC_reg_i_147_n_0),
        .\input_vector[1][8] (ACC_reg_i_139_n_0),
        .\input_vector[1][9] (ACC_reg_i_131_n_0),
        .\input_vector[2][0] (ACC_reg_i_202_n_0),
        .\input_vector[2][10] (ACC_reg_i_122_n_0),
        .\input_vector[2][11] (ACC_reg_i_114_n_0),
        .\input_vector[2][12] (ACC_reg_i_106_n_0),
        .\input_vector[2][13] (ACC_reg_i_98_n_0),
        .\input_vector[2][14] (ACC_reg_i_90_n_0),
        .\input_vector[2][15] (ACC_reg_i_82_n_0),
        .\input_vector[2][1] (ACC_reg_i_194_n_0),
        .\input_vector[2][2] (ACC_reg_i_186_n_0),
        .\input_vector[2][3] (ACC_reg_i_178_n_0),
        .\input_vector[2][4] (ACC_reg_i_170_n_0),
        .\input_vector[2][5] (ACC_reg_i_162_n_0),
        .\input_vector[2][6] (ACC_reg_i_154_n_0),
        .\input_vector[2][7] (ACC_reg_i_146_n_0),
        .\input_vector[2][8] (ACC_reg_i_138_n_0),
        .\input_vector[2][9] (ACC_reg_i_130_n_0),
        .\input_vector[3][0] (ACC_reg_i_201_n_0),
        .\input_vector[3][10] (ACC_reg_i_121_n_0),
        .\input_vector[3][11] (ACC_reg_i_113_n_0),
        .\input_vector[3][12] (ACC_reg_i_105_n_0),
        .\input_vector[3][13] (ACC_reg_i_97_n_0),
        .\input_vector[3][14] (ACC_reg_i_89_n_0),
        .\input_vector[3][15] (ACC_reg_i_81_n_0),
        .\input_vector[3][1] (ACC_reg_i_193_n_0),
        .\input_vector[3][2] (ACC_reg_i_185_n_0),
        .\input_vector[3][3] (ACC_reg_i_177_n_0),
        .\input_vector[3][4] (ACC_reg_i_169_n_0),
        .\input_vector[3][5] (ACC_reg_i_161_n_0),
        .\input_vector[3][6] (ACC_reg_i_153_n_0),
        .\input_vector[3][7] (ACC_reg_i_145_n_0),
        .\input_vector[3][8] (ACC_reg_i_137_n_0),
        .\input_vector[3][9] (ACC_reg_i_129_n_0),
        .\input_vector[4][0] (ACC_reg_i_208_n_0),
        .\input_vector[4][10] (ACC_reg_i_128_n_0),
        .\input_vector[4][11] (ACC_reg_i_120_n_0),
        .\input_vector[4][12] (ACC_reg_i_112_n_0),
        .\input_vector[4][13] (ACC_reg_i_104_n_0),
        .\input_vector[4][14] (ACC_reg_i_96_n_0),
        .\input_vector[4][15] (ACC_reg_i_88_n_0),
        .\input_vector[4][1] (ACC_reg_i_200_n_0),
        .\input_vector[4][2] (ACC_reg_i_192_n_0),
        .\input_vector[4][3] (ACC_reg_i_184_n_0),
        .\input_vector[4][4] (ACC_reg_i_176_n_0),
        .\input_vector[4][5] (ACC_reg_i_168_n_0),
        .\input_vector[4][6] (ACC_reg_i_160_n_0),
        .\input_vector[4][7] (ACC_reg_i_152_n_0),
        .\input_vector[4][8] (ACC_reg_i_144_n_0),
        .\input_vector[4][9] (ACC_reg_i_136_n_0),
        .\input_vector[5][0] (ACC_reg_i_207_n_0),
        .\input_vector[5][10] (ACC_reg_i_127_n_0),
        .\input_vector[5][11] (ACC_reg_i_119_n_0),
        .\input_vector[5][12] (ACC_reg_i_111_n_0),
        .\input_vector[5][13] (ACC_reg_i_103_n_0),
        .\input_vector[5][14] (ACC_reg_i_95_n_0),
        .\input_vector[5][15] (ACC_reg_i_87_n_0),
        .\input_vector[5][1] (ACC_reg_i_199_n_0),
        .\input_vector[5][2] (ACC_reg_i_191_n_0),
        .\input_vector[5][3] (ACC_reg_i_183_n_0),
        .\input_vector[5][4] (ACC_reg_i_175_n_0),
        .\input_vector[5][5] (ACC_reg_i_167_n_0),
        .\input_vector[5][6] (ACC_reg_i_159_n_0),
        .\input_vector[5][7] (ACC_reg_i_151_n_0),
        .\input_vector[5][8] (ACC_reg_i_143_n_0),
        .\input_vector[5][9] (ACC_reg_i_135_n_0),
        .\input_vector[6][0] (ACC_reg_i_206_n_0),
        .\input_vector[6][10] (ACC_reg_i_126_n_0),
        .\input_vector[6][11] (ACC_reg_i_118_n_0),
        .\input_vector[6][12] (ACC_reg_i_110_n_0),
        .\input_vector[6][13] (ACC_reg_i_102_n_0),
        .\input_vector[6][14] (ACC_reg_i_94_n_0),
        .\input_vector[6][15] (ACC_reg_i_86_n_0),
        .\input_vector[6][1] (ACC_reg_i_198_n_0),
        .\input_vector[6][2] (ACC_reg_i_190_n_0),
        .\input_vector[6][3] (ACC_reg_i_182_n_0),
        .\input_vector[6][4] (ACC_reg_i_174_n_0),
        .\input_vector[6][5] (ACC_reg_i_166_n_0),
        .\input_vector[6][6] (ACC_reg_i_158_n_0),
        .\input_vector[6][7] (ACC_reg_i_150_n_0),
        .\input_vector[6][8] (ACC_reg_i_142_n_0),
        .\input_vector[6][9] (ACC_reg_i_134_n_0),
        .\input_vector[7][0] (ACC_reg_i_205_n_0),
        .\input_vector[7][10] (ACC_reg_i_125_n_0),
        .\input_vector[7][11] (ACC_reg_i_117_n_0),
        .\input_vector[7][12] (ACC_reg_i_109_n_0),
        .\input_vector[7][13] (ACC_reg_i_101_n_0),
        .\input_vector[7][14] (ACC_reg_i_93_n_0),
        .\input_vector[7][15] (ACC_reg_i_85_n_0),
        .\input_vector[7][1] (ACC_reg_i_197_n_0),
        .\input_vector[7][2] (ACC_reg_i_189_n_0),
        .\input_vector[7][3] (ACC_reg_i_181_n_0),
        .\input_vector[7][4] (ACC_reg_i_173_n_0),
        .\input_vector[7][5] (ACC_reg_i_165_n_0),
        .\input_vector[7][6] (ACC_reg_i_157_n_0),
        .\input_vector[7][7] (ACC_reg_i_149_n_0),
        .\input_vector[7][8] (ACC_reg_i_141_n_0),
        .\input_vector[7][9] (ACC_reg_i_133_n_0),
        .\mul_count_reg[1]_rep__0 (\mul_count_reg[1]_rep__0_n_0 ),
        .state_OBUF(state_OBUF),
        .\write_count_reg[0] (\generate_BRAM_module1[1].bram_instance_n_31 ),
        .\write_count_reg[0]_0 (\generate_BRAM_module1[1].bram_instance_n_30 ),
        .\write_count_reg[0]_1 (\generate_BRAM_module1[1].bram_instance_n_29 ),
        .\write_count_reg[0]_10 (\generate_BRAM_module1[1].bram_instance_n_20 ),
        .\write_count_reg[0]_11 (\generate_BRAM_module1[1].bram_instance_n_19 ),
        .\write_count_reg[0]_12 (\generate_BRAM_module1[1].bram_instance_n_18 ),
        .\write_count_reg[0]_13 (\generate_BRAM_module1[1].bram_instance_n_17 ),
        .\write_count_reg[0]_14 (\generate_BRAM_module1[1].bram_instance_n_0 ),
        .\write_count_reg[0]_15 (\generate_BRAM_module1[3].bram_instance_n_31 ),
        .\write_count_reg[0]_16 (\generate_BRAM_module1[3].bram_instance_n_30 ),
        .\write_count_reg[0]_17 (\generate_BRAM_module1[3].bram_instance_n_29 ),
        .\write_count_reg[0]_18 (\generate_BRAM_module1[3].bram_instance_n_28 ),
        .\write_count_reg[0]_19 (\generate_BRAM_module1[3].bram_instance_n_27 ),
        .\write_count_reg[0]_2 (\generate_BRAM_module1[1].bram_instance_n_28 ),
        .\write_count_reg[0]_20 (\generate_BRAM_module1[3].bram_instance_n_26 ),
        .\write_count_reg[0]_21 (\generate_BRAM_module1[3].bram_instance_n_25 ),
        .\write_count_reg[0]_22 (\generate_BRAM_module1[3].bram_instance_n_24 ),
        .\write_count_reg[0]_23 (\generate_BRAM_module1[3].bram_instance_n_23 ),
        .\write_count_reg[0]_24 (\generate_BRAM_module1[3].bram_instance_n_22 ),
        .\write_count_reg[0]_25 (\generate_BRAM_module1[3].bram_instance_n_21 ),
        .\write_count_reg[0]_26 (\generate_BRAM_module1[3].bram_instance_n_20 ),
        .\write_count_reg[0]_27 (\generate_BRAM_module1[3].bram_instance_n_19 ),
        .\write_count_reg[0]_28 (\generate_BRAM_module1[3].bram_instance_n_18 ),
        .\write_count_reg[0]_29 (\generate_BRAM_module1[3].bram_instance_n_17 ),
        .\write_count_reg[0]_3 (\generate_BRAM_module1[1].bram_instance_n_27 ),
        .\write_count_reg[0]_30 (\generate_BRAM_module1[3].bram_instance_n_0 ),
        .\write_count_reg[0]_4 (\generate_BRAM_module1[1].bram_instance_n_26 ),
        .\write_count_reg[0]_5 (\generate_BRAM_module1[1].bram_instance_n_25 ),
        .\write_count_reg[0]_6 (\generate_BRAM_module1[1].bram_instance_n_24 ),
        .\write_count_reg[0]_7 (\generate_BRAM_module1[1].bram_instance_n_23 ),
        .\write_count_reg[0]_8 (\generate_BRAM_module1[1].bram_instance_n_22 ),
        .\write_count_reg[0]_9 (\generate_BRAM_module1[1].bram_instance_n_21 ),
        .\write_count_reg[0]_rep (\generate_BRAM_module1[0].bram_instance_n_31 ),
        .\write_count_reg[0]_rep_0 (\generate_BRAM_module1[0].bram_instance_n_30 ),
        .\write_count_reg[0]_rep_1 (\generate_BRAM_module1[0].bram_instance_n_29 ),
        .\write_count_reg[0]_rep_10 (\generate_BRAM_module1[0].bram_instance_n_20 ),
        .\write_count_reg[0]_rep_11 (\generate_BRAM_module1[0].bram_instance_n_19 ),
        .\write_count_reg[0]_rep_12 (\generate_BRAM_module1[0].bram_instance_n_18 ),
        .\write_count_reg[0]_rep_13 (\generate_BRAM_module1[0].bram_instance_n_17 ),
        .\write_count_reg[0]_rep_14 (\generate_BRAM_module1[0].bram_instance_n_0 ),
        .\write_count_reg[0]_rep_15 (\generate_BRAM_module1[2].bram_instance_n_31 ),
        .\write_count_reg[0]_rep_16 (\generate_BRAM_module1[2].bram_instance_n_30 ),
        .\write_count_reg[0]_rep_17 (\generate_BRAM_module1[2].bram_instance_n_29 ),
        .\write_count_reg[0]_rep_18 (\generate_BRAM_module1[2].bram_instance_n_28 ),
        .\write_count_reg[0]_rep_19 (\generate_BRAM_module1[2].bram_instance_n_27 ),
        .\write_count_reg[0]_rep_2 (\generate_BRAM_module1[0].bram_instance_n_28 ),
        .\write_count_reg[0]_rep_20 (\generate_BRAM_module1[2].bram_instance_n_26 ),
        .\write_count_reg[0]_rep_21 (\generate_BRAM_module1[2].bram_instance_n_25 ),
        .\write_count_reg[0]_rep_22 (\generate_BRAM_module1[2].bram_instance_n_24 ),
        .\write_count_reg[0]_rep_23 (\generate_BRAM_module1[2].bram_instance_n_23 ),
        .\write_count_reg[0]_rep_24 (\generate_BRAM_module1[2].bram_instance_n_22 ),
        .\write_count_reg[0]_rep_25 (\generate_BRAM_module1[2].bram_instance_n_21 ),
        .\write_count_reg[0]_rep_26 (\generate_BRAM_module1[2].bram_instance_n_20 ),
        .\write_count_reg[0]_rep_27 (\generate_BRAM_module1[2].bram_instance_n_19 ),
        .\write_count_reg[0]_rep_28 (\generate_BRAM_module1[2].bram_instance_n_18 ),
        .\write_count_reg[0]_rep_29 (\generate_BRAM_module1[2].bram_instance_n_17 ),
        .\write_count_reg[0]_rep_3 (\generate_BRAM_module1[0].bram_instance_n_27 ),
        .\write_count_reg[0]_rep_30 (\generate_BRAM_module1[2].bram_instance_n_0 ),
        .\write_count_reg[0]_rep_4 (\generate_BRAM_module1[0].bram_instance_n_26 ),
        .\write_count_reg[0]_rep_5 (\generate_BRAM_module1[0].bram_instance_n_25 ),
        .\write_count_reg[0]_rep_6 (\generate_BRAM_module1[0].bram_instance_n_24 ),
        .\write_count_reg[0]_rep_7 (\generate_BRAM_module1[0].bram_instance_n_23 ),
        .\write_count_reg[0]_rep_8 (\generate_BRAM_module1[0].bram_instance_n_22 ),
        .\write_count_reg[0]_rep_9 (\generate_BRAM_module1[0].bram_instance_n_21 ));
  mmx_unit_15 mmx_unit_2
       (.\ACC_reg[15] (\S3[1]_OBUF [15:0]),
        .\ACC_reg[15]_0 (\S3[2]_OBUF [15:0]),
        .\ACC_reg[15]_1 (\S3[3]_OBUF [15:0]),
        .CLK_IBUF_BUFG(CLK_IBUF_BUFG),
        .P(\S2[0]_OBUF ),
        .Q(\S3[0]_OBUF [15:0]),
        .RST_IBUF(RST_IBUF),
        .\S2[1][32] (\S2[1]_OBUF ),
        .\S2[2][32] (\S2[2]_OBUF ),
        .\S2[3][32] (\S2[3]_OBUF ),
        .cestat_OBUF(cestat_OBUF),
        .\mul_count_reg[2]_rep__0 (mmx_unit_1_n_132),
        .\mul_count_reg[2]_rep__0_0 (mmx_unit_1_n_133),
        .\mul_count_reg[2]_rep__0_1 (mmx_unit_1_n_134),
        .\mul_count_reg[2]_rep__0_10 (mmx_unit_1_n_143),
        .\mul_count_reg[2]_rep__0_11 (mmx_unit_1_n_144),
        .\mul_count_reg[2]_rep__0_12 (mmx_unit_1_n_145),
        .\mul_count_reg[2]_rep__0_13 (mmx_unit_1_n_146),
        .\mul_count_reg[2]_rep__0_14 (mmx_unit_1_n_147),
        .\mul_count_reg[2]_rep__0_2 (mmx_unit_1_n_135),
        .\mul_count_reg[2]_rep__0_3 (mmx_unit_1_n_136),
        .\mul_count_reg[2]_rep__0_4 (mmx_unit_1_n_137),
        .\mul_count_reg[2]_rep__0_5 (mmx_unit_1_n_138),
        .\mul_count_reg[2]_rep__0_6 (mmx_unit_1_n_139),
        .\mul_count_reg[2]_rep__0_7 (mmx_unit_1_n_140),
        .\mul_count_reg[2]_rep__0_8 (mmx_unit_1_n_141),
        .\mul_count_reg[2]_rep__0_9 (mmx_unit_1_n_142),
        .state_OBUF(state_OBUF),
        .\write_count_reg[0] (\generate_BRAM_module2[1].bram_instance_n_31 ),
        .\write_count_reg[0]_0 (\generate_BRAM_module2[1].bram_instance_n_30 ),
        .\write_count_reg[0]_1 (\generate_BRAM_module2[1].bram_instance_n_29 ),
        .\write_count_reg[0]_10 (\generate_BRAM_module2[1].bram_instance_n_20 ),
        .\write_count_reg[0]_11 (\generate_BRAM_module2[1].bram_instance_n_19 ),
        .\write_count_reg[0]_12 (\generate_BRAM_module2[1].bram_instance_n_18 ),
        .\write_count_reg[0]_13 (\generate_BRAM_module2[1].bram_instance_n_17 ),
        .\write_count_reg[0]_14 (\generate_BRAM_module2[1].bram_instance_n_0 ),
        .\write_count_reg[0]_15 (\generate_BRAM_module2[3].bram_instance_n_31 ),
        .\write_count_reg[0]_16 (\generate_BRAM_module2[3].bram_instance_n_30 ),
        .\write_count_reg[0]_17 (\generate_BRAM_module2[3].bram_instance_n_29 ),
        .\write_count_reg[0]_18 (\generate_BRAM_module2[3].bram_instance_n_28 ),
        .\write_count_reg[0]_19 (\generate_BRAM_module2[3].bram_instance_n_27 ),
        .\write_count_reg[0]_2 (\generate_BRAM_module2[1].bram_instance_n_28 ),
        .\write_count_reg[0]_20 (\generate_BRAM_module2[3].bram_instance_n_26 ),
        .\write_count_reg[0]_21 (\generate_BRAM_module2[3].bram_instance_n_25 ),
        .\write_count_reg[0]_22 (\generate_BRAM_module2[3].bram_instance_n_24 ),
        .\write_count_reg[0]_23 (\generate_BRAM_module2[3].bram_instance_n_23 ),
        .\write_count_reg[0]_24 (\generate_BRAM_module2[3].bram_instance_n_22 ),
        .\write_count_reg[0]_25 (\generate_BRAM_module2[3].bram_instance_n_21 ),
        .\write_count_reg[0]_26 (\generate_BRAM_module2[3].bram_instance_n_20 ),
        .\write_count_reg[0]_27 (\generate_BRAM_module2[3].bram_instance_n_19 ),
        .\write_count_reg[0]_28 (\generate_BRAM_module2[3].bram_instance_n_18 ),
        .\write_count_reg[0]_29 (\generate_BRAM_module2[3].bram_instance_n_17 ),
        .\write_count_reg[0]_3 (\generate_BRAM_module2[1].bram_instance_n_27 ),
        .\write_count_reg[0]_30 (\generate_BRAM_module2[3].bram_instance_n_0 ),
        .\write_count_reg[0]_4 (\generate_BRAM_module2[1].bram_instance_n_26 ),
        .\write_count_reg[0]_5 (\generate_BRAM_module2[1].bram_instance_n_25 ),
        .\write_count_reg[0]_6 (\generate_BRAM_module2[1].bram_instance_n_24 ),
        .\write_count_reg[0]_7 (\generate_BRAM_module2[1].bram_instance_n_23 ),
        .\write_count_reg[0]_8 (\generate_BRAM_module2[1].bram_instance_n_22 ),
        .\write_count_reg[0]_9 (\generate_BRAM_module2[1].bram_instance_n_21 ),
        .\write_count_reg[0]_rep (\generate_BRAM_module2[0].bram_instance_n_31 ),
        .\write_count_reg[0]_rep_0 (\generate_BRAM_module2[0].bram_instance_n_30 ),
        .\write_count_reg[0]_rep_1 (\generate_BRAM_module2[0].bram_instance_n_29 ),
        .\write_count_reg[0]_rep_10 (\generate_BRAM_module2[0].bram_instance_n_20 ),
        .\write_count_reg[0]_rep_11 (\generate_BRAM_module2[0].bram_instance_n_19 ),
        .\write_count_reg[0]_rep_12 (\generate_BRAM_module2[0].bram_instance_n_18 ),
        .\write_count_reg[0]_rep_13 (\generate_BRAM_module2[0].bram_instance_n_17 ),
        .\write_count_reg[0]_rep_14 (\generate_BRAM_module2[0].bram_instance_n_0 ),
        .\write_count_reg[0]_rep_15 (\generate_BRAM_module2[2].bram_instance_n_31 ),
        .\write_count_reg[0]_rep_16 (\generate_BRAM_module2[2].bram_instance_n_30 ),
        .\write_count_reg[0]_rep_17 (\generate_BRAM_module2[2].bram_instance_n_29 ),
        .\write_count_reg[0]_rep_18 (\generate_BRAM_module2[2].bram_instance_n_28 ),
        .\write_count_reg[0]_rep_19 (\generate_BRAM_module2[2].bram_instance_n_27 ),
        .\write_count_reg[0]_rep_2 (\generate_BRAM_module2[0].bram_instance_n_28 ),
        .\write_count_reg[0]_rep_20 (\generate_BRAM_module2[2].bram_instance_n_26 ),
        .\write_count_reg[0]_rep_21 (\generate_BRAM_module2[2].bram_instance_n_25 ),
        .\write_count_reg[0]_rep_22 (\generate_BRAM_module2[2].bram_instance_n_24 ),
        .\write_count_reg[0]_rep_23 (\generate_BRAM_module2[2].bram_instance_n_23 ),
        .\write_count_reg[0]_rep_24 (\generate_BRAM_module2[2].bram_instance_n_22 ),
        .\write_count_reg[0]_rep_25 (\generate_BRAM_module2[2].bram_instance_n_21 ),
        .\write_count_reg[0]_rep_26 (\generate_BRAM_module2[2].bram_instance_n_20 ),
        .\write_count_reg[0]_rep_27 (\generate_BRAM_module2[2].bram_instance_n_19 ),
        .\write_count_reg[0]_rep_28 (\generate_BRAM_module2[2].bram_instance_n_18 ),
        .\write_count_reg[0]_rep_29 (\generate_BRAM_module2[2].bram_instance_n_17 ),
        .\write_count_reg[0]_rep_3 (\generate_BRAM_module2[0].bram_instance_n_27 ),
        .\write_count_reg[0]_rep_30 (\generate_BRAM_module2[2].bram_instance_n_0 ),
        .\write_count_reg[0]_rep_4 (\generate_BRAM_module2[0].bram_instance_n_26 ),
        .\write_count_reg[0]_rep_5 (\generate_BRAM_module2[0].bram_instance_n_25 ),
        .\write_count_reg[0]_rep_6 (\generate_BRAM_module2[0].bram_instance_n_24 ),
        .\write_count_reg[0]_rep_7 (\generate_BRAM_module2[0].bram_instance_n_23 ),
        .\write_count_reg[0]_rep_8 (\generate_BRAM_module2[0].bram_instance_n_22 ),
        .\write_count_reg[0]_rep_9 (\generate_BRAM_module2[0].bram_instance_n_21 ));
  LUT1 #(
    .INIT(2'h1)) 
    \mul_count[0]_i_2 
       (.I0(read_OBUF[0]),
        .O(\mul_count[0]_i_2_n_0 ));
  (* ORIG_CELL_NAME = "mul_count_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_7 ),
        .Q(read_OBUF[0]),
        .R(1'b0));
  CARRY4 \mul_count_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\mul_count_reg[0]_i_1_n_0 ,\mul_count_reg[0]_i_1_n_1 ,\mul_count_reg[0]_i_1_n_2 ,\mul_count_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\mul_count_reg[0]_i_1_n_4 ,\mul_count_reg[0]_i_1_n_5 ,\mul_count_reg[0]_i_1_n_6 ,\mul_count_reg[0]_i_1_n_7 }),
        .S({\mul_count_reg[3]_rep_n_0 ,\mul_count_reg[2]_rep_n_0 ,\mul_count_reg[1]_rep_n_0 ,\mul_count[0]_i_2_n_0 }));
  (* ORIG_CELL_NAME = "mul_count_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[0]_rep 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_7 ),
        .Q(\mul_count_reg[0]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[0]_rep__0 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_7 ),
        .Q(\mul_count_reg[0]_rep__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[10] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[8]_i_1_n_5 ),
        .Q(\mul_count_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[11] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[8]_i_1_n_4 ),
        .Q(\mul_count_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[12] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[12]_i_1_n_7 ),
        .Q(\mul_count_reg_n_0_[12] ),
        .R(1'b0));
  CARRY4 \mul_count_reg[12]_i_1 
       (.CI(\mul_count_reg[8]_i_1_n_0 ),
        .CO({\mul_count_reg[12]_i_1_n_0 ,\mul_count_reg[12]_i_1_n_1 ,\mul_count_reg[12]_i_1_n_2 ,\mul_count_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\mul_count_reg[12]_i_1_n_4 ,\mul_count_reg[12]_i_1_n_5 ,\mul_count_reg[12]_i_1_n_6 ,\mul_count_reg[12]_i_1_n_7 }),
        .S({\mul_count_reg_n_0_[15] ,\mul_count_reg_n_0_[14] ,\mul_count_reg_n_0_[13] ,\mul_count_reg_n_0_[12] }));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[13] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[12]_i_1_n_6 ),
        .Q(\mul_count_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[14] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[12]_i_1_n_5 ),
        .Q(\mul_count_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[15] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[12]_i_1_n_4 ),
        .Q(\mul_count_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[16] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[16]_i_1_n_7 ),
        .Q(\mul_count_reg_n_0_[16] ),
        .R(1'b0));
  CARRY4 \mul_count_reg[16]_i_1 
       (.CI(\mul_count_reg[12]_i_1_n_0 ),
        .CO({\mul_count_reg[16]_i_1_n_0 ,\mul_count_reg[16]_i_1_n_1 ,\mul_count_reg[16]_i_1_n_2 ,\mul_count_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\mul_count_reg[16]_i_1_n_4 ,\mul_count_reg[16]_i_1_n_5 ,\mul_count_reg[16]_i_1_n_6 ,\mul_count_reg[16]_i_1_n_7 }),
        .S({\mul_count_reg_n_0_[19] ,\mul_count_reg_n_0_[18] ,\mul_count_reg_n_0_[17] ,\mul_count_reg_n_0_[16] }));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[17] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[16]_i_1_n_6 ),
        .Q(\mul_count_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[18] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[16]_i_1_n_5 ),
        .Q(\mul_count_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[19] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[16]_i_1_n_4 ),
        .Q(\mul_count_reg_n_0_[19] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_6 ),
        .Q(read_OBUF[1]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[1]_rep 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_6 ),
        .Q(\mul_count_reg[1]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[1]_rep__0 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_6 ),
        .Q(\mul_count_reg[1]_rep__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[20] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[20]_i_1_n_7 ),
        .Q(\mul_count_reg_n_0_[20] ),
        .R(1'b0));
  CARRY4 \mul_count_reg[20]_i_1 
       (.CI(\mul_count_reg[16]_i_1_n_0 ),
        .CO({\mul_count_reg[20]_i_1_n_0 ,\mul_count_reg[20]_i_1_n_1 ,\mul_count_reg[20]_i_1_n_2 ,\mul_count_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\mul_count_reg[20]_i_1_n_4 ,\mul_count_reg[20]_i_1_n_5 ,\mul_count_reg[20]_i_1_n_6 ,\mul_count_reg[20]_i_1_n_7 }),
        .S({\mul_count_reg_n_0_[23] ,\mul_count_reg_n_0_[22] ,\mul_count_reg_n_0_[21] ,\mul_count_reg_n_0_[20] }));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[21] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[20]_i_1_n_6 ),
        .Q(\mul_count_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[22] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[20]_i_1_n_5 ),
        .Q(\mul_count_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[23] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[20]_i_1_n_4 ),
        .Q(\mul_count_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[24] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[24]_i_1_n_7 ),
        .Q(\mul_count_reg_n_0_[24] ),
        .R(1'b0));
  CARRY4 \mul_count_reg[24]_i_1 
       (.CI(\mul_count_reg[20]_i_1_n_0 ),
        .CO({\mul_count_reg[24]_i_1_n_0 ,\mul_count_reg[24]_i_1_n_1 ,\mul_count_reg[24]_i_1_n_2 ,\mul_count_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\mul_count_reg[24]_i_1_n_4 ,\mul_count_reg[24]_i_1_n_5 ,\mul_count_reg[24]_i_1_n_6 ,\mul_count_reg[24]_i_1_n_7 }),
        .S({\mul_count_reg_n_0_[27] ,\mul_count_reg_n_0_[26] ,\mul_count_reg_n_0_[25] ,\mul_count_reg_n_0_[24] }));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[25] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[24]_i_1_n_6 ),
        .Q(\mul_count_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[26] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[24]_i_1_n_5 ),
        .Q(\mul_count_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[27] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[24]_i_1_n_4 ),
        .Q(\mul_count_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[28] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[28]_i_1_n_7 ),
        .Q(\mul_count_reg_n_0_[28] ),
        .R(1'b0));
  CARRY4 \mul_count_reg[28]_i_1 
       (.CI(\mul_count_reg[24]_i_1_n_0 ),
        .CO({\NLW_mul_count_reg[28]_i_1_CO_UNCONNECTED [3],\mul_count_reg[28]_i_1_n_1 ,\mul_count_reg[28]_i_1_n_2 ,\mul_count_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\mul_count_reg[28]_i_1_n_4 ,\mul_count_reg[28]_i_1_n_5 ,\mul_count_reg[28]_i_1_n_6 ,\mul_count_reg[28]_i_1_n_7 }),
        .S({\mul_count_reg_n_0_[31] ,\mul_count_reg_n_0_[30] ,\mul_count_reg_n_0_[29] ,\mul_count_reg_n_0_[28] }));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[29] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[28]_i_1_n_6 ),
        .Q(\mul_count_reg_n_0_[29] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[2]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_5 ),
        .Q(read_OBUF[2]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[2]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[2]_rep 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_5 ),
        .Q(\mul_count_reg[2]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[2]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[2]_rep__0 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_5 ),
        .Q(\mul_count_reg[2]_rep__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[30] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[28]_i_1_n_5 ),
        .Q(\mul_count_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[31] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[28]_i_1_n_4 ),
        .Q(\mul_count_reg_n_0_[31] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_4 ),
        .Q(read_OBUF[3]),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[3]_rep 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_4 ),
        .Q(\mul_count_reg[3]_rep_n_0 ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "mul_count_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[3]_rep__0 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[0]_i_1_n_4 ),
        .Q(\mul_count_reg[3]_rep__0_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[4] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[4]_i_1_n_7 ),
        .Q(read_OBUF[4]),
        .R(1'b0));
  CARRY4 \mul_count_reg[4]_i_1 
       (.CI(\mul_count_reg[0]_i_1_n_0 ),
        .CO({\mul_count_reg[4]_i_1_n_0 ,\mul_count_reg[4]_i_1_n_1 ,\mul_count_reg[4]_i_1_n_2 ,\mul_count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\mul_count_reg[4]_i_1_n_4 ,\mul_count_reg[4]_i_1_n_5 ,\mul_count_reg[4]_i_1_n_6 ,\mul_count_reg[4]_i_1_n_7 }),
        .S(read_OBUF[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[5] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[4]_i_1_n_6 ),
        .Q(read_OBUF[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[6] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[4]_i_1_n_5 ),
        .Q(read_OBUF[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[7] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[4]_i_1_n_4 ),
        .Q(read_OBUF[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[8] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[8]_i_1_n_7 ),
        .Q(\mul_count_reg_n_0_[8] ),
        .R(1'b0));
  CARRY4 \mul_count_reg[8]_i_1 
       (.CI(\mul_count_reg[4]_i_1_n_0 ),
        .CO({\mul_count_reg[8]_i_1_n_0 ,\mul_count_reg[8]_i_1_n_1 ,\mul_count_reg[8]_i_1_n_2 ,\mul_count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\mul_count_reg[8]_i_1_n_4 ,\mul_count_reg[8]_i_1_n_5 ,\mul_count_reg[8]_i_1_n_6 ,\mul_count_reg[8]_i_1_n_7 }),
        .S({\mul_count_reg_n_0_[11] ,\mul_count_reg_n_0_[10] ,\mul_count_reg_n_0_[9] ,\mul_count_reg_n_0_[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \mul_count_reg[9] 
       (.C(CLK_IBUF_BUFG),
        .CE(cestat_OBUF),
        .D(\mul_count_reg[8]_i_1_n_6 ),
        .Q(\mul_count_reg_n_0_[9] ),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h5AFE0AFE50F400F4)) 
    \present_state[0]_i_1 
       (.I0(state_OBUF[1]),
        .I1(start_bram_assign_IBUF),
        .I2(state_OBUF[0]),
        .I3(reset_IBUF),
        .I4(present_state1),
        .I5(present_state2),
        .O(\present_state[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hBBEAAAEA)) 
    \present_state[1]_i_1 
       (.I0(\present_state[1]_i_2_n_0 ),
        .I1(state_OBUF[0]),
        .I2(present_state1),
        .I3(state_OBUF[1]),
        .I4(present_state2),
        .O(\present_state[1]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \present_state[1]_i_10 
       (.I0(\mul_count_reg_n_0_[30] ),
        .I1(\mul_count_reg_n_0_[31] ),
        .O(\present_state[1]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_11 
       (.I0(\mul_count_reg_n_0_[29] ),
        .I1(\mul_count_reg_n_0_[28] ),
        .I2(\mul_count_reg_n_0_[27] ),
        .O(\present_state[1]_i_11_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_12 
       (.I0(\mul_count_reg_n_0_[26] ),
        .I1(\mul_count_reg_n_0_[25] ),
        .I2(\mul_count_reg_n_0_[24] ),
        .O(\present_state[1]_i_12_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_14 
       (.I0(\write_count_reg_n_0_[23] ),
        .I1(\write_count_reg_n_0_[22] ),
        .I2(\write_count_reg_n_0_[21] ),
        .O(\present_state[1]_i_14_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_15 
       (.I0(\write_count_reg_n_0_[20] ),
        .I1(\write_count_reg_n_0_[19] ),
        .I2(\write_count_reg_n_0_[18] ),
        .O(\present_state[1]_i_15_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_16 
       (.I0(\write_count_reg_n_0_[17] ),
        .I1(\write_count_reg_n_0_[16] ),
        .I2(\write_count_reg_n_0_[15] ),
        .O(\present_state[1]_i_16_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_17 
       (.I0(\write_count_reg_n_0_[14] ),
        .I1(\write_count_reg_n_0_[13] ),
        .I2(\write_count_reg_n_0_[12] ),
        .O(\present_state[1]_i_17_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_19 
       (.I0(\mul_count_reg_n_0_[23] ),
        .I1(\mul_count_reg_n_0_[22] ),
        .I2(\mul_count_reg_n_0_[21] ),
        .O(\present_state[1]_i_19_n_0 ));
  LUT5 #(
    .INIT(32'h0000AAAE)) 
    \present_state[1]_i_2 
       (.I0(state_OBUF[1]),
        .I1(start_mul_IBUF),
        .I2(start_bram_assign_IBUF),
        .I3(state_OBUF[0]),
        .I4(reset_IBUF),
        .O(\present_state[1]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_20 
       (.I0(\mul_count_reg_n_0_[20] ),
        .I1(\mul_count_reg_n_0_[19] ),
        .I2(\mul_count_reg_n_0_[18] ),
        .O(\present_state[1]_i_20_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_21 
       (.I0(\mul_count_reg_n_0_[17] ),
        .I1(\mul_count_reg_n_0_[16] ),
        .I2(\mul_count_reg_n_0_[15] ),
        .O(\present_state[1]_i_21_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_22 
       (.I0(\mul_count_reg_n_0_[14] ),
        .I1(\mul_count_reg_n_0_[13] ),
        .I2(\mul_count_reg_n_0_[12] ),
        .O(\present_state[1]_i_22_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_23 
       (.I0(\write_count_reg_n_0_[11] ),
        .I1(\write_count_reg_n_0_[10] ),
        .I2(\write_count_reg_n_0_[9] ),
        .O(\present_state[1]_i_23_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_24 
       (.I0(\write_count_reg_n_0_[8] ),
        .I1(\write_count_reg_n_0_[7] ),
        .I2(\write_count_reg_n_0_[6] ),
        .O(\present_state[1]_i_24_n_0 ));
  LUT3 #(
    .INIT(8'h10)) 
    \present_state[1]_i_25 
       (.I0(\write_count_reg_n_0_[5] ),
        .I1(\write_count_reg_n_0_[4] ),
        .I2(\write_count_reg_n_0_[3] ),
        .O(\present_state[1]_i_25_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_26 
       (.I0(\write_count_reg_n_0_[2] ),
        .I1(\write_count_reg_n_0_[1] ),
        .I2(\write_count_reg_n_0_[0] ),
        .O(\present_state[1]_i_26_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_27 
       (.I0(\mul_count_reg_n_0_[11] ),
        .I1(\mul_count_reg_n_0_[10] ),
        .I2(\mul_count_reg_n_0_[9] ),
        .O(\present_state[1]_i_27_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_28 
       (.I0(read_OBUF[7]),
        .I1(\mul_count_reg_n_0_[8] ),
        .I2(read_OBUF[6]),
        .O(\present_state[1]_i_28_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_29 
       (.I0(read_OBUF[5]),
        .I1(read_OBUF[4]),
        .I2(read_OBUF[3]),
        .O(\present_state[1]_i_29_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \present_state[1]_i_30 
       (.I0(read_OBUF[1]),
        .I1(read_OBUF[0]),
        .I2(read_OBUF[2]),
        .O(\present_state[1]_i_30_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \present_state[1]_i_6 
       (.I0(\write_count_reg_n_0_[30] ),
        .I1(\write_count_reg_n_0_[31] ),
        .O(\present_state[1]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_7 
       (.I0(\write_count_reg_n_0_[29] ),
        .I1(\write_count_reg_n_0_[28] ),
        .I2(\write_count_reg_n_0_[27] ),
        .O(\present_state[1]_i_7_n_0 ));
  LUT3 #(
    .INIT(8'h01)) 
    \present_state[1]_i_8 
       (.I0(\write_count_reg_n_0_[26] ),
        .I1(\write_count_reg_n_0_[25] ),
        .I2(\write_count_reg_n_0_[24] ),
        .O(\present_state[1]_i_8_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \present_state_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(\present_state[0]_i_1_n_0 ),
        .Q(state_OBUF[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \present_state_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(1'b1),
        .D(\present_state[1]_i_1_n_0 ),
        .Q(state_OBUF[1]),
        .R(1'b0));
  CARRY4 \present_state_reg[1]_i_13 
       (.CI(1'b0),
        .CO({\present_state_reg[1]_i_13_n_0 ,\present_state_reg[1]_i_13_n_1 ,\present_state_reg[1]_i_13_n_2 ,\present_state_reg[1]_i_13_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_present_state_reg[1]_i_13_O_UNCONNECTED [3:0]),
        .S({\present_state[1]_i_23_n_0 ,\present_state[1]_i_24_n_0 ,\present_state[1]_i_25_n_0 ,\present_state[1]_i_26_n_0 }));
  CARRY4 \present_state_reg[1]_i_18 
       (.CI(1'b0),
        .CO({\present_state_reg[1]_i_18_n_0 ,\present_state_reg[1]_i_18_n_1 ,\present_state_reg[1]_i_18_n_2 ,\present_state_reg[1]_i_18_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_present_state_reg[1]_i_18_O_UNCONNECTED [3:0]),
        .S({\present_state[1]_i_27_n_0 ,\present_state[1]_i_28_n_0 ,\present_state[1]_i_29_n_0 ,\present_state[1]_i_30_n_0 }));
  CARRY4 \present_state_reg[1]_i_3 
       (.CI(\present_state_reg[1]_i_5_n_0 ),
        .CO({\NLW_present_state_reg[1]_i_3_CO_UNCONNECTED [3],present_state1,\present_state_reg[1]_i_3_n_2 ,\present_state_reg[1]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_present_state_reg[1]_i_3_O_UNCONNECTED [3:0]),
        .S({1'b0,\present_state[1]_i_6_n_0 ,\present_state[1]_i_7_n_0 ,\present_state[1]_i_8_n_0 }));
  CARRY4 \present_state_reg[1]_i_4 
       (.CI(\present_state_reg[1]_i_9_n_0 ),
        .CO({\NLW_present_state_reg[1]_i_4_CO_UNCONNECTED [3],present_state2,\present_state_reg[1]_i_4_n_2 ,\present_state_reg[1]_i_4_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_present_state_reg[1]_i_4_O_UNCONNECTED [3:0]),
        .S({1'b0,\present_state[1]_i_10_n_0 ,\present_state[1]_i_11_n_0 ,\present_state[1]_i_12_n_0 }));
  CARRY4 \present_state_reg[1]_i_5 
       (.CI(\present_state_reg[1]_i_13_n_0 ),
        .CO({\present_state_reg[1]_i_5_n_0 ,\present_state_reg[1]_i_5_n_1 ,\present_state_reg[1]_i_5_n_2 ,\present_state_reg[1]_i_5_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_present_state_reg[1]_i_5_O_UNCONNECTED [3:0]),
        .S({\present_state[1]_i_14_n_0 ,\present_state[1]_i_15_n_0 ,\present_state[1]_i_16_n_0 ,\present_state[1]_i_17_n_0 }));
  CARRY4 \present_state_reg[1]_i_9 
       (.CI(\present_state_reg[1]_i_18_n_0 ),
        .CO({\present_state_reg[1]_i_9_n_0 ,\present_state_reg[1]_i_9_n_1 ,\present_state_reg[1]_i_9_n_2 ,\present_state_reg[1]_i_9_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_present_state_reg[1]_i_9_O_UNCONNECTED [3:0]),
        .S({\present_state[1]_i_19_n_0 ,\present_state[1]_i_20_n_0 ,\present_state[1]_i_21_n_0 ,\present_state[1]_i_22_n_0 }));
  OBUFT \r1[0][0]_INST_0 
       (.I(\r1[0]_OBUF [0]),
        .O(\r1[0] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][10]_INST_0 
       (.I(\r1[0]_OBUF [10]),
        .O(\r1[0] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][11]_INST_0 
       (.I(\r1[0]_OBUF [11]),
        .O(\r1[0] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][12]_INST_0 
       (.I(\r1[0]_OBUF [12]),
        .O(\r1[0] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][13]_INST_0 
       (.I(\r1[0]_OBUF [13]),
        .O(\r1[0] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][14]_INST_0 
       (.I(\r1[0]_OBUF [14]),
        .O(\r1[0] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][15]_INST_0 
       (.I(\r1[0]_OBUF [15]),
        .O(\r1[0] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][1]_INST_0 
       (.I(\r1[0]_OBUF [1]),
        .O(\r1[0] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][2]_INST_0 
       (.I(\r1[0]_OBUF [2]),
        .O(\r1[0] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][3]_INST_0 
       (.I(\r1[0]_OBUF [3]),
        .O(\r1[0] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][4]_INST_0 
       (.I(\r1[0]_OBUF [4]),
        .O(\r1[0] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][5]_INST_0 
       (.I(\r1[0]_OBUF [5]),
        .O(\r1[0] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][6]_INST_0 
       (.I(\r1[0]_OBUF [6]),
        .O(\r1[0] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][7]_INST_0 
       (.I(\r1[0]_OBUF [7]),
        .O(\r1[0] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][8]_INST_0 
       (.I(\r1[0]_OBUF [8]),
        .O(\r1[0] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[0][9]_INST_0 
       (.I(\r1[0]_OBUF [9]),
        .O(\r1[0] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][0]_INST_0 
       (.I(\r1[1]_OBUF [0]),
        .O(\r1[1] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][10]_INST_0 
       (.I(\r1[1]_OBUF [10]),
        .O(\r1[1] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][11]_INST_0 
       (.I(\r1[1]_OBUF [11]),
        .O(\r1[1] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][12]_INST_0 
       (.I(\r1[1]_OBUF [12]),
        .O(\r1[1] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][13]_INST_0 
       (.I(\r1[1]_OBUF [13]),
        .O(\r1[1] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][14]_INST_0 
       (.I(\r1[1]_OBUF [14]),
        .O(\r1[1] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][15]_INST_0 
       (.I(\r1[1]_OBUF [15]),
        .O(\r1[1] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][1]_INST_0 
       (.I(\r1[1]_OBUF [1]),
        .O(\r1[1] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][2]_INST_0 
       (.I(\r1[1]_OBUF [2]),
        .O(\r1[1] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][3]_INST_0 
       (.I(\r1[1]_OBUF [3]),
        .O(\r1[1] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][4]_INST_0 
       (.I(\r1[1]_OBUF [4]),
        .O(\r1[1] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][5]_INST_0 
       (.I(\r1[1]_OBUF [5]),
        .O(\r1[1] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][6]_INST_0 
       (.I(\r1[1]_OBUF [6]),
        .O(\r1[1] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][7]_INST_0 
       (.I(\r1[1]_OBUF [7]),
        .O(\r1[1] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][8]_INST_0 
       (.I(\r1[1]_OBUF [8]),
        .O(\r1[1] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[1][9]_INST_0 
       (.I(\r1[1]_OBUF [9]),
        .O(\r1[1] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][0]_INST_0 
       (.I(\r1[2]_OBUF [0]),
        .O(\r1[2] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][10]_INST_0 
       (.I(\r1[2]_OBUF [10]),
        .O(\r1[2] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][11]_INST_0 
       (.I(\r1[2]_OBUF [11]),
        .O(\r1[2] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][12]_INST_0 
       (.I(\r1[2]_OBUF [12]),
        .O(\r1[2] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][13]_INST_0 
       (.I(\r1[2]_OBUF [13]),
        .O(\r1[2] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][14]_INST_0 
       (.I(\r1[2]_OBUF [14]),
        .O(\r1[2] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][15]_INST_0 
       (.I(\r1[2]_OBUF [15]),
        .O(\r1[2] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][1]_INST_0 
       (.I(\r1[2]_OBUF [1]),
        .O(\r1[2] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][2]_INST_0 
       (.I(\r1[2]_OBUF [2]),
        .O(\r1[2] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][3]_INST_0 
       (.I(\r1[2]_OBUF [3]),
        .O(\r1[2] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][4]_INST_0 
       (.I(\r1[2]_OBUF [4]),
        .O(\r1[2] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][5]_INST_0 
       (.I(\r1[2]_OBUF [5]),
        .O(\r1[2] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][6]_INST_0 
       (.I(\r1[2]_OBUF [6]),
        .O(\r1[2] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][7]_INST_0 
       (.I(\r1[2]_OBUF [7]),
        .O(\r1[2] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][8]_INST_0 
       (.I(\r1[2]_OBUF [8]),
        .O(\r1[2] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[2][9]_INST_0 
       (.I(\r1[2]_OBUF [9]),
        .O(\r1[2] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][0]_INST_0 
       (.I(\r1[3]_OBUF [0]),
        .O(\r1[3] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][10]_INST_0 
       (.I(\r1[3]_OBUF [10]),
        .O(\r1[3] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][11]_INST_0 
       (.I(\r1[3]_OBUF [11]),
        .O(\r1[3] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][12]_INST_0 
       (.I(\r1[3]_OBUF [12]),
        .O(\r1[3] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][13]_INST_0 
       (.I(\r1[3]_OBUF [13]),
        .O(\r1[3] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][14]_INST_0 
       (.I(\r1[3]_OBUF [14]),
        .O(\r1[3] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][15]_INST_0 
       (.I(\r1[3]_OBUF [15]),
        .O(\r1[3] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \r1[3][15]_INST_0_i_1 
       (.I0(cestat_OBUF),
        .O(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][1]_INST_0 
       (.I(\r1[3]_OBUF [1]),
        .O(\r1[3] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][2]_INST_0 
       (.I(\r1[3]_OBUF [2]),
        .O(\r1[3] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][3]_INST_0 
       (.I(\r1[3]_OBUF [3]),
        .O(\r1[3] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][4]_INST_0 
       (.I(\r1[3]_OBUF [4]),
        .O(\r1[3] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][5]_INST_0 
       (.I(\r1[3]_OBUF [5]),
        .O(\r1[3] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][6]_INST_0 
       (.I(\r1[3]_OBUF [6]),
        .O(\r1[3] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][7]_INST_0 
       (.I(\r1[3]_OBUF [7]),
        .O(\r1[3] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][8]_INST_0 
       (.I(\r1[3]_OBUF [8]),
        .O(\r1[3] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r1[3][9]_INST_0 
       (.I(\r1[3]_OBUF [9]),
        .O(\r1[3] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][0]_INST_0 
       (.I(\r2[0]_OBUF [0]),
        .O(\r2[0] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][10]_INST_0 
       (.I(\r2[0]_OBUF [10]),
        .O(\r2[0] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][11]_INST_0 
       (.I(\r2[0]_OBUF [11]),
        .O(\r2[0] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][12]_INST_0 
       (.I(\r2[0]_OBUF [12]),
        .O(\r2[0] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][13]_INST_0 
       (.I(\r2[0]_OBUF [13]),
        .O(\r2[0] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][14]_INST_0 
       (.I(\r2[0]_OBUF [14]),
        .O(\r2[0] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][15]_INST_0 
       (.I(\r2[0]_OBUF [15]),
        .O(\r2[0] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][1]_INST_0 
       (.I(\r2[0]_OBUF [1]),
        .O(\r2[0] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][2]_INST_0 
       (.I(\r2[0]_OBUF [2]),
        .O(\r2[0] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][3]_INST_0 
       (.I(\r2[0]_OBUF [3]),
        .O(\r2[0] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][4]_INST_0 
       (.I(\r2[0]_OBUF [4]),
        .O(\r2[0] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][5]_INST_0 
       (.I(\r2[0]_OBUF [5]),
        .O(\r2[0] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][6]_INST_0 
       (.I(\r2[0]_OBUF [6]),
        .O(\r2[0] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][7]_INST_0 
       (.I(\r2[0]_OBUF [7]),
        .O(\r2[0] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][8]_INST_0 
       (.I(\r2[0]_OBUF [8]),
        .O(\r2[0] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[0][9]_INST_0 
       (.I(\r2[0]_OBUF [9]),
        .O(\r2[0] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][0]_INST_0 
       (.I(\r2[1]_OBUF [0]),
        .O(\r2[1] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][10]_INST_0 
       (.I(\r2[1]_OBUF [10]),
        .O(\r2[1] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][11]_INST_0 
       (.I(\r2[1]_OBUF [11]),
        .O(\r2[1] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][12]_INST_0 
       (.I(\r2[1]_OBUF [12]),
        .O(\r2[1] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][13]_INST_0 
       (.I(\r2[1]_OBUF [13]),
        .O(\r2[1] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][14]_INST_0 
       (.I(\r2[1]_OBUF [14]),
        .O(\r2[1] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][15]_INST_0 
       (.I(\r2[1]_OBUF [15]),
        .O(\r2[1] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][1]_INST_0 
       (.I(\r2[1]_OBUF [1]),
        .O(\r2[1] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][2]_INST_0 
       (.I(\r2[1]_OBUF [2]),
        .O(\r2[1] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][3]_INST_0 
       (.I(\r2[1]_OBUF [3]),
        .O(\r2[1] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][4]_INST_0 
       (.I(\r2[1]_OBUF [4]),
        .O(\r2[1] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][5]_INST_0 
       (.I(\r2[1]_OBUF [5]),
        .O(\r2[1] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][6]_INST_0 
       (.I(\r2[1]_OBUF [6]),
        .O(\r2[1] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][7]_INST_0 
       (.I(\r2[1]_OBUF [7]),
        .O(\r2[1] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][8]_INST_0 
       (.I(\r2[1]_OBUF [8]),
        .O(\r2[1] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[1][9]_INST_0 
       (.I(\r2[1]_OBUF [9]),
        .O(\r2[1] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][0]_INST_0 
       (.I(\r2[2]_OBUF [0]),
        .O(\r2[2] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][10]_INST_0 
       (.I(\r2[2]_OBUF [10]),
        .O(\r2[2] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][11]_INST_0 
       (.I(\r2[2]_OBUF [11]),
        .O(\r2[2] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][12]_INST_0 
       (.I(\r2[2]_OBUF [12]),
        .O(\r2[2] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][13]_INST_0 
       (.I(\r2[2]_OBUF [13]),
        .O(\r2[2] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][14]_INST_0 
       (.I(\r2[2]_OBUF [14]),
        .O(\r2[2] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][15]_INST_0 
       (.I(\r2[2]_OBUF [15]),
        .O(\r2[2] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][1]_INST_0 
       (.I(\r2[2]_OBUF [1]),
        .O(\r2[2] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][2]_INST_0 
       (.I(\r2[2]_OBUF [2]),
        .O(\r2[2] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][3]_INST_0 
       (.I(\r2[2]_OBUF [3]),
        .O(\r2[2] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][4]_INST_0 
       (.I(\r2[2]_OBUF [4]),
        .O(\r2[2] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][5]_INST_0 
       (.I(\r2[2]_OBUF [5]),
        .O(\r2[2] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][6]_INST_0 
       (.I(\r2[2]_OBUF [6]),
        .O(\r2[2] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][7]_INST_0 
       (.I(\r2[2]_OBUF [7]),
        .O(\r2[2] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][8]_INST_0 
       (.I(\r2[2]_OBUF [8]),
        .O(\r2[2] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[2][9]_INST_0 
       (.I(\r2[2]_OBUF [9]),
        .O(\r2[2] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][0]_INST_0 
       (.I(\r2[3]_OBUF [0]),
        .O(\r2[3] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][10]_INST_0 
       (.I(\r2[3]_OBUF [10]),
        .O(\r2[3] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][11]_INST_0 
       (.I(\r2[3]_OBUF [11]),
        .O(\r2[3] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][12]_INST_0 
       (.I(\r2[3]_OBUF [12]),
        .O(\r2[3] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][13]_INST_0 
       (.I(\r2[3]_OBUF [13]),
        .O(\r2[3] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][14]_INST_0 
       (.I(\r2[3]_OBUF [14]),
        .O(\r2[3] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][15]_INST_0 
       (.I(\r2[3]_OBUF [15]),
        .O(\r2[3] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][1]_INST_0 
       (.I(\r2[3]_OBUF [1]),
        .O(\r2[3] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][2]_INST_0 
       (.I(\r2[3]_OBUF [2]),
        .O(\r2[3] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][3]_INST_0 
       (.I(\r2[3]_OBUF [3]),
        .O(\r2[3] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][4]_INST_0 
       (.I(\r2[3]_OBUF [4]),
        .O(\r2[3] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][5]_INST_0 
       (.I(\r2[3]_OBUF [5]),
        .O(\r2[3] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][6]_INST_0 
       (.I(\r2[3]_OBUF [6]),
        .O(\r2[3] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][7]_INST_0 
       (.I(\r2[3]_OBUF [7]),
        .O(\r2[3] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][8]_INST_0 
       (.I(\r2[3]_OBUF [8]),
        .O(\r2[3] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r2[3][9]_INST_0 
       (.I(\r2[3]_OBUF [9]),
        .O(\r2[3] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][0]_INST_0 
       (.I(\r3[0]_OBUF [0]),
        .O(\r3[0] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][10]_INST_0 
       (.I(\r3[0]_OBUF [10]),
        .O(\r3[0] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][11]_INST_0 
       (.I(\r3[0]_OBUF [11]),
        .O(\r3[0] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][12]_INST_0 
       (.I(\r3[0]_OBUF [12]),
        .O(\r3[0] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][13]_INST_0 
       (.I(\r3[0]_OBUF [13]),
        .O(\r3[0] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][14]_INST_0 
       (.I(\r3[0]_OBUF [14]),
        .O(\r3[0] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][15]_INST_0 
       (.I(\r3[0]_OBUF [15]),
        .O(\r3[0] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][1]_INST_0 
       (.I(\r3[0]_OBUF [1]),
        .O(\r3[0] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][2]_INST_0 
       (.I(\r3[0]_OBUF [2]),
        .O(\r3[0] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][3]_INST_0 
       (.I(\r3[0]_OBUF [3]),
        .O(\r3[0] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][4]_INST_0 
       (.I(\r3[0]_OBUF [4]),
        .O(\r3[0] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][5]_INST_0 
       (.I(\r3[0]_OBUF [5]),
        .O(\r3[0] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][6]_INST_0 
       (.I(\r3[0]_OBUF [6]),
        .O(\r3[0] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][7]_INST_0 
       (.I(\r3[0]_OBUF [7]),
        .O(\r3[0] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][8]_INST_0 
       (.I(\r3[0]_OBUF [8]),
        .O(\r3[0] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[0][9]_INST_0 
       (.I(\r3[0]_OBUF [9]),
        .O(\r3[0] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][0]_INST_0 
       (.I(\r3[1]_OBUF [0]),
        .O(\r3[1] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][10]_INST_0 
       (.I(\r3[1]_OBUF [10]),
        .O(\r3[1] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][11]_INST_0 
       (.I(\r3[1]_OBUF [11]),
        .O(\r3[1] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][12]_INST_0 
       (.I(\r3[1]_OBUF [12]),
        .O(\r3[1] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][13]_INST_0 
       (.I(\r3[1]_OBUF [13]),
        .O(\r3[1] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][14]_INST_0 
       (.I(\r3[1]_OBUF [14]),
        .O(\r3[1] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][15]_INST_0 
       (.I(\r3[1]_OBUF [15]),
        .O(\r3[1] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][1]_INST_0 
       (.I(\r3[1]_OBUF [1]),
        .O(\r3[1] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][2]_INST_0 
       (.I(\r3[1]_OBUF [2]),
        .O(\r3[1] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][3]_INST_0 
       (.I(\r3[1]_OBUF [3]),
        .O(\r3[1] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][4]_INST_0 
       (.I(\r3[1]_OBUF [4]),
        .O(\r3[1] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][5]_INST_0 
       (.I(\r3[1]_OBUF [5]),
        .O(\r3[1] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][6]_INST_0 
       (.I(\r3[1]_OBUF [6]),
        .O(\r3[1] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][7]_INST_0 
       (.I(\r3[1]_OBUF [7]),
        .O(\r3[1] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][8]_INST_0 
       (.I(\r3[1]_OBUF [8]),
        .O(\r3[1] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[1][9]_INST_0 
       (.I(\r3[1]_OBUF [9]),
        .O(\r3[1] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][0]_INST_0 
       (.I(\r3[2]_OBUF [0]),
        .O(\r3[2] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][10]_INST_0 
       (.I(\r3[2]_OBUF [10]),
        .O(\r3[2] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][11]_INST_0 
       (.I(\r3[2]_OBUF [11]),
        .O(\r3[2] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][12]_INST_0 
       (.I(\r3[2]_OBUF [12]),
        .O(\r3[2] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][13]_INST_0 
       (.I(\r3[2]_OBUF [13]),
        .O(\r3[2] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][14]_INST_0 
       (.I(\r3[2]_OBUF [14]),
        .O(\r3[2] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][15]_INST_0 
       (.I(\r3[2]_OBUF [15]),
        .O(\r3[2] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][1]_INST_0 
       (.I(\r3[2]_OBUF [1]),
        .O(\r3[2] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][2]_INST_0 
       (.I(\r3[2]_OBUF [2]),
        .O(\r3[2] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][3]_INST_0 
       (.I(\r3[2]_OBUF [3]),
        .O(\r3[2] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][4]_INST_0 
       (.I(\r3[2]_OBUF [4]),
        .O(\r3[2] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][5]_INST_0 
       (.I(\r3[2]_OBUF [5]),
        .O(\r3[2] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][6]_INST_0 
       (.I(\r3[2]_OBUF [6]),
        .O(\r3[2] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][7]_INST_0 
       (.I(\r3[2]_OBUF [7]),
        .O(\r3[2] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][8]_INST_0 
       (.I(\r3[2]_OBUF [8]),
        .O(\r3[2] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[2][9]_INST_0 
       (.I(\r3[2]_OBUF [9]),
        .O(\r3[2] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][0]_INST_0 
       (.I(\r3[3]_OBUF [0]),
        .O(\r3[3] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][10]_INST_0 
       (.I(\r3[3]_OBUF [10]),
        .O(\r3[3] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][11]_INST_0 
       (.I(\r3[3]_OBUF [11]),
        .O(\r3[3] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][12]_INST_0 
       (.I(\r3[3]_OBUF [12]),
        .O(\r3[3] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][13]_INST_0 
       (.I(\r3[3]_OBUF [13]),
        .O(\r3[3] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][14]_INST_0 
       (.I(\r3[3]_OBUF [14]),
        .O(\r3[3] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][15]_INST_0 
       (.I(\r3[3]_OBUF [15]),
        .O(\r3[3] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][1]_INST_0 
       (.I(\r3[3]_OBUF [1]),
        .O(\r3[3] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][2]_INST_0 
       (.I(\r3[3]_OBUF [2]),
        .O(\r3[3] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][3]_INST_0 
       (.I(\r3[3]_OBUF [3]),
        .O(\r3[3] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][4]_INST_0 
       (.I(\r3[3]_OBUF [4]),
        .O(\r3[3] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][5]_INST_0 
       (.I(\r3[3]_OBUF [5]),
        .O(\r3[3] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][6]_INST_0 
       (.I(\r3[3]_OBUF [6]),
        .O(\r3[3] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][7]_INST_0 
       (.I(\r3[3]_OBUF [7]),
        .O(\r3[3] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][8]_INST_0 
       (.I(\r3[3]_OBUF [8]),
        .O(\r3[3] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r3[3][9]_INST_0 
       (.I(\r3[3]_OBUF [9]),
        .O(\r3[3] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][0]_INST_0 
       (.I(\r4[0]_OBUF [0]),
        .O(\r4[0] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][10]_INST_0 
       (.I(\r4[0]_OBUF [10]),
        .O(\r4[0] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][11]_INST_0 
       (.I(\r4[0]_OBUF [11]),
        .O(\r4[0] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][12]_INST_0 
       (.I(\r4[0]_OBUF [12]),
        .O(\r4[0] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][13]_INST_0 
       (.I(\r4[0]_OBUF [13]),
        .O(\r4[0] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][14]_INST_0 
       (.I(\r4[0]_OBUF [14]),
        .O(\r4[0] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][15]_INST_0 
       (.I(\r4[0]_OBUF [15]),
        .O(\r4[0] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][1]_INST_0 
       (.I(\r4[0]_OBUF [1]),
        .O(\r4[0] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][2]_INST_0 
       (.I(\r4[0]_OBUF [2]),
        .O(\r4[0] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][3]_INST_0 
       (.I(\r4[0]_OBUF [3]),
        .O(\r4[0] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][4]_INST_0 
       (.I(\r4[0]_OBUF [4]),
        .O(\r4[0] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][5]_INST_0 
       (.I(\r4[0]_OBUF [5]),
        .O(\r4[0] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][6]_INST_0 
       (.I(\r4[0]_OBUF [6]),
        .O(\r4[0] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][7]_INST_0 
       (.I(\r4[0]_OBUF [7]),
        .O(\r4[0] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][8]_INST_0 
       (.I(\r4[0]_OBUF [8]),
        .O(\r4[0] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[0][9]_INST_0 
       (.I(\r4[0]_OBUF [9]),
        .O(\r4[0] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][0]_INST_0 
       (.I(\r4[1]_OBUF [0]),
        .O(\r4[1] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][10]_INST_0 
       (.I(\r4[1]_OBUF [10]),
        .O(\r4[1] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][11]_INST_0 
       (.I(\r4[1]_OBUF [11]),
        .O(\r4[1] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][12]_INST_0 
       (.I(\r4[1]_OBUF [12]),
        .O(\r4[1] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][13]_INST_0 
       (.I(\r4[1]_OBUF [13]),
        .O(\r4[1] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][14]_INST_0 
       (.I(\r4[1]_OBUF [14]),
        .O(\r4[1] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][15]_INST_0 
       (.I(\r4[1]_OBUF [15]),
        .O(\r4[1] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][1]_INST_0 
       (.I(\r4[1]_OBUF [1]),
        .O(\r4[1] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][2]_INST_0 
       (.I(\r4[1]_OBUF [2]),
        .O(\r4[1] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][3]_INST_0 
       (.I(\r4[1]_OBUF [3]),
        .O(\r4[1] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][4]_INST_0 
       (.I(\r4[1]_OBUF [4]),
        .O(\r4[1] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][5]_INST_0 
       (.I(\r4[1]_OBUF [5]),
        .O(\r4[1] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][6]_INST_0 
       (.I(\r4[1]_OBUF [6]),
        .O(\r4[1] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][7]_INST_0 
       (.I(\r4[1]_OBUF [7]),
        .O(\r4[1] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][8]_INST_0 
       (.I(\r4[1]_OBUF [8]),
        .O(\r4[1] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[1][9]_INST_0 
       (.I(\r4[1]_OBUF [9]),
        .O(\r4[1] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][0]_INST_0 
       (.I(\r4[2]_OBUF [0]),
        .O(\r4[2] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][10]_INST_0 
       (.I(\r4[2]_OBUF [10]),
        .O(\r4[2] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][11]_INST_0 
       (.I(\r4[2]_OBUF [11]),
        .O(\r4[2] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][12]_INST_0 
       (.I(\r4[2]_OBUF [12]),
        .O(\r4[2] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][13]_INST_0 
       (.I(\r4[2]_OBUF [13]),
        .O(\r4[2] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][14]_INST_0 
       (.I(\r4[2]_OBUF [14]),
        .O(\r4[2] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][15]_INST_0 
       (.I(\r4[2]_OBUF [15]),
        .O(\r4[2] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][1]_INST_0 
       (.I(\r4[2]_OBUF [1]),
        .O(\r4[2] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][2]_INST_0 
       (.I(\r4[2]_OBUF [2]),
        .O(\r4[2] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][3]_INST_0 
       (.I(\r4[2]_OBUF [3]),
        .O(\r4[2] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][4]_INST_0 
       (.I(\r4[2]_OBUF [4]),
        .O(\r4[2] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][5]_INST_0 
       (.I(\r4[2]_OBUF [5]),
        .O(\r4[2] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][6]_INST_0 
       (.I(\r4[2]_OBUF [6]),
        .O(\r4[2] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][7]_INST_0 
       (.I(\r4[2]_OBUF [7]),
        .O(\r4[2] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][8]_INST_0 
       (.I(\r4[2]_OBUF [8]),
        .O(\r4[2] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[2][9]_INST_0 
       (.I(\r4[2]_OBUF [9]),
        .O(\r4[2] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][0]_INST_0 
       (.I(\r4[3]_OBUF [0]),
        .O(\r4[3] [0]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][10]_INST_0 
       (.I(\r4[3]_OBUF [10]),
        .O(\r4[3] [10]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][11]_INST_0 
       (.I(\r4[3]_OBUF [11]),
        .O(\r4[3] [11]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][12]_INST_0 
       (.I(\r4[3]_OBUF [12]),
        .O(\r4[3] [12]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][13]_INST_0 
       (.I(\r4[3]_OBUF [13]),
        .O(\r4[3] [13]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][14]_INST_0 
       (.I(\r4[3]_OBUF [14]),
        .O(\r4[3] [14]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][15]_INST_0 
       (.I(\r4[3]_OBUF [15]),
        .O(\r4[3] [15]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][1]_INST_0 
       (.I(\r4[3]_OBUF [1]),
        .O(\r4[3] [1]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][2]_INST_0 
       (.I(\r4[3]_OBUF [2]),
        .O(\r4[3] [2]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][3]_INST_0 
       (.I(\r4[3]_OBUF [3]),
        .O(\r4[3] [3]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][4]_INST_0 
       (.I(\r4[3]_OBUF [4]),
        .O(\r4[3] [4]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][5]_INST_0 
       (.I(\r4[3]_OBUF [5]),
        .O(\r4[3] [5]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][6]_INST_0 
       (.I(\r4[3]_OBUF [6]),
        .O(\r4[3] [6]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][7]_INST_0 
       (.I(\r4[3]_OBUF [7]),
        .O(\r4[3] [7]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][8]_INST_0 
       (.I(\r4[3]_OBUF [8]),
        .O(\r4[3] [8]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  OBUFT \r4[3][9]_INST_0 
       (.I(\r4[3]_OBUF [9]),
        .O(\r4[3] [9]),
        .T(\r1[3][15]_INST_0_i_1_n_0 ));
  IBUF ram_reg_0_15_0_0_i_1
       (.I(\wv1[3] [0]),
        .O(ram_reg_0_15_0_0_i_1_n_0));
  IBUF ram_reg_0_15_0_0_i_1__0
       (.I(\wv1[2] [0]),
        .O(ram_reg_0_15_0_0_i_1__0_n_0));
  IBUF ram_reg_0_15_0_0_i_1__1
       (.I(\wv1[1] [0]),
        .O(ram_reg_0_15_0_0_i_1__1_n_0));
  IBUF ram_reg_0_15_0_0_i_1__10
       (.I(\wv3[0] [0]),
        .O(ram_reg_0_15_0_0_i_1__10_n_0));
  IBUF ram_reg_0_15_0_0_i_1__11
       (.I(\wv4[3] [0]),
        .O(ram_reg_0_15_0_0_i_1__11_n_0));
  IBUF ram_reg_0_15_0_0_i_1__12
       (.I(\wv4[2] [0]),
        .O(ram_reg_0_15_0_0_i_1__12_n_0));
  IBUF ram_reg_0_15_0_0_i_1__13
       (.I(\wv4[1] [0]),
        .O(ram_reg_0_15_0_0_i_1__13_n_0));
  IBUF ram_reg_0_15_0_0_i_1__14
       (.I(\wv4[0] [0]),
        .O(ram_reg_0_15_0_0_i_1__14_n_0));
  IBUF ram_reg_0_15_0_0_i_1__2
       (.I(\wv1[0] [0]),
        .O(ram_reg_0_15_0_0_i_1__2_n_0));
  IBUF ram_reg_0_15_0_0_i_1__3
       (.I(\wv2[3] [0]),
        .O(ram_reg_0_15_0_0_i_1__3_n_0));
  IBUF ram_reg_0_15_0_0_i_1__4
       (.I(\wv2[2] [0]),
        .O(ram_reg_0_15_0_0_i_1__4_n_0));
  IBUF ram_reg_0_15_0_0_i_1__5
       (.I(\wv2[1] [0]),
        .O(ram_reg_0_15_0_0_i_1__5_n_0));
  IBUF ram_reg_0_15_0_0_i_1__6
       (.I(\wv2[0] [0]),
        .O(ram_reg_0_15_0_0_i_1__6_n_0));
  IBUF ram_reg_0_15_0_0_i_1__7
       (.I(\wv3[3] [0]),
        .O(ram_reg_0_15_0_0_i_1__7_n_0));
  IBUF ram_reg_0_15_0_0_i_1__8
       (.I(\wv3[2] [0]),
        .O(ram_reg_0_15_0_0_i_1__8_n_0));
  IBUF ram_reg_0_15_0_0_i_1__9
       (.I(\wv3[1] [0]),
        .O(ram_reg_0_15_0_0_i_1__9_n_0));
  IBUF ram_reg_0_15_10_10_i_1
       (.I(\wv1[3] [10]),
        .O(ram_reg_0_15_10_10_i_1_n_0));
  IBUF ram_reg_0_15_10_10_i_1__0
       (.I(\wv1[2] [10]),
        .O(ram_reg_0_15_10_10_i_1__0_n_0));
  IBUF ram_reg_0_15_10_10_i_1__1
       (.I(\wv1[1] [10]),
        .O(ram_reg_0_15_10_10_i_1__1_n_0));
  IBUF ram_reg_0_15_10_10_i_1__10
       (.I(\wv3[0] [10]),
        .O(ram_reg_0_15_10_10_i_1__10_n_0));
  IBUF ram_reg_0_15_10_10_i_1__11
       (.I(\wv4[3] [10]),
        .O(ram_reg_0_15_10_10_i_1__11_n_0));
  IBUF ram_reg_0_15_10_10_i_1__12
       (.I(\wv4[2] [10]),
        .O(ram_reg_0_15_10_10_i_1__12_n_0));
  IBUF ram_reg_0_15_10_10_i_1__13
       (.I(\wv4[1] [10]),
        .O(ram_reg_0_15_10_10_i_1__13_n_0));
  IBUF ram_reg_0_15_10_10_i_1__14
       (.I(\wv4[0] [10]),
        .O(ram_reg_0_15_10_10_i_1__14_n_0));
  IBUF ram_reg_0_15_10_10_i_1__2
       (.I(\wv1[0] [10]),
        .O(ram_reg_0_15_10_10_i_1__2_n_0));
  IBUF ram_reg_0_15_10_10_i_1__3
       (.I(\wv2[3] [10]),
        .O(ram_reg_0_15_10_10_i_1__3_n_0));
  IBUF ram_reg_0_15_10_10_i_1__4
       (.I(\wv2[2] [10]),
        .O(ram_reg_0_15_10_10_i_1__4_n_0));
  IBUF ram_reg_0_15_10_10_i_1__5
       (.I(\wv2[1] [10]),
        .O(ram_reg_0_15_10_10_i_1__5_n_0));
  IBUF ram_reg_0_15_10_10_i_1__6
       (.I(\wv2[0] [10]),
        .O(ram_reg_0_15_10_10_i_1__6_n_0));
  IBUF ram_reg_0_15_10_10_i_1__7
       (.I(\wv3[3] [10]),
        .O(ram_reg_0_15_10_10_i_1__7_n_0));
  IBUF ram_reg_0_15_10_10_i_1__8
       (.I(\wv3[2] [10]),
        .O(ram_reg_0_15_10_10_i_1__8_n_0));
  IBUF ram_reg_0_15_10_10_i_1__9
       (.I(\wv3[1] [10]),
        .O(ram_reg_0_15_10_10_i_1__9_n_0));
  IBUF ram_reg_0_15_11_11_i_1
       (.I(\wv1[3] [11]),
        .O(ram_reg_0_15_11_11_i_1_n_0));
  IBUF ram_reg_0_15_11_11_i_1__0
       (.I(\wv1[2] [11]),
        .O(ram_reg_0_15_11_11_i_1__0_n_0));
  IBUF ram_reg_0_15_11_11_i_1__1
       (.I(\wv1[1] [11]),
        .O(ram_reg_0_15_11_11_i_1__1_n_0));
  IBUF ram_reg_0_15_11_11_i_1__10
       (.I(\wv3[0] [11]),
        .O(ram_reg_0_15_11_11_i_1__10_n_0));
  IBUF ram_reg_0_15_11_11_i_1__11
       (.I(\wv4[3] [11]),
        .O(ram_reg_0_15_11_11_i_1__11_n_0));
  IBUF ram_reg_0_15_11_11_i_1__12
       (.I(\wv4[2] [11]),
        .O(ram_reg_0_15_11_11_i_1__12_n_0));
  IBUF ram_reg_0_15_11_11_i_1__13
       (.I(\wv4[1] [11]),
        .O(ram_reg_0_15_11_11_i_1__13_n_0));
  IBUF ram_reg_0_15_11_11_i_1__14
       (.I(\wv4[0] [11]),
        .O(ram_reg_0_15_11_11_i_1__14_n_0));
  IBUF ram_reg_0_15_11_11_i_1__2
       (.I(\wv1[0] [11]),
        .O(ram_reg_0_15_11_11_i_1__2_n_0));
  IBUF ram_reg_0_15_11_11_i_1__3
       (.I(\wv2[3] [11]),
        .O(ram_reg_0_15_11_11_i_1__3_n_0));
  IBUF ram_reg_0_15_11_11_i_1__4
       (.I(\wv2[2] [11]),
        .O(ram_reg_0_15_11_11_i_1__4_n_0));
  IBUF ram_reg_0_15_11_11_i_1__5
       (.I(\wv2[1] [11]),
        .O(ram_reg_0_15_11_11_i_1__5_n_0));
  IBUF ram_reg_0_15_11_11_i_1__6
       (.I(\wv2[0] [11]),
        .O(ram_reg_0_15_11_11_i_1__6_n_0));
  IBUF ram_reg_0_15_11_11_i_1__7
       (.I(\wv3[3] [11]),
        .O(ram_reg_0_15_11_11_i_1__7_n_0));
  IBUF ram_reg_0_15_11_11_i_1__8
       (.I(\wv3[2] [11]),
        .O(ram_reg_0_15_11_11_i_1__8_n_0));
  IBUF ram_reg_0_15_11_11_i_1__9
       (.I(\wv3[1] [11]),
        .O(ram_reg_0_15_11_11_i_1__9_n_0));
  IBUF ram_reg_0_15_12_12_i_1
       (.I(\wv1[3] [12]),
        .O(ram_reg_0_15_12_12_i_1_n_0));
  IBUF ram_reg_0_15_12_12_i_1__0
       (.I(\wv1[2] [12]),
        .O(ram_reg_0_15_12_12_i_1__0_n_0));
  IBUF ram_reg_0_15_12_12_i_1__1
       (.I(\wv1[1] [12]),
        .O(ram_reg_0_15_12_12_i_1__1_n_0));
  IBUF ram_reg_0_15_12_12_i_1__10
       (.I(\wv3[0] [12]),
        .O(ram_reg_0_15_12_12_i_1__10_n_0));
  IBUF ram_reg_0_15_12_12_i_1__11
       (.I(\wv4[3] [12]),
        .O(ram_reg_0_15_12_12_i_1__11_n_0));
  IBUF ram_reg_0_15_12_12_i_1__12
       (.I(\wv4[2] [12]),
        .O(ram_reg_0_15_12_12_i_1__12_n_0));
  IBUF ram_reg_0_15_12_12_i_1__13
       (.I(\wv4[1] [12]),
        .O(ram_reg_0_15_12_12_i_1__13_n_0));
  IBUF ram_reg_0_15_12_12_i_1__14
       (.I(\wv4[0] [12]),
        .O(ram_reg_0_15_12_12_i_1__14_n_0));
  IBUF ram_reg_0_15_12_12_i_1__2
       (.I(\wv1[0] [12]),
        .O(ram_reg_0_15_12_12_i_1__2_n_0));
  IBUF ram_reg_0_15_12_12_i_1__3
       (.I(\wv2[3] [12]),
        .O(ram_reg_0_15_12_12_i_1__3_n_0));
  IBUF ram_reg_0_15_12_12_i_1__4
       (.I(\wv2[2] [12]),
        .O(ram_reg_0_15_12_12_i_1__4_n_0));
  IBUF ram_reg_0_15_12_12_i_1__5
       (.I(\wv2[1] [12]),
        .O(ram_reg_0_15_12_12_i_1__5_n_0));
  IBUF ram_reg_0_15_12_12_i_1__6
       (.I(\wv2[0] [12]),
        .O(ram_reg_0_15_12_12_i_1__6_n_0));
  IBUF ram_reg_0_15_12_12_i_1__7
       (.I(\wv3[3] [12]),
        .O(ram_reg_0_15_12_12_i_1__7_n_0));
  IBUF ram_reg_0_15_12_12_i_1__8
       (.I(\wv3[2] [12]),
        .O(ram_reg_0_15_12_12_i_1__8_n_0));
  IBUF ram_reg_0_15_12_12_i_1__9
       (.I(\wv3[1] [12]),
        .O(ram_reg_0_15_12_12_i_1__9_n_0));
  IBUF ram_reg_0_15_13_13_i_1
       (.I(\wv1[3] [13]),
        .O(ram_reg_0_15_13_13_i_1_n_0));
  IBUF ram_reg_0_15_13_13_i_1__0
       (.I(\wv1[2] [13]),
        .O(ram_reg_0_15_13_13_i_1__0_n_0));
  IBUF ram_reg_0_15_13_13_i_1__1
       (.I(\wv1[1] [13]),
        .O(ram_reg_0_15_13_13_i_1__1_n_0));
  IBUF ram_reg_0_15_13_13_i_1__10
       (.I(\wv3[0] [13]),
        .O(ram_reg_0_15_13_13_i_1__10_n_0));
  IBUF ram_reg_0_15_13_13_i_1__11
       (.I(\wv4[3] [13]),
        .O(ram_reg_0_15_13_13_i_1__11_n_0));
  IBUF ram_reg_0_15_13_13_i_1__12
       (.I(\wv4[2] [13]),
        .O(ram_reg_0_15_13_13_i_1__12_n_0));
  IBUF ram_reg_0_15_13_13_i_1__13
       (.I(\wv4[1] [13]),
        .O(ram_reg_0_15_13_13_i_1__13_n_0));
  IBUF ram_reg_0_15_13_13_i_1__14
       (.I(\wv4[0] [13]),
        .O(ram_reg_0_15_13_13_i_1__14_n_0));
  IBUF ram_reg_0_15_13_13_i_1__2
       (.I(\wv1[0] [13]),
        .O(ram_reg_0_15_13_13_i_1__2_n_0));
  IBUF ram_reg_0_15_13_13_i_1__3
       (.I(\wv2[3] [13]),
        .O(ram_reg_0_15_13_13_i_1__3_n_0));
  IBUF ram_reg_0_15_13_13_i_1__4
       (.I(\wv2[2] [13]),
        .O(ram_reg_0_15_13_13_i_1__4_n_0));
  IBUF ram_reg_0_15_13_13_i_1__5
       (.I(\wv2[1] [13]),
        .O(ram_reg_0_15_13_13_i_1__5_n_0));
  IBUF ram_reg_0_15_13_13_i_1__6
       (.I(\wv2[0] [13]),
        .O(ram_reg_0_15_13_13_i_1__6_n_0));
  IBUF ram_reg_0_15_13_13_i_1__7
       (.I(\wv3[3] [13]),
        .O(ram_reg_0_15_13_13_i_1__7_n_0));
  IBUF ram_reg_0_15_13_13_i_1__8
       (.I(\wv3[2] [13]),
        .O(ram_reg_0_15_13_13_i_1__8_n_0));
  IBUF ram_reg_0_15_13_13_i_1__9
       (.I(\wv3[1] [13]),
        .O(ram_reg_0_15_13_13_i_1__9_n_0));
  IBUF ram_reg_0_15_14_14_i_1
       (.I(\wv1[3] [14]),
        .O(ram_reg_0_15_14_14_i_1_n_0));
  IBUF ram_reg_0_15_14_14_i_1__0
       (.I(\wv1[2] [14]),
        .O(ram_reg_0_15_14_14_i_1__0_n_0));
  IBUF ram_reg_0_15_14_14_i_1__1
       (.I(\wv1[1] [14]),
        .O(ram_reg_0_15_14_14_i_1__1_n_0));
  IBUF ram_reg_0_15_14_14_i_1__10
       (.I(\wv3[0] [14]),
        .O(ram_reg_0_15_14_14_i_1__10_n_0));
  IBUF ram_reg_0_15_14_14_i_1__11
       (.I(\wv4[3] [14]),
        .O(ram_reg_0_15_14_14_i_1__11_n_0));
  IBUF ram_reg_0_15_14_14_i_1__12
       (.I(\wv4[2] [14]),
        .O(ram_reg_0_15_14_14_i_1__12_n_0));
  IBUF ram_reg_0_15_14_14_i_1__13
       (.I(\wv4[1] [14]),
        .O(ram_reg_0_15_14_14_i_1__13_n_0));
  IBUF ram_reg_0_15_14_14_i_1__14
       (.I(\wv4[0] [14]),
        .O(ram_reg_0_15_14_14_i_1__14_n_0));
  IBUF ram_reg_0_15_14_14_i_1__2
       (.I(\wv1[0] [14]),
        .O(ram_reg_0_15_14_14_i_1__2_n_0));
  IBUF ram_reg_0_15_14_14_i_1__3
       (.I(\wv2[3] [14]),
        .O(ram_reg_0_15_14_14_i_1__3_n_0));
  IBUF ram_reg_0_15_14_14_i_1__4
       (.I(\wv2[2] [14]),
        .O(ram_reg_0_15_14_14_i_1__4_n_0));
  IBUF ram_reg_0_15_14_14_i_1__5
       (.I(\wv2[1] [14]),
        .O(ram_reg_0_15_14_14_i_1__5_n_0));
  IBUF ram_reg_0_15_14_14_i_1__6
       (.I(\wv2[0] [14]),
        .O(ram_reg_0_15_14_14_i_1__6_n_0));
  IBUF ram_reg_0_15_14_14_i_1__7
       (.I(\wv3[3] [14]),
        .O(ram_reg_0_15_14_14_i_1__7_n_0));
  IBUF ram_reg_0_15_14_14_i_1__8
       (.I(\wv3[2] [14]),
        .O(ram_reg_0_15_14_14_i_1__8_n_0));
  IBUF ram_reg_0_15_14_14_i_1__9
       (.I(\wv3[1] [14]),
        .O(ram_reg_0_15_14_14_i_1__9_n_0));
  IBUF ram_reg_0_15_15_15_i_1
       (.I(\wv1[3] [15]),
        .O(ram_reg_0_15_15_15_i_1_n_0));
  IBUF ram_reg_0_15_15_15_i_1__0
       (.I(\wv1[2] [15]),
        .O(ram_reg_0_15_15_15_i_1__0_n_0));
  IBUF ram_reg_0_15_15_15_i_1__1
       (.I(\wv1[1] [15]),
        .O(ram_reg_0_15_15_15_i_1__1_n_0));
  IBUF ram_reg_0_15_15_15_i_1__10
       (.I(\wv3[0] [15]),
        .O(ram_reg_0_15_15_15_i_1__10_n_0));
  IBUF ram_reg_0_15_15_15_i_1__11
       (.I(\wv4[3] [15]),
        .O(ram_reg_0_15_15_15_i_1__11_n_0));
  IBUF ram_reg_0_15_15_15_i_1__12
       (.I(\wv4[2] [15]),
        .O(ram_reg_0_15_15_15_i_1__12_n_0));
  IBUF ram_reg_0_15_15_15_i_1__13
       (.I(\wv4[1] [15]),
        .O(ram_reg_0_15_15_15_i_1__13_n_0));
  IBUF ram_reg_0_15_15_15_i_1__14
       (.I(\wv4[0] [15]),
        .O(ram_reg_0_15_15_15_i_1__14_n_0));
  IBUF ram_reg_0_15_15_15_i_1__2
       (.I(\wv1[0] [15]),
        .O(ram_reg_0_15_15_15_i_1__2_n_0));
  IBUF ram_reg_0_15_15_15_i_1__3
       (.I(\wv2[3] [15]),
        .O(ram_reg_0_15_15_15_i_1__3_n_0));
  IBUF ram_reg_0_15_15_15_i_1__4
       (.I(\wv2[2] [15]),
        .O(ram_reg_0_15_15_15_i_1__4_n_0));
  IBUF ram_reg_0_15_15_15_i_1__5
       (.I(\wv2[1] [15]),
        .O(ram_reg_0_15_15_15_i_1__5_n_0));
  IBUF ram_reg_0_15_15_15_i_1__6
       (.I(\wv2[0] [15]),
        .O(ram_reg_0_15_15_15_i_1__6_n_0));
  IBUF ram_reg_0_15_15_15_i_1__7
       (.I(\wv3[3] [15]),
        .O(ram_reg_0_15_15_15_i_1__7_n_0));
  IBUF ram_reg_0_15_15_15_i_1__8
       (.I(\wv3[2] [15]),
        .O(ram_reg_0_15_15_15_i_1__8_n_0));
  IBUF ram_reg_0_15_15_15_i_1__9
       (.I(\wv3[1] [15]),
        .O(ram_reg_0_15_15_15_i_1__9_n_0));
  IBUF ram_reg_0_15_1_1_i_1
       (.I(\wv1[3] [1]),
        .O(ram_reg_0_15_1_1_i_1_n_0));
  IBUF ram_reg_0_15_1_1_i_1__0
       (.I(\wv1[2] [1]),
        .O(ram_reg_0_15_1_1_i_1__0_n_0));
  IBUF ram_reg_0_15_1_1_i_1__1
       (.I(\wv1[1] [1]),
        .O(ram_reg_0_15_1_1_i_1__1_n_0));
  IBUF ram_reg_0_15_1_1_i_1__10
       (.I(\wv3[0] [1]),
        .O(ram_reg_0_15_1_1_i_1__10_n_0));
  IBUF ram_reg_0_15_1_1_i_1__11
       (.I(\wv4[3] [1]),
        .O(ram_reg_0_15_1_1_i_1__11_n_0));
  IBUF ram_reg_0_15_1_1_i_1__12
       (.I(\wv4[2] [1]),
        .O(ram_reg_0_15_1_1_i_1__12_n_0));
  IBUF ram_reg_0_15_1_1_i_1__13
       (.I(\wv4[1] [1]),
        .O(ram_reg_0_15_1_1_i_1__13_n_0));
  IBUF ram_reg_0_15_1_1_i_1__14
       (.I(\wv4[0] [1]),
        .O(ram_reg_0_15_1_1_i_1__14_n_0));
  IBUF ram_reg_0_15_1_1_i_1__2
       (.I(\wv1[0] [1]),
        .O(ram_reg_0_15_1_1_i_1__2_n_0));
  IBUF ram_reg_0_15_1_1_i_1__3
       (.I(\wv2[3] [1]),
        .O(ram_reg_0_15_1_1_i_1__3_n_0));
  IBUF ram_reg_0_15_1_1_i_1__4
       (.I(\wv2[2] [1]),
        .O(ram_reg_0_15_1_1_i_1__4_n_0));
  IBUF ram_reg_0_15_1_1_i_1__5
       (.I(\wv2[1] [1]),
        .O(ram_reg_0_15_1_1_i_1__5_n_0));
  IBUF ram_reg_0_15_1_1_i_1__6
       (.I(\wv2[0] [1]),
        .O(ram_reg_0_15_1_1_i_1__6_n_0));
  IBUF ram_reg_0_15_1_1_i_1__7
       (.I(\wv3[3] [1]),
        .O(ram_reg_0_15_1_1_i_1__7_n_0));
  IBUF ram_reg_0_15_1_1_i_1__8
       (.I(\wv3[2] [1]),
        .O(ram_reg_0_15_1_1_i_1__8_n_0));
  IBUF ram_reg_0_15_1_1_i_1__9
       (.I(\wv3[1] [1]),
        .O(ram_reg_0_15_1_1_i_1__9_n_0));
  IBUF ram_reg_0_15_2_2_i_1
       (.I(\wv1[3] [2]),
        .O(ram_reg_0_15_2_2_i_1_n_0));
  IBUF ram_reg_0_15_2_2_i_1__0
       (.I(\wv1[2] [2]),
        .O(ram_reg_0_15_2_2_i_1__0_n_0));
  IBUF ram_reg_0_15_2_2_i_1__1
       (.I(\wv1[1] [2]),
        .O(ram_reg_0_15_2_2_i_1__1_n_0));
  IBUF ram_reg_0_15_2_2_i_1__10
       (.I(\wv3[0] [2]),
        .O(ram_reg_0_15_2_2_i_1__10_n_0));
  IBUF ram_reg_0_15_2_2_i_1__11
       (.I(\wv4[3] [2]),
        .O(ram_reg_0_15_2_2_i_1__11_n_0));
  IBUF ram_reg_0_15_2_2_i_1__12
       (.I(\wv4[2] [2]),
        .O(ram_reg_0_15_2_2_i_1__12_n_0));
  IBUF ram_reg_0_15_2_2_i_1__13
       (.I(\wv4[1] [2]),
        .O(ram_reg_0_15_2_2_i_1__13_n_0));
  IBUF ram_reg_0_15_2_2_i_1__14
       (.I(\wv4[0] [2]),
        .O(ram_reg_0_15_2_2_i_1__14_n_0));
  IBUF ram_reg_0_15_2_2_i_1__2
       (.I(\wv1[0] [2]),
        .O(ram_reg_0_15_2_2_i_1__2_n_0));
  IBUF ram_reg_0_15_2_2_i_1__3
       (.I(\wv2[3] [2]),
        .O(ram_reg_0_15_2_2_i_1__3_n_0));
  IBUF ram_reg_0_15_2_2_i_1__4
       (.I(\wv2[2] [2]),
        .O(ram_reg_0_15_2_2_i_1__4_n_0));
  IBUF ram_reg_0_15_2_2_i_1__5
       (.I(\wv2[1] [2]),
        .O(ram_reg_0_15_2_2_i_1__5_n_0));
  IBUF ram_reg_0_15_2_2_i_1__6
       (.I(\wv2[0] [2]),
        .O(ram_reg_0_15_2_2_i_1__6_n_0));
  IBUF ram_reg_0_15_2_2_i_1__7
       (.I(\wv3[3] [2]),
        .O(ram_reg_0_15_2_2_i_1__7_n_0));
  IBUF ram_reg_0_15_2_2_i_1__8
       (.I(\wv3[2] [2]),
        .O(ram_reg_0_15_2_2_i_1__8_n_0));
  IBUF ram_reg_0_15_2_2_i_1__9
       (.I(\wv3[1] [2]),
        .O(ram_reg_0_15_2_2_i_1__9_n_0));
  IBUF ram_reg_0_15_3_3_i_1
       (.I(\wv1[3] [3]),
        .O(ram_reg_0_15_3_3_i_1_n_0));
  IBUF ram_reg_0_15_3_3_i_1__0
       (.I(\wv1[2] [3]),
        .O(ram_reg_0_15_3_3_i_1__0_n_0));
  IBUF ram_reg_0_15_3_3_i_1__1
       (.I(\wv1[1] [3]),
        .O(ram_reg_0_15_3_3_i_1__1_n_0));
  IBUF ram_reg_0_15_3_3_i_1__10
       (.I(\wv3[0] [3]),
        .O(ram_reg_0_15_3_3_i_1__10_n_0));
  IBUF ram_reg_0_15_3_3_i_1__11
       (.I(\wv4[3] [3]),
        .O(ram_reg_0_15_3_3_i_1__11_n_0));
  IBUF ram_reg_0_15_3_3_i_1__12
       (.I(\wv4[2] [3]),
        .O(ram_reg_0_15_3_3_i_1__12_n_0));
  IBUF ram_reg_0_15_3_3_i_1__13
       (.I(\wv4[1] [3]),
        .O(ram_reg_0_15_3_3_i_1__13_n_0));
  IBUF ram_reg_0_15_3_3_i_1__14
       (.I(\wv4[0] [3]),
        .O(ram_reg_0_15_3_3_i_1__14_n_0));
  IBUF ram_reg_0_15_3_3_i_1__2
       (.I(\wv1[0] [3]),
        .O(ram_reg_0_15_3_3_i_1__2_n_0));
  IBUF ram_reg_0_15_3_3_i_1__3
       (.I(\wv2[3] [3]),
        .O(ram_reg_0_15_3_3_i_1__3_n_0));
  IBUF ram_reg_0_15_3_3_i_1__4
       (.I(\wv2[2] [3]),
        .O(ram_reg_0_15_3_3_i_1__4_n_0));
  IBUF ram_reg_0_15_3_3_i_1__5
       (.I(\wv2[1] [3]),
        .O(ram_reg_0_15_3_3_i_1__5_n_0));
  IBUF ram_reg_0_15_3_3_i_1__6
       (.I(\wv2[0] [3]),
        .O(ram_reg_0_15_3_3_i_1__6_n_0));
  IBUF ram_reg_0_15_3_3_i_1__7
       (.I(\wv3[3] [3]),
        .O(ram_reg_0_15_3_3_i_1__7_n_0));
  IBUF ram_reg_0_15_3_3_i_1__8
       (.I(\wv3[2] [3]),
        .O(ram_reg_0_15_3_3_i_1__8_n_0));
  IBUF ram_reg_0_15_3_3_i_1__9
       (.I(\wv3[1] [3]),
        .O(ram_reg_0_15_3_3_i_1__9_n_0));
  IBUF ram_reg_0_15_4_4_i_1
       (.I(\wv1[3] [4]),
        .O(ram_reg_0_15_4_4_i_1_n_0));
  IBUF ram_reg_0_15_4_4_i_1__0
       (.I(\wv1[2] [4]),
        .O(ram_reg_0_15_4_4_i_1__0_n_0));
  IBUF ram_reg_0_15_4_4_i_1__1
       (.I(\wv1[1] [4]),
        .O(ram_reg_0_15_4_4_i_1__1_n_0));
  IBUF ram_reg_0_15_4_4_i_1__10
       (.I(\wv3[0] [4]),
        .O(ram_reg_0_15_4_4_i_1__10_n_0));
  IBUF ram_reg_0_15_4_4_i_1__11
       (.I(\wv4[3] [4]),
        .O(ram_reg_0_15_4_4_i_1__11_n_0));
  IBUF ram_reg_0_15_4_4_i_1__12
       (.I(\wv4[2] [4]),
        .O(ram_reg_0_15_4_4_i_1__12_n_0));
  IBUF ram_reg_0_15_4_4_i_1__13
       (.I(\wv4[1] [4]),
        .O(ram_reg_0_15_4_4_i_1__13_n_0));
  IBUF ram_reg_0_15_4_4_i_1__14
       (.I(\wv4[0] [4]),
        .O(ram_reg_0_15_4_4_i_1__14_n_0));
  IBUF ram_reg_0_15_4_4_i_1__2
       (.I(\wv1[0] [4]),
        .O(ram_reg_0_15_4_4_i_1__2_n_0));
  IBUF ram_reg_0_15_4_4_i_1__3
       (.I(\wv2[3] [4]),
        .O(ram_reg_0_15_4_4_i_1__3_n_0));
  IBUF ram_reg_0_15_4_4_i_1__4
       (.I(\wv2[2] [4]),
        .O(ram_reg_0_15_4_4_i_1__4_n_0));
  IBUF ram_reg_0_15_4_4_i_1__5
       (.I(\wv2[1] [4]),
        .O(ram_reg_0_15_4_4_i_1__5_n_0));
  IBUF ram_reg_0_15_4_4_i_1__6
       (.I(\wv2[0] [4]),
        .O(ram_reg_0_15_4_4_i_1__6_n_0));
  IBUF ram_reg_0_15_4_4_i_1__7
       (.I(\wv3[3] [4]),
        .O(ram_reg_0_15_4_4_i_1__7_n_0));
  IBUF ram_reg_0_15_4_4_i_1__8
       (.I(\wv3[2] [4]),
        .O(ram_reg_0_15_4_4_i_1__8_n_0));
  IBUF ram_reg_0_15_4_4_i_1__9
       (.I(\wv3[1] [4]),
        .O(ram_reg_0_15_4_4_i_1__9_n_0));
  IBUF ram_reg_0_15_5_5_i_1
       (.I(\wv1[3] [5]),
        .O(ram_reg_0_15_5_5_i_1_n_0));
  IBUF ram_reg_0_15_5_5_i_1__0
       (.I(\wv1[2] [5]),
        .O(ram_reg_0_15_5_5_i_1__0_n_0));
  IBUF ram_reg_0_15_5_5_i_1__1
       (.I(\wv1[1] [5]),
        .O(ram_reg_0_15_5_5_i_1__1_n_0));
  IBUF ram_reg_0_15_5_5_i_1__10
       (.I(\wv3[0] [5]),
        .O(ram_reg_0_15_5_5_i_1__10_n_0));
  IBUF ram_reg_0_15_5_5_i_1__11
       (.I(\wv4[3] [5]),
        .O(ram_reg_0_15_5_5_i_1__11_n_0));
  IBUF ram_reg_0_15_5_5_i_1__12
       (.I(\wv4[2] [5]),
        .O(ram_reg_0_15_5_5_i_1__12_n_0));
  IBUF ram_reg_0_15_5_5_i_1__13
       (.I(\wv4[1] [5]),
        .O(ram_reg_0_15_5_5_i_1__13_n_0));
  IBUF ram_reg_0_15_5_5_i_1__14
       (.I(\wv4[0] [5]),
        .O(ram_reg_0_15_5_5_i_1__14_n_0));
  IBUF ram_reg_0_15_5_5_i_1__2
       (.I(\wv1[0] [5]),
        .O(ram_reg_0_15_5_5_i_1__2_n_0));
  IBUF ram_reg_0_15_5_5_i_1__3
       (.I(\wv2[3] [5]),
        .O(ram_reg_0_15_5_5_i_1__3_n_0));
  IBUF ram_reg_0_15_5_5_i_1__4
       (.I(\wv2[2] [5]),
        .O(ram_reg_0_15_5_5_i_1__4_n_0));
  IBUF ram_reg_0_15_5_5_i_1__5
       (.I(\wv2[1] [5]),
        .O(ram_reg_0_15_5_5_i_1__5_n_0));
  IBUF ram_reg_0_15_5_5_i_1__6
       (.I(\wv2[0] [5]),
        .O(ram_reg_0_15_5_5_i_1__6_n_0));
  IBUF ram_reg_0_15_5_5_i_1__7
       (.I(\wv3[3] [5]),
        .O(ram_reg_0_15_5_5_i_1__7_n_0));
  IBUF ram_reg_0_15_5_5_i_1__8
       (.I(\wv3[2] [5]),
        .O(ram_reg_0_15_5_5_i_1__8_n_0));
  IBUF ram_reg_0_15_5_5_i_1__9
       (.I(\wv3[1] [5]),
        .O(ram_reg_0_15_5_5_i_1__9_n_0));
  IBUF ram_reg_0_15_6_6_i_1
       (.I(\wv1[3] [6]),
        .O(ram_reg_0_15_6_6_i_1_n_0));
  IBUF ram_reg_0_15_6_6_i_1__0
       (.I(\wv1[2] [6]),
        .O(ram_reg_0_15_6_6_i_1__0_n_0));
  IBUF ram_reg_0_15_6_6_i_1__1
       (.I(\wv1[1] [6]),
        .O(ram_reg_0_15_6_6_i_1__1_n_0));
  IBUF ram_reg_0_15_6_6_i_1__10
       (.I(\wv3[0] [6]),
        .O(ram_reg_0_15_6_6_i_1__10_n_0));
  IBUF ram_reg_0_15_6_6_i_1__11
       (.I(\wv4[3] [6]),
        .O(ram_reg_0_15_6_6_i_1__11_n_0));
  IBUF ram_reg_0_15_6_6_i_1__12
       (.I(\wv4[2] [6]),
        .O(ram_reg_0_15_6_6_i_1__12_n_0));
  IBUF ram_reg_0_15_6_6_i_1__13
       (.I(\wv4[1] [6]),
        .O(ram_reg_0_15_6_6_i_1__13_n_0));
  IBUF ram_reg_0_15_6_6_i_1__14
       (.I(\wv4[0] [6]),
        .O(ram_reg_0_15_6_6_i_1__14_n_0));
  IBUF ram_reg_0_15_6_6_i_1__2
       (.I(\wv1[0] [6]),
        .O(ram_reg_0_15_6_6_i_1__2_n_0));
  IBUF ram_reg_0_15_6_6_i_1__3
       (.I(\wv2[3] [6]),
        .O(ram_reg_0_15_6_6_i_1__3_n_0));
  IBUF ram_reg_0_15_6_6_i_1__4
       (.I(\wv2[2] [6]),
        .O(ram_reg_0_15_6_6_i_1__4_n_0));
  IBUF ram_reg_0_15_6_6_i_1__5
       (.I(\wv2[1] [6]),
        .O(ram_reg_0_15_6_6_i_1__5_n_0));
  IBUF ram_reg_0_15_6_6_i_1__6
       (.I(\wv2[0] [6]),
        .O(ram_reg_0_15_6_6_i_1__6_n_0));
  IBUF ram_reg_0_15_6_6_i_1__7
       (.I(\wv3[3] [6]),
        .O(ram_reg_0_15_6_6_i_1__7_n_0));
  IBUF ram_reg_0_15_6_6_i_1__8
       (.I(\wv3[2] [6]),
        .O(ram_reg_0_15_6_6_i_1__8_n_0));
  IBUF ram_reg_0_15_6_6_i_1__9
       (.I(\wv3[1] [6]),
        .O(ram_reg_0_15_6_6_i_1__9_n_0));
  IBUF ram_reg_0_15_7_7_i_1
       (.I(\wv1[3] [7]),
        .O(ram_reg_0_15_7_7_i_1_n_0));
  IBUF ram_reg_0_15_7_7_i_1__0
       (.I(\wv1[2] [7]),
        .O(ram_reg_0_15_7_7_i_1__0_n_0));
  IBUF ram_reg_0_15_7_7_i_1__1
       (.I(\wv1[1] [7]),
        .O(ram_reg_0_15_7_7_i_1__1_n_0));
  IBUF ram_reg_0_15_7_7_i_1__10
       (.I(\wv3[0] [7]),
        .O(ram_reg_0_15_7_7_i_1__10_n_0));
  IBUF ram_reg_0_15_7_7_i_1__11
       (.I(\wv4[3] [7]),
        .O(ram_reg_0_15_7_7_i_1__11_n_0));
  IBUF ram_reg_0_15_7_7_i_1__12
       (.I(\wv4[2] [7]),
        .O(ram_reg_0_15_7_7_i_1__12_n_0));
  IBUF ram_reg_0_15_7_7_i_1__13
       (.I(\wv4[1] [7]),
        .O(ram_reg_0_15_7_7_i_1__13_n_0));
  IBUF ram_reg_0_15_7_7_i_1__14
       (.I(\wv4[0] [7]),
        .O(ram_reg_0_15_7_7_i_1__14_n_0));
  IBUF ram_reg_0_15_7_7_i_1__2
       (.I(\wv1[0] [7]),
        .O(ram_reg_0_15_7_7_i_1__2_n_0));
  IBUF ram_reg_0_15_7_7_i_1__3
       (.I(\wv2[3] [7]),
        .O(ram_reg_0_15_7_7_i_1__3_n_0));
  IBUF ram_reg_0_15_7_7_i_1__4
       (.I(\wv2[2] [7]),
        .O(ram_reg_0_15_7_7_i_1__4_n_0));
  IBUF ram_reg_0_15_7_7_i_1__5
       (.I(\wv2[1] [7]),
        .O(ram_reg_0_15_7_7_i_1__5_n_0));
  IBUF ram_reg_0_15_7_7_i_1__6
       (.I(\wv2[0] [7]),
        .O(ram_reg_0_15_7_7_i_1__6_n_0));
  IBUF ram_reg_0_15_7_7_i_1__7
       (.I(\wv3[3] [7]),
        .O(ram_reg_0_15_7_7_i_1__7_n_0));
  IBUF ram_reg_0_15_7_7_i_1__8
       (.I(\wv3[2] [7]),
        .O(ram_reg_0_15_7_7_i_1__8_n_0));
  IBUF ram_reg_0_15_7_7_i_1__9
       (.I(\wv3[1] [7]),
        .O(ram_reg_0_15_7_7_i_1__9_n_0));
  IBUF ram_reg_0_15_8_8_i_1
       (.I(\wv1[3] [8]),
        .O(ram_reg_0_15_8_8_i_1_n_0));
  IBUF ram_reg_0_15_8_8_i_1__0
       (.I(\wv1[2] [8]),
        .O(ram_reg_0_15_8_8_i_1__0_n_0));
  IBUF ram_reg_0_15_8_8_i_1__1
       (.I(\wv1[1] [8]),
        .O(ram_reg_0_15_8_8_i_1__1_n_0));
  IBUF ram_reg_0_15_8_8_i_1__10
       (.I(\wv3[0] [8]),
        .O(ram_reg_0_15_8_8_i_1__10_n_0));
  IBUF ram_reg_0_15_8_8_i_1__11
       (.I(\wv4[3] [8]),
        .O(ram_reg_0_15_8_8_i_1__11_n_0));
  IBUF ram_reg_0_15_8_8_i_1__12
       (.I(\wv4[2] [8]),
        .O(ram_reg_0_15_8_8_i_1__12_n_0));
  IBUF ram_reg_0_15_8_8_i_1__13
       (.I(\wv4[1] [8]),
        .O(ram_reg_0_15_8_8_i_1__13_n_0));
  IBUF ram_reg_0_15_8_8_i_1__14
       (.I(\wv4[0] [8]),
        .O(ram_reg_0_15_8_8_i_1__14_n_0));
  IBUF ram_reg_0_15_8_8_i_1__2
       (.I(\wv1[0] [8]),
        .O(ram_reg_0_15_8_8_i_1__2_n_0));
  IBUF ram_reg_0_15_8_8_i_1__3
       (.I(\wv2[3] [8]),
        .O(ram_reg_0_15_8_8_i_1__3_n_0));
  IBUF ram_reg_0_15_8_8_i_1__4
       (.I(\wv2[2] [8]),
        .O(ram_reg_0_15_8_8_i_1__4_n_0));
  IBUF ram_reg_0_15_8_8_i_1__5
       (.I(\wv2[1] [8]),
        .O(ram_reg_0_15_8_8_i_1__5_n_0));
  IBUF ram_reg_0_15_8_8_i_1__6
       (.I(\wv2[0] [8]),
        .O(ram_reg_0_15_8_8_i_1__6_n_0));
  IBUF ram_reg_0_15_8_8_i_1__7
       (.I(\wv3[3] [8]),
        .O(ram_reg_0_15_8_8_i_1__7_n_0));
  IBUF ram_reg_0_15_8_8_i_1__8
       (.I(\wv3[2] [8]),
        .O(ram_reg_0_15_8_8_i_1__8_n_0));
  IBUF ram_reg_0_15_8_8_i_1__9
       (.I(\wv3[1] [8]),
        .O(ram_reg_0_15_8_8_i_1__9_n_0));
  IBUF ram_reg_0_15_9_9_i_1
       (.I(\wv1[3] [9]),
        .O(ram_reg_0_15_9_9_i_1_n_0));
  IBUF ram_reg_0_15_9_9_i_1__0
       (.I(\wv1[2] [9]),
        .O(ram_reg_0_15_9_9_i_1__0_n_0));
  IBUF ram_reg_0_15_9_9_i_1__1
       (.I(\wv1[1] [9]),
        .O(ram_reg_0_15_9_9_i_1__1_n_0));
  IBUF ram_reg_0_15_9_9_i_1__10
       (.I(\wv3[0] [9]),
        .O(ram_reg_0_15_9_9_i_1__10_n_0));
  IBUF ram_reg_0_15_9_9_i_1__11
       (.I(\wv4[3] [9]),
        .O(ram_reg_0_15_9_9_i_1__11_n_0));
  IBUF ram_reg_0_15_9_9_i_1__12
       (.I(\wv4[2] [9]),
        .O(ram_reg_0_15_9_9_i_1__12_n_0));
  IBUF ram_reg_0_15_9_9_i_1__13
       (.I(\wv4[1] [9]),
        .O(ram_reg_0_15_9_9_i_1__13_n_0));
  IBUF ram_reg_0_15_9_9_i_1__14
       (.I(\wv4[0] [9]),
        .O(ram_reg_0_15_9_9_i_1__14_n_0));
  IBUF ram_reg_0_15_9_9_i_1__2
       (.I(\wv1[0] [9]),
        .O(ram_reg_0_15_9_9_i_1__2_n_0));
  IBUF ram_reg_0_15_9_9_i_1__3
       (.I(\wv2[3] [9]),
        .O(ram_reg_0_15_9_9_i_1__3_n_0));
  IBUF ram_reg_0_15_9_9_i_1__4
       (.I(\wv2[2] [9]),
        .O(ram_reg_0_15_9_9_i_1__4_n_0));
  IBUF ram_reg_0_15_9_9_i_1__5
       (.I(\wv2[1] [9]),
        .O(ram_reg_0_15_9_9_i_1__5_n_0));
  IBUF ram_reg_0_15_9_9_i_1__6
       (.I(\wv2[0] [9]),
        .O(ram_reg_0_15_9_9_i_1__6_n_0));
  IBUF ram_reg_0_15_9_9_i_1__7
       (.I(\wv3[3] [9]),
        .O(ram_reg_0_15_9_9_i_1__7_n_0));
  IBUF ram_reg_0_15_9_9_i_1__8
       (.I(\wv3[2] [9]),
        .O(ram_reg_0_15_9_9_i_1__8_n_0));
  IBUF ram_reg_0_15_9_9_i_1__9
       (.I(\wv3[1] [9]),
        .O(ram_reg_0_15_9_9_i_1__9_n_0));
  OBUF \read_OBUF[0]_inst 
       (.I(read_OBUF[0]),
        .O(read[0]));
  OBUF \read_OBUF[1]_inst 
       (.I(read_OBUF[1]),
        .O(read[1]));
  OBUF \read_OBUF[2]_inst 
       (.I(read_OBUF[2]),
        .O(read[2]));
  OBUF \read_OBUF[3]_inst 
       (.I(read_OBUF[3]),
        .O(read[3]));
  OBUF \read_OBUF[4]_inst 
       (.I(read_OBUF[4]),
        .O(read[4]));
  OBUF \read_OBUF[5]_inst 
       (.I(read_OBUF[5]),
        .O(read[5]));
  OBUF \read_OBUF[6]_inst 
       (.I(read_OBUF[6]),
        .O(read[6]));
  OBUF \read_OBUF[7]_inst 
       (.I(read_OBUF[7]),
        .O(read[7]));
  IBUF reset_IBUF_inst
       (.I(reset),
        .O(reset_IBUF));
  IBUF start_bram_assign_IBUF_inst
       (.I(start_bram_assign),
        .O(start_bram_assign_IBUF));
  IBUF start_mul_IBUF_inst
       (.I(start_mul),
        .O(start_mul_IBUF));
  OBUF \state_OBUF[0]_inst 
       (.I(state_OBUF[0]),
        .O(state[0]));
  OBUF \state_OBUF[1]_inst 
       (.I(state_OBUF[1]),
        .O(state[1]));
  LUT1 #(
    .INIT(2'h1)) 
    \write_count[0]_i_2 
       (.I0(\write_count_reg_n_0_[0] ),
        .O(\write_count[0]_i_2_n_0 ));
  (* ORIG_CELL_NAME = "write_count_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[0] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[0]_i_1_n_7 ),
        .Q(\write_count_reg_n_0_[0] ),
        .R(1'b0));
  CARRY4 \write_count_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\write_count_reg[0]_i_1_n_0 ,\write_count_reg[0]_i_1_n_1 ,\write_count_reg[0]_i_1_n_2 ,\write_count_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\write_count_reg[0]_i_1_n_4 ,\write_count_reg[0]_i_1_n_5 ,\write_count_reg[0]_i_1_n_6 ,\write_count_reg[0]_i_1_n_7 }),
        .S({\write_count_reg[3]_rep_n_0 ,\write_count_reg[2]_rep_n_0 ,\write_count_reg[1]_rep_n_0 ,\write_count[0]_i_2_n_0 }));
  (* ORIG_CELL_NAME = "write_count_reg[0]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[0]_rep 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[0]_i_1_n_7 ),
        .Q(\write_count_reg[0]_rep_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[10] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[8]_i_1_n_5 ),
        .Q(\write_count_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[11] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[8]_i_1_n_4 ),
        .Q(\write_count_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[12] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[12]_i_1_n_7 ),
        .Q(\write_count_reg_n_0_[12] ),
        .R(1'b0));
  CARRY4 \write_count_reg[12]_i_1 
       (.CI(\write_count_reg[8]_i_1_n_0 ),
        .CO({\write_count_reg[12]_i_1_n_0 ,\write_count_reg[12]_i_1_n_1 ,\write_count_reg[12]_i_1_n_2 ,\write_count_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[12]_i_1_n_4 ,\write_count_reg[12]_i_1_n_5 ,\write_count_reg[12]_i_1_n_6 ,\write_count_reg[12]_i_1_n_7 }),
        .S({\write_count_reg_n_0_[15] ,\write_count_reg_n_0_[14] ,\write_count_reg_n_0_[13] ,\write_count_reg_n_0_[12] }));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[13] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[12]_i_1_n_6 ),
        .Q(\write_count_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[14] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[12]_i_1_n_5 ),
        .Q(\write_count_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[15] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[12]_i_1_n_4 ),
        .Q(\write_count_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[16] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[16]_i_1_n_7 ),
        .Q(\write_count_reg_n_0_[16] ),
        .R(1'b0));
  CARRY4 \write_count_reg[16]_i_1 
       (.CI(\write_count_reg[12]_i_1_n_0 ),
        .CO({\write_count_reg[16]_i_1_n_0 ,\write_count_reg[16]_i_1_n_1 ,\write_count_reg[16]_i_1_n_2 ,\write_count_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[16]_i_1_n_4 ,\write_count_reg[16]_i_1_n_5 ,\write_count_reg[16]_i_1_n_6 ,\write_count_reg[16]_i_1_n_7 }),
        .S({\write_count_reg_n_0_[19] ,\write_count_reg_n_0_[18] ,\write_count_reg_n_0_[17] ,\write_count_reg_n_0_[16] }));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[17] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[16]_i_1_n_6 ),
        .Q(\write_count_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[18] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[16]_i_1_n_5 ),
        .Q(\write_count_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[19] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[16]_i_1_n_4 ),
        .Q(\write_count_reg_n_0_[19] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "write_count_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[1] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[0]_i_1_n_6 ),
        .Q(\write_count_reg_n_0_[1] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "write_count_reg[1]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[1]_rep 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[0]_i_1_n_6 ),
        .Q(\write_count_reg[1]_rep_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[20] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[20]_i_1_n_7 ),
        .Q(\write_count_reg_n_0_[20] ),
        .R(1'b0));
  CARRY4 \write_count_reg[20]_i_1 
       (.CI(\write_count_reg[16]_i_1_n_0 ),
        .CO({\write_count_reg[20]_i_1_n_0 ,\write_count_reg[20]_i_1_n_1 ,\write_count_reg[20]_i_1_n_2 ,\write_count_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[20]_i_1_n_4 ,\write_count_reg[20]_i_1_n_5 ,\write_count_reg[20]_i_1_n_6 ,\write_count_reg[20]_i_1_n_7 }),
        .S({\write_count_reg_n_0_[23] ,\write_count_reg_n_0_[22] ,\write_count_reg_n_0_[21] ,\write_count_reg_n_0_[20] }));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[21] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[20]_i_1_n_6 ),
        .Q(\write_count_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[22] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[20]_i_1_n_5 ),
        .Q(\write_count_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[23] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[20]_i_1_n_4 ),
        .Q(\write_count_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[24] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[24]_i_1_n_7 ),
        .Q(\write_count_reg_n_0_[24] ),
        .R(1'b0));
  CARRY4 \write_count_reg[24]_i_1 
       (.CI(\write_count_reg[20]_i_1_n_0 ),
        .CO({\write_count_reg[24]_i_1_n_0 ,\write_count_reg[24]_i_1_n_1 ,\write_count_reg[24]_i_1_n_2 ,\write_count_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[24]_i_1_n_4 ,\write_count_reg[24]_i_1_n_5 ,\write_count_reg[24]_i_1_n_6 ,\write_count_reg[24]_i_1_n_7 }),
        .S({\write_count_reg_n_0_[27] ,\write_count_reg_n_0_[26] ,\write_count_reg_n_0_[25] ,\write_count_reg_n_0_[24] }));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[25] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[24]_i_1_n_6 ),
        .Q(\write_count_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[26] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[24]_i_1_n_5 ),
        .Q(\write_count_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[27] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[24]_i_1_n_4 ),
        .Q(\write_count_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[28] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[28]_i_1_n_7 ),
        .Q(\write_count_reg_n_0_[28] ),
        .R(1'b0));
  CARRY4 \write_count_reg[28]_i_1 
       (.CI(\write_count_reg[24]_i_1_n_0 ),
        .CO({\NLW_write_count_reg[28]_i_1_CO_UNCONNECTED [3],\write_count_reg[28]_i_1_n_1 ,\write_count_reg[28]_i_1_n_2 ,\write_count_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[28]_i_1_n_4 ,\write_count_reg[28]_i_1_n_5 ,\write_count_reg[28]_i_1_n_6 ,\write_count_reg[28]_i_1_n_7 }),
        .S({\write_count_reg_n_0_[31] ,\write_count_reg_n_0_[30] ,\write_count_reg_n_0_[29] ,\write_count_reg_n_0_[28] }));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[29] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[28]_i_1_n_6 ),
        .Q(\write_count_reg_n_0_[29] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "write_count_reg[2]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[2] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[0]_i_1_n_5 ),
        .Q(\write_count_reg_n_0_[2] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "write_count_reg[2]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[2]_rep 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[0]_i_1_n_5 ),
        .Q(\write_count_reg[2]_rep_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[30] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[28]_i_1_n_5 ),
        .Q(\write_count_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[31] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[28]_i_1_n_4 ),
        .Q(\write_count_reg_n_0_[31] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "write_count_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[3] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[0]_i_1_n_4 ),
        .Q(\write_count_reg_n_0_[3] ),
        .R(1'b0));
  (* ORIG_CELL_NAME = "write_count_reg[3]" *) 
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[3]_rep 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[0]_i_1_n_4 ),
        .Q(\write_count_reg[3]_rep_n_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[4] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[4]_i_1_n_7 ),
        .Q(\write_count_reg_n_0_[4] ),
        .R(1'b0));
  CARRY4 \write_count_reg[4]_i_1 
       (.CI(\write_count_reg[0]_i_1_n_0 ),
        .CO({\write_count_reg[4]_i_1_n_0 ,\write_count_reg[4]_i_1_n_1 ,\write_count_reg[4]_i_1_n_2 ,\write_count_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[4]_i_1_n_4 ,\write_count_reg[4]_i_1_n_5 ,\write_count_reg[4]_i_1_n_6 ,\write_count_reg[4]_i_1_n_7 }),
        .S({\write_count_reg_n_0_[7] ,\write_count_reg_n_0_[6] ,\write_count_reg_n_0_[5] ,\write_count_reg_n_0_[4] }));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[5] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[4]_i_1_n_6 ),
        .Q(\write_count_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[6] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[4]_i_1_n_5 ),
        .Q(\write_count_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[7] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[4]_i_1_n_4 ),
        .Q(\write_count_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[8] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[8]_i_1_n_7 ),
        .Q(\write_count_reg_n_0_[8] ),
        .R(1'b0));
  CARRY4 \write_count_reg[8]_i_1 
       (.CI(\write_count_reg[4]_i_1_n_0 ),
        .CO({\write_count_reg[8]_i_1_n_0 ,\write_count_reg[8]_i_1_n_1 ,\write_count_reg[8]_i_1_n_2 ,\write_count_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\write_count_reg[8]_i_1_n_4 ,\write_count_reg[8]_i_1_n_5 ,\write_count_reg[8]_i_1_n_6 ,\write_count_reg[8]_i_1_n_7 }),
        .S({\write_count_reg_n_0_[11] ,\write_count_reg_n_0_[10] ,\write_count_reg_n_0_[9] ,\write_count_reg_n_0_[8] }));
  FDRE #(
    .INIT(1'b0)) 
    \write_count_reg[9] 
       (.C(CLK_IBUF_BUFG),
        .CE(wr_en),
        .D(\write_count_reg[8]_i_1_n_6 ),
        .Q(\write_count_reg_n_0_[9] ),
        .R(1'b0));
endmodule

module simple_multiplier
   (P,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    Q,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_rep_0 ,
    \write_count_reg[0]_rep_1 ,
    \write_count_reg[0]_rep_2 ,
    \write_count_reg[0]_rep_3 ,
    \write_count_reg[0]_rep_4 ,
    \write_count_reg[0]_rep_5 ,
    \write_count_reg[0]_rep_6 ,
    \write_count_reg[0]_rep_7 ,
    \write_count_reg[0]_rep_8 ,
    \write_count_reg[0]_rep_9 ,
    \write_count_reg[0]_rep_10 ,
    \write_count_reg[0]_rep_11 ,
    \write_count_reg[0]_rep_12 ,
    \write_count_reg[0]_rep_13 ,
    \write_count_reg[0]_rep_14 );
  output [32:0]P;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]Q;
  input \write_count_reg[0]_rep ;
  input \write_count_reg[0]_rep_0 ;
  input \write_count_reg[0]_rep_1 ;
  input \write_count_reg[0]_rep_2 ;
  input \write_count_reg[0]_rep_3 ;
  input \write_count_reg[0]_rep_4 ;
  input \write_count_reg[0]_rep_5 ;
  input \write_count_reg[0]_rep_6 ;
  input \write_count_reg[0]_rep_7 ;
  input \write_count_reg[0]_rep_8 ;
  input \write_count_reg[0]_rep_9 ;
  input \write_count_reg[0]_rep_10 ;
  input \write_count_reg[0]_rep_11 ;
  input \write_count_reg[0]_rep_12 ;
  input \write_count_reg[0]_rep_13 ;
  input \write_count_reg[0]_rep_14 ;

  wire [15:0]A;
  wire [15:0]B;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire [32:0]P;
  wire [15:0]Q;
  wire RST_IBUF;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0]_rep ;
  wire \write_count_reg[0]_rep_0 ;
  wire \write_count_reg[0]_rep_1 ;
  wire \write_count_reg[0]_rep_10 ;
  wire \write_count_reg[0]_rep_11 ;
  wire \write_count_reg[0]_rep_12 ;
  wire \write_count_reg[0]_rep_13 ;
  wire \write_count_reg[0]_rep_14 ;
  wire \write_count_reg[0]_rep_2 ;
  wire \write_count_reg[0]_rep_3 ;
  wire \write_count_reg[0]_rep_4 ;
  wire \write_count_reg[0]_rep_5 ;
  wire \write_count_reg[0]_rep_6 ;
  wire \write_count_reg[0]_rep_7 ;
  wire \write_count_reg[0]_rep_8 ;
  wire \write_count_reg[0]_rep_9 ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({B[15],B[15],B}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(CE_common_reg),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],P}),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_10__3
       (.I0(Q[6]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_8 ),
        .I3(out[0]),
        .O(B[6]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_11__3
       (.I0(Q[5]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_9 ),
        .I3(out[0]),
        .O(B[5]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_12__3
       (.I0(Q[4]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_10 ),
        .I3(out[0]),
        .O(B[4]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_13__3
       (.I0(Q[3]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_11 ),
        .I3(out[0]),
        .O(B[3]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_14__3
       (.I0(Q[2]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_12 ),
        .I3(out[0]),
        .O(B[2]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_15__3
       (.I0(Q[1]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_13 ),
        .I3(out[0]),
        .O(B[1]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_16__3
       (.I0(Q[0]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_14 ),
        .I3(out[0]),
        .O(B[0]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_17__2
       (.I0(P[15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(A[15]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_18__2
       (.I0(P[14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(A[14]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_19__2
       (.I0(P[13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(A[13]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_1__3
       (.I0(Q[15]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep ),
        .I3(out[0]),
        .O(B[15]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_20__2
       (.I0(P[12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(A[12]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_21__2
       (.I0(P[11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(A[11]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_22__2
       (.I0(P[10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(A[10]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_23__2
       (.I0(P[9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(A[9]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_24__2
       (.I0(P[8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(A[8]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_25__2
       (.I0(P[7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(A[7]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_26__2
       (.I0(P[6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(A[6]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_27__2
       (.I0(P[5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(A[5]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_28__2
       (.I0(P[4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(A[4]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_29__2
       (.I0(P[3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(A[3]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_2__3
       (.I0(Q[14]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_0 ),
        .I3(out[0]),
        .O(B[14]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_30__2
       (.I0(P[2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(A[2]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_31__2
       (.I0(P[1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(A[1]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_32__2
       (.I0(P[0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(A[0]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_3__3
       (.I0(Q[13]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_1 ),
        .I3(out[0]),
        .O(B[13]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_4__3
       (.I0(Q[12]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_2 ),
        .I3(out[0]),
        .O(B[12]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_5__3
       (.I0(Q[11]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_3 ),
        .I3(out[0]),
        .O(B[11]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_6__3
       (.I0(Q[10]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_4 ),
        .I3(out[0]),
        .O(B[10]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_7__3
       (.I0(Q[9]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_5 ),
        .I3(out[0]),
        .O(B[9]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_8__3
       (.I0(Q[8]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_6 ),
        .I3(out[0]),
        .O(B[8]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_9__3
       (.I0(Q[7]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_7 ),
        .I3(out[0]),
        .O(B[7]));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_16
   (\S2[1][32] ,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    \ACC_reg[15] ,
    \write_count_reg[0] ,
    \write_count_reg[0]_0 ,
    \write_count_reg[0]_1 ,
    \write_count_reg[0]_2 ,
    \write_count_reg[0]_3 ,
    \write_count_reg[0]_4 ,
    \write_count_reg[0]_5 ,
    \write_count_reg[0]_6 ,
    \write_count_reg[0]_7 ,
    \write_count_reg[0]_8 ,
    \write_count_reg[0]_9 ,
    \write_count_reg[0]_10 ,
    \write_count_reg[0]_11 ,
    \write_count_reg[0]_12 ,
    \write_count_reg[0]_13 ,
    \write_count_reg[0]_14 );
  output [32:0]\S2[1][32] ;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]\ACC_reg[15] ;
  input \write_count_reg[0] ;
  input \write_count_reg[0]_0 ;
  input \write_count_reg[0]_1 ;
  input \write_count_reg[0]_2 ;
  input \write_count_reg[0]_3 ;
  input \write_count_reg[0]_4 ;
  input \write_count_reg[0]_5 ;
  input \write_count_reg[0]_6 ;
  input \write_count_reg[0]_7 ;
  input \write_count_reg[0]_8 ;
  input \write_count_reg[0]_9 ;
  input \write_count_reg[0]_10 ;
  input \write_count_reg[0]_11 ;
  input \write_count_reg[0]_12 ;
  input \write_count_reg[0]_13 ;
  input \write_count_reg[0]_14 ;

  wire [15:0]\ACC_reg[15] ;
  wire ACC_reg_i_10__4_n_0;
  wire ACC_reg_i_11__4_n_0;
  wire ACC_reg_i_12__4_n_0;
  wire ACC_reg_i_13__4_n_0;
  wire ACC_reg_i_14__4_n_0;
  wire ACC_reg_i_15__4_n_0;
  wire ACC_reg_i_16__4_n_0;
  wire ACC_reg_i_17__1_n_0;
  wire ACC_reg_i_18__1_n_0;
  wire ACC_reg_i_19__1_n_0;
  wire ACC_reg_i_1__4_n_0;
  wire ACC_reg_i_20__1_n_0;
  wire ACC_reg_i_21__1_n_0;
  wire ACC_reg_i_22__1_n_0;
  wire ACC_reg_i_23__1_n_0;
  wire ACC_reg_i_24__1_n_0;
  wire ACC_reg_i_25__1_n_0;
  wire ACC_reg_i_26__1_n_0;
  wire ACC_reg_i_27__1_n_0;
  wire ACC_reg_i_28__1_n_0;
  wire ACC_reg_i_29__1_n_0;
  wire ACC_reg_i_2__4_n_0;
  wire ACC_reg_i_30__1_n_0;
  wire ACC_reg_i_31__1_n_0;
  wire ACC_reg_i_32__1_n_0;
  wire ACC_reg_i_3__4_n_0;
  wire ACC_reg_i_4__4_n_0;
  wire ACC_reg_i_5__4_n_0;
  wire ACC_reg_i_6__4_n_0;
  wire ACC_reg_i_7__4_n_0;
  wire ACC_reg_i_8__4_n_0;
  wire ACC_reg_i_9__4_n_0;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire RST_IBUF;
  wire [32:0]\S2[1][32] ;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0] ;
  wire \write_count_reg[0]_0 ;
  wire \write_count_reg[0]_1 ;
  wire \write_count_reg[0]_10 ;
  wire \write_count_reg[0]_11 ;
  wire \write_count_reg[0]_12 ;
  wire \write_count_reg[0]_13 ;
  wire \write_count_reg[0]_14 ;
  wire \write_count_reg[0]_2 ;
  wire \write_count_reg[0]_3 ;
  wire \write_count_reg[0]_4 ;
  wire \write_count_reg[0]_5 ;
  wire \write_count_reg[0]_6 ;
  wire \write_count_reg[0]_7 ;
  wire \write_count_reg[0]_8 ;
  wire \write_count_reg[0]_9 ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_17__1_n_0,ACC_reg_i_18__1_n_0,ACC_reg_i_19__1_n_0,ACC_reg_i_20__1_n_0,ACC_reg_i_21__1_n_0,ACC_reg_i_22__1_n_0,ACC_reg_i_23__1_n_0,ACC_reg_i_24__1_n_0,ACC_reg_i_25__1_n_0,ACC_reg_i_26__1_n_0,ACC_reg_i_27__1_n_0,ACC_reg_i_28__1_n_0,ACC_reg_i_29__1_n_0,ACC_reg_i_30__1_n_0,ACC_reg_i_31__1_n_0,ACC_reg_i_32__1_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({ACC_reg_i_1__4_n_0,ACC_reg_i_1__4_n_0,ACC_reg_i_1__4_n_0,ACC_reg_i_2__4_n_0,ACC_reg_i_3__4_n_0,ACC_reg_i_4__4_n_0,ACC_reg_i_5__4_n_0,ACC_reg_i_6__4_n_0,ACC_reg_i_7__4_n_0,ACC_reg_i_8__4_n_0,ACC_reg_i_9__4_n_0,ACC_reg_i_10__4_n_0,ACC_reg_i_11__4_n_0,ACC_reg_i_12__4_n_0,ACC_reg_i_13__4_n_0,ACC_reg_i_14__4_n_0,ACC_reg_i_15__4_n_0,ACC_reg_i_16__4_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(CE_common_reg),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],\S2[1][32] }),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_10__4
       (.I0(\ACC_reg[15] [6]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_8 ),
        .I3(out[0]),
        .O(ACC_reg_i_10__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_11__4
       (.I0(\ACC_reg[15] [5]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_9 ),
        .I3(out[0]),
        .O(ACC_reg_i_11__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_12__4
       (.I0(\ACC_reg[15] [4]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_10 ),
        .I3(out[0]),
        .O(ACC_reg_i_12__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_13__4
       (.I0(\ACC_reg[15] [3]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_11 ),
        .I3(out[0]),
        .O(ACC_reg_i_13__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_14__4
       (.I0(\ACC_reg[15] [2]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_12 ),
        .I3(out[0]),
        .O(ACC_reg_i_14__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_15__4
       (.I0(\ACC_reg[15] [1]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_13 ),
        .I3(out[0]),
        .O(ACC_reg_i_15__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_16__4
       (.I0(\ACC_reg[15] [0]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_14 ),
        .I3(out[0]),
        .O(ACC_reg_i_16__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_17__1
       (.I0(\S2[1][32] [15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(ACC_reg_i_17__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_18__1
       (.I0(\S2[1][32] [14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(ACC_reg_i_18__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_19__1
       (.I0(\S2[1][32] [13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(ACC_reg_i_19__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_1__4
       (.I0(\ACC_reg[15] [15]),
        .I1(out[1]),
        .I2(\write_count_reg[0] ),
        .I3(out[0]),
        .O(ACC_reg_i_1__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_20__1
       (.I0(\S2[1][32] [12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(ACC_reg_i_20__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_21__1
       (.I0(\S2[1][32] [11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(ACC_reg_i_21__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_22__1
       (.I0(\S2[1][32] [10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(ACC_reg_i_22__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_23__1
       (.I0(\S2[1][32] [9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(ACC_reg_i_23__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_24__1
       (.I0(\S2[1][32] [8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(ACC_reg_i_24__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_25__1
       (.I0(\S2[1][32] [7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(ACC_reg_i_25__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_26__1
       (.I0(\S2[1][32] [6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(ACC_reg_i_26__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_27__1
       (.I0(\S2[1][32] [5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(ACC_reg_i_27__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_28__1
       (.I0(\S2[1][32] [4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(ACC_reg_i_28__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_29__1
       (.I0(\S2[1][32] [3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(ACC_reg_i_29__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_2__4
       (.I0(\ACC_reg[15] [14]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_0 ),
        .I3(out[0]),
        .O(ACC_reg_i_2__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_30__1
       (.I0(\S2[1][32] [2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(ACC_reg_i_30__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_31__1
       (.I0(\S2[1][32] [1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(ACC_reg_i_31__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_32__1
       (.I0(\S2[1][32] [0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(ACC_reg_i_32__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_3__4
       (.I0(\ACC_reg[15] [13]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_1 ),
        .I3(out[0]),
        .O(ACC_reg_i_3__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_4__4
       (.I0(\ACC_reg[15] [12]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_2 ),
        .I3(out[0]),
        .O(ACC_reg_i_4__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_5__4
       (.I0(\ACC_reg[15] [11]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_3 ),
        .I3(out[0]),
        .O(ACC_reg_i_5__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_6__4
       (.I0(\ACC_reg[15] [10]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_4 ),
        .I3(out[0]),
        .O(ACC_reg_i_6__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_7__4
       (.I0(\ACC_reg[15] [9]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_5 ),
        .I3(out[0]),
        .O(ACC_reg_i_7__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_8__4
       (.I0(\ACC_reg[15] [8]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_6 ),
        .I3(out[0]),
        .O(ACC_reg_i_8__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_9__4
       (.I0(\ACC_reg[15] [7]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_7 ),
        .I3(out[0]),
        .O(ACC_reg_i_9__4_n_0));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_17
   (\S2[2][32] ,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    \ACC_reg[15] ,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_rep_0 ,
    \write_count_reg[0]_rep_1 ,
    \write_count_reg[0]_rep_2 ,
    \write_count_reg[0]_rep_3 ,
    \write_count_reg[0]_rep_4 ,
    \write_count_reg[0]_rep_5 ,
    \write_count_reg[0]_rep_6 ,
    \write_count_reg[0]_rep_7 ,
    \write_count_reg[0]_rep_8 ,
    \write_count_reg[0]_rep_9 ,
    \write_count_reg[0]_rep_10 ,
    \write_count_reg[0]_rep_11 ,
    \write_count_reg[0]_rep_12 ,
    \write_count_reg[0]_rep_13 ,
    \write_count_reg[0]_rep_14 );
  output [32:0]\S2[2][32] ;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]\ACC_reg[15] ;
  input \write_count_reg[0]_rep ;
  input \write_count_reg[0]_rep_0 ;
  input \write_count_reg[0]_rep_1 ;
  input \write_count_reg[0]_rep_2 ;
  input \write_count_reg[0]_rep_3 ;
  input \write_count_reg[0]_rep_4 ;
  input \write_count_reg[0]_rep_5 ;
  input \write_count_reg[0]_rep_6 ;
  input \write_count_reg[0]_rep_7 ;
  input \write_count_reg[0]_rep_8 ;
  input \write_count_reg[0]_rep_9 ;
  input \write_count_reg[0]_rep_10 ;
  input \write_count_reg[0]_rep_11 ;
  input \write_count_reg[0]_rep_12 ;
  input \write_count_reg[0]_rep_13 ;
  input \write_count_reg[0]_rep_14 ;

  wire [15:0]\ACC_reg[15] ;
  wire ACC_reg_i_10__5_n_0;
  wire ACC_reg_i_11__5_n_0;
  wire ACC_reg_i_12__5_n_0;
  wire ACC_reg_i_13__5_n_0;
  wire ACC_reg_i_14__5_n_0;
  wire ACC_reg_i_15__5_n_0;
  wire ACC_reg_i_16__5_n_0;
  wire ACC_reg_i_17__0_n_0;
  wire ACC_reg_i_18__0_n_0;
  wire ACC_reg_i_19__0_n_0;
  wire ACC_reg_i_1__5_n_0;
  wire ACC_reg_i_20__0_n_0;
  wire ACC_reg_i_21__0_n_0;
  wire ACC_reg_i_22__0_n_0;
  wire ACC_reg_i_23__0_n_0;
  wire ACC_reg_i_24__0_n_0;
  wire ACC_reg_i_25__0_n_0;
  wire ACC_reg_i_26__0_n_0;
  wire ACC_reg_i_27__0_n_0;
  wire ACC_reg_i_28__0_n_0;
  wire ACC_reg_i_29__0_n_0;
  wire ACC_reg_i_2__5_n_0;
  wire ACC_reg_i_30__0_n_0;
  wire ACC_reg_i_31__0_n_0;
  wire ACC_reg_i_32__0_n_0;
  wire ACC_reg_i_3__5_n_0;
  wire ACC_reg_i_4__5_n_0;
  wire ACC_reg_i_5__5_n_0;
  wire ACC_reg_i_6__5_n_0;
  wire ACC_reg_i_7__5_n_0;
  wire ACC_reg_i_8__5_n_0;
  wire ACC_reg_i_9__5_n_0;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire RST_IBUF;
  wire [32:0]\S2[2][32] ;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0]_rep ;
  wire \write_count_reg[0]_rep_0 ;
  wire \write_count_reg[0]_rep_1 ;
  wire \write_count_reg[0]_rep_10 ;
  wire \write_count_reg[0]_rep_11 ;
  wire \write_count_reg[0]_rep_12 ;
  wire \write_count_reg[0]_rep_13 ;
  wire \write_count_reg[0]_rep_14 ;
  wire \write_count_reg[0]_rep_2 ;
  wire \write_count_reg[0]_rep_3 ;
  wire \write_count_reg[0]_rep_4 ;
  wire \write_count_reg[0]_rep_5 ;
  wire \write_count_reg[0]_rep_6 ;
  wire \write_count_reg[0]_rep_7 ;
  wire \write_count_reg[0]_rep_8 ;
  wire \write_count_reg[0]_rep_9 ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_17__0_n_0,ACC_reg_i_18__0_n_0,ACC_reg_i_19__0_n_0,ACC_reg_i_20__0_n_0,ACC_reg_i_21__0_n_0,ACC_reg_i_22__0_n_0,ACC_reg_i_23__0_n_0,ACC_reg_i_24__0_n_0,ACC_reg_i_25__0_n_0,ACC_reg_i_26__0_n_0,ACC_reg_i_27__0_n_0,ACC_reg_i_28__0_n_0,ACC_reg_i_29__0_n_0,ACC_reg_i_30__0_n_0,ACC_reg_i_31__0_n_0,ACC_reg_i_32__0_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({ACC_reg_i_1__5_n_0,ACC_reg_i_1__5_n_0,ACC_reg_i_1__5_n_0,ACC_reg_i_2__5_n_0,ACC_reg_i_3__5_n_0,ACC_reg_i_4__5_n_0,ACC_reg_i_5__5_n_0,ACC_reg_i_6__5_n_0,ACC_reg_i_7__5_n_0,ACC_reg_i_8__5_n_0,ACC_reg_i_9__5_n_0,ACC_reg_i_10__5_n_0,ACC_reg_i_11__5_n_0,ACC_reg_i_12__5_n_0,ACC_reg_i_13__5_n_0,ACC_reg_i_14__5_n_0,ACC_reg_i_15__5_n_0,ACC_reg_i_16__5_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(CE_common_reg),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],\S2[2][32] }),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_10__5
       (.I0(\ACC_reg[15] [6]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_8 ),
        .I3(out[0]),
        .O(ACC_reg_i_10__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_11__5
       (.I0(\ACC_reg[15] [5]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_9 ),
        .I3(out[0]),
        .O(ACC_reg_i_11__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_12__5
       (.I0(\ACC_reg[15] [4]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_10 ),
        .I3(out[0]),
        .O(ACC_reg_i_12__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_13__5
       (.I0(\ACC_reg[15] [3]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_11 ),
        .I3(out[0]),
        .O(ACC_reg_i_13__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_14__5
       (.I0(\ACC_reg[15] [2]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_12 ),
        .I3(out[0]),
        .O(ACC_reg_i_14__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_15__5
       (.I0(\ACC_reg[15] [1]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_13 ),
        .I3(out[0]),
        .O(ACC_reg_i_15__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_16__5
       (.I0(\ACC_reg[15] [0]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_14 ),
        .I3(out[0]),
        .O(ACC_reg_i_16__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_17__0
       (.I0(\S2[2][32] [15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(ACC_reg_i_17__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_18__0
       (.I0(\S2[2][32] [14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(ACC_reg_i_18__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_19__0
       (.I0(\S2[2][32] [13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(ACC_reg_i_19__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_1__5
       (.I0(\ACC_reg[15] [15]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep ),
        .I3(out[0]),
        .O(ACC_reg_i_1__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_20__0
       (.I0(\S2[2][32] [12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(ACC_reg_i_20__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_21__0
       (.I0(\S2[2][32] [11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(ACC_reg_i_21__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_22__0
       (.I0(\S2[2][32] [10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(ACC_reg_i_22__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_23__0
       (.I0(\S2[2][32] [9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(ACC_reg_i_23__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_24__0
       (.I0(\S2[2][32] [8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(ACC_reg_i_24__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_25__0
       (.I0(\S2[2][32] [7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(ACC_reg_i_25__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_26__0
       (.I0(\S2[2][32] [6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(ACC_reg_i_26__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_27__0
       (.I0(\S2[2][32] [5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(ACC_reg_i_27__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_28__0
       (.I0(\S2[2][32] [4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(ACC_reg_i_28__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_29__0
       (.I0(\S2[2][32] [3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(ACC_reg_i_29__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_2__5
       (.I0(\ACC_reg[15] [14]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_0 ),
        .I3(out[0]),
        .O(ACC_reg_i_2__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_30__0
       (.I0(\S2[2][32] [2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(ACC_reg_i_30__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_31__0
       (.I0(\S2[2][32] [1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(ACC_reg_i_31__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_32__0
       (.I0(\S2[2][32] [0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(ACC_reg_i_32__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_3__5
       (.I0(\ACC_reg[15] [13]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_1 ),
        .I3(out[0]),
        .O(ACC_reg_i_3__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_4__5
       (.I0(\ACC_reg[15] [12]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_2 ),
        .I3(out[0]),
        .O(ACC_reg_i_4__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_5__5
       (.I0(\ACC_reg[15] [11]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_3 ),
        .I3(out[0]),
        .O(ACC_reg_i_5__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_6__5
       (.I0(\ACC_reg[15] [10]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_4 ),
        .I3(out[0]),
        .O(ACC_reg_i_6__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_7__5
       (.I0(\ACC_reg[15] [9]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_5 ),
        .I3(out[0]),
        .O(ACC_reg_i_7__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_8__5
       (.I0(\ACC_reg[15] [8]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_6 ),
        .I3(out[0]),
        .O(ACC_reg_i_8__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_9__5
       (.I0(\ACC_reg[15] [7]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_rep_7 ),
        .I3(out[0]),
        .O(ACC_reg_i_9__5_n_0));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_18
   (\S2[3][32] ,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    \ACC_reg[15] ,
    \write_count_reg[0] ,
    \write_count_reg[0]_0 ,
    \write_count_reg[0]_1 ,
    \write_count_reg[0]_2 ,
    \write_count_reg[0]_3 ,
    \write_count_reg[0]_4 ,
    \write_count_reg[0]_5 ,
    \write_count_reg[0]_6 ,
    \write_count_reg[0]_7 ,
    \write_count_reg[0]_8 ,
    \write_count_reg[0]_9 ,
    \write_count_reg[0]_10 ,
    \write_count_reg[0]_11 ,
    \write_count_reg[0]_12 ,
    \write_count_reg[0]_13 ,
    \write_count_reg[0]_14 );
  output [32:0]\S2[3][32] ;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input [15:0]\ACC_reg[15] ;
  input \write_count_reg[0] ;
  input \write_count_reg[0]_0 ;
  input \write_count_reg[0]_1 ;
  input \write_count_reg[0]_2 ;
  input \write_count_reg[0]_3 ;
  input \write_count_reg[0]_4 ;
  input \write_count_reg[0]_5 ;
  input \write_count_reg[0]_6 ;
  input \write_count_reg[0]_7 ;
  input \write_count_reg[0]_8 ;
  input \write_count_reg[0]_9 ;
  input \write_count_reg[0]_10 ;
  input \write_count_reg[0]_11 ;
  input \write_count_reg[0]_12 ;
  input \write_count_reg[0]_13 ;
  input \write_count_reg[0]_14 ;

  wire [15:0]\ACC_reg[15] ;
  wire ACC_reg_i_10__6_n_0;
  wire ACC_reg_i_11__6_n_0;
  wire ACC_reg_i_12__6_n_0;
  wire ACC_reg_i_13__6_n_0;
  wire ACC_reg_i_14__6_n_0;
  wire ACC_reg_i_15__6_n_0;
  wire ACC_reg_i_16__6_n_0;
  wire ACC_reg_i_17_n_0;
  wire ACC_reg_i_18_n_0;
  wire ACC_reg_i_19_n_0;
  wire ACC_reg_i_1__6_n_0;
  wire ACC_reg_i_20_n_0;
  wire ACC_reg_i_21_n_0;
  wire ACC_reg_i_22_n_0;
  wire ACC_reg_i_23_n_0;
  wire ACC_reg_i_24_n_0;
  wire ACC_reg_i_25_n_0;
  wire ACC_reg_i_26_n_0;
  wire ACC_reg_i_27_n_0;
  wire ACC_reg_i_28_n_0;
  wire ACC_reg_i_29_n_0;
  wire ACC_reg_i_2__6_n_0;
  wire ACC_reg_i_30_n_0;
  wire ACC_reg_i_31_n_0;
  wire ACC_reg_i_32_n_0;
  wire ACC_reg_i_3__6_n_0;
  wire ACC_reg_i_4__6_n_0;
  wire ACC_reg_i_5__6_n_0;
  wire ACC_reg_i_6__6_n_0;
  wire ACC_reg_i_7__6_n_0;
  wire ACC_reg_i_8__6_n_0;
  wire ACC_reg_i_9__6_n_0;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire RST_IBUF;
  wire [32:0]\S2[3][32] ;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0] ;
  wire \write_count_reg[0]_0 ;
  wire \write_count_reg[0]_1 ;
  wire \write_count_reg[0]_10 ;
  wire \write_count_reg[0]_11 ;
  wire \write_count_reg[0]_12 ;
  wire \write_count_reg[0]_13 ;
  wire \write_count_reg[0]_14 ;
  wire \write_count_reg[0]_2 ;
  wire \write_count_reg[0]_3 ;
  wire \write_count_reg[0]_4 ;
  wire \write_count_reg[0]_5 ;
  wire \write_count_reg[0]_6 ;
  wire \write_count_reg[0]_7 ;
  wire \write_count_reg[0]_8 ;
  wire \write_count_reg[0]_9 ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_17_n_0,ACC_reg_i_18_n_0,ACC_reg_i_19_n_0,ACC_reg_i_20_n_0,ACC_reg_i_21_n_0,ACC_reg_i_22_n_0,ACC_reg_i_23_n_0,ACC_reg_i_24_n_0,ACC_reg_i_25_n_0,ACC_reg_i_26_n_0,ACC_reg_i_27_n_0,ACC_reg_i_28_n_0,ACC_reg_i_29_n_0,ACC_reg_i_30_n_0,ACC_reg_i_31_n_0,ACC_reg_i_32_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({ACC_reg_i_1__6_n_0,ACC_reg_i_1__6_n_0,ACC_reg_i_1__6_n_0,ACC_reg_i_2__6_n_0,ACC_reg_i_3__6_n_0,ACC_reg_i_4__6_n_0,ACC_reg_i_5__6_n_0,ACC_reg_i_6__6_n_0,ACC_reg_i_7__6_n_0,ACC_reg_i_8__6_n_0,ACC_reg_i_9__6_n_0,ACC_reg_i_10__6_n_0,ACC_reg_i_11__6_n_0,ACC_reg_i_12__6_n_0,ACC_reg_i_13__6_n_0,ACC_reg_i_14__6_n_0,ACC_reg_i_15__6_n_0,ACC_reg_i_16__6_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(CE_common_reg),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],\S2[3][32] }),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_10__6
       (.I0(\ACC_reg[15] [6]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_8 ),
        .I3(out[0]),
        .O(ACC_reg_i_10__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_11__6
       (.I0(\ACC_reg[15] [5]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_9 ),
        .I3(out[0]),
        .O(ACC_reg_i_11__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_12__6
       (.I0(\ACC_reg[15] [4]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_10 ),
        .I3(out[0]),
        .O(ACC_reg_i_12__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_13__6
       (.I0(\ACC_reg[15] [3]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_11 ),
        .I3(out[0]),
        .O(ACC_reg_i_13__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_14__6
       (.I0(\ACC_reg[15] [2]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_12 ),
        .I3(out[0]),
        .O(ACC_reg_i_14__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_15__6
       (.I0(\ACC_reg[15] [1]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_13 ),
        .I3(out[0]),
        .O(ACC_reg_i_15__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_16__6
       (.I0(\ACC_reg[15] [0]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_14 ),
        .I3(out[0]),
        .O(ACC_reg_i_16__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_17
       (.I0(\S2[3][32] [15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(ACC_reg_i_17_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_18
       (.I0(\S2[3][32] [14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(ACC_reg_i_18_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_19
       (.I0(\S2[3][32] [13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(ACC_reg_i_19_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_1__6
       (.I0(\ACC_reg[15] [15]),
        .I1(out[1]),
        .I2(\write_count_reg[0] ),
        .I3(out[0]),
        .O(ACC_reg_i_1__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_20
       (.I0(\S2[3][32] [12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(ACC_reg_i_20_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_21
       (.I0(\S2[3][32] [11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(ACC_reg_i_21_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_22
       (.I0(\S2[3][32] [10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(ACC_reg_i_22_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_23
       (.I0(\S2[3][32] [9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(ACC_reg_i_23_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_24
       (.I0(\S2[3][32] [8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(ACC_reg_i_24_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_25
       (.I0(\S2[3][32] [7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(ACC_reg_i_25_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_26
       (.I0(\S2[3][32] [6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(ACC_reg_i_26_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_27
       (.I0(\S2[3][32] [5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(ACC_reg_i_27_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_28
       (.I0(\S2[3][32] [4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(ACC_reg_i_28_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_29
       (.I0(\S2[3][32] [3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(ACC_reg_i_29_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_2__6
       (.I0(\ACC_reg[15] [14]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_0 ),
        .I3(out[0]),
        .O(ACC_reg_i_2__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_30
       (.I0(\S2[3][32] [2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(ACC_reg_i_30_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_31
       (.I0(\S2[3][32] [1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(ACC_reg_i_31_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_32
       (.I0(\S2[3][32] [0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(ACC_reg_i_32_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_3__6
       (.I0(\ACC_reg[15] [13]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_1 ),
        .I3(out[0]),
        .O(ACC_reg_i_3__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_4__6
       (.I0(\ACC_reg[15] [12]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_2 ),
        .I3(out[0]),
        .O(ACC_reg_i_4__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_5__6
       (.I0(\ACC_reg[15] [11]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_3 ),
        .I3(out[0]),
        .O(ACC_reg_i_5__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_6__6
       (.I0(\ACC_reg[15] [10]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_4 ),
        .I3(out[0]),
        .O(ACC_reg_i_6__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_7__6
       (.I0(\ACC_reg[15] [9]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_5 ),
        .I3(out[0]),
        .O(ACC_reg_i_7__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_8__6
       (.I0(\ACC_reg[15] [8]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_6 ),
        .I3(out[0]),
        .O(ACC_reg_i_8__6_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_9__6
       (.I0(\ACC_reg[15] [7]),
        .I1(out[1]),
        .I2(\write_count_reg[0]_7 ),
        .I3(out[0]),
        .O(ACC_reg_i_9__6_n_0));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_19
   (P,
    ACC_reg_0,
    ACC_reg_1,
    ACC_reg_2,
    ACC_reg_3,
    ACC_reg_4,
    ACC_reg_5,
    ACC_reg_6,
    ACC_reg_7,
    ACC_reg_8,
    ACC_reg_9,
    ACC_reg_10,
    ACC_reg_11,
    ACC_reg_12,
    ACC_reg_13,
    ACC_reg_14,
    ACC_reg_15,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    out,
    addr_in_1,
    \input_vector[7][15] ,
    \input_vector[6][15] ,
    \input_vector[5][15] ,
    \input_vector[4][15] ,
    \input_vector[3][15] ,
    \input_vector[2][15] ,
    \mul_count_reg[1]_rep__0 ,
    \input_vector[1][15] ,
    \input_vector[0][15] ,
    \input_vector[7][14] ,
    \input_vector[6][14] ,
    \input_vector[5][14] ,
    \input_vector[4][14] ,
    \input_vector[3][14] ,
    \input_vector[2][14] ,
    \input_vector[1][14] ,
    \input_vector[0][14] ,
    \input_vector[7][13] ,
    \input_vector[6][13] ,
    \input_vector[5][13] ,
    \input_vector[4][13] ,
    \input_vector[3][13] ,
    \input_vector[2][13] ,
    \input_vector[1][13] ,
    \input_vector[0][13] ,
    \input_vector[7][12] ,
    \input_vector[6][12] ,
    \input_vector[5][12] ,
    \input_vector[4][12] ,
    \input_vector[3][12] ,
    \input_vector[2][12] ,
    \input_vector[1][12] ,
    \input_vector[0][12] ,
    \input_vector[7][11] ,
    \input_vector[6][11] ,
    \input_vector[5][11] ,
    \input_vector[4][11] ,
    \input_vector[3][11] ,
    \input_vector[2][11] ,
    \input_vector[1][11] ,
    \input_vector[0][11] ,
    \input_vector[7][10] ,
    \input_vector[6][10] ,
    \input_vector[5][10] ,
    \input_vector[4][10] ,
    \input_vector[3][10] ,
    \input_vector[2][10] ,
    \input_vector[1][10] ,
    \input_vector[0][10] ,
    \input_vector[7][9] ,
    \input_vector[6][9] ,
    \input_vector[5][9] ,
    \input_vector[4][9] ,
    \input_vector[3][9] ,
    \input_vector[2][9] ,
    \input_vector[1][9] ,
    \input_vector[0][9] ,
    \input_vector[7][8] ,
    \input_vector[6][8] ,
    \input_vector[5][8] ,
    \input_vector[4][8] ,
    \input_vector[3][8] ,
    \input_vector[2][8] ,
    \input_vector[1][8] ,
    \input_vector[0][8] ,
    \input_vector[7][7] ,
    \input_vector[6][7] ,
    \input_vector[5][7] ,
    \input_vector[4][7] ,
    \input_vector[3][7] ,
    \input_vector[2][7] ,
    \input_vector[1][7] ,
    \input_vector[0][7] ,
    \input_vector[7][6] ,
    \input_vector[6][6] ,
    \input_vector[5][6] ,
    \input_vector[4][6] ,
    \input_vector[3][6] ,
    \input_vector[2][6] ,
    \input_vector[1][6] ,
    \input_vector[0][6] ,
    \input_vector[7][5] ,
    \input_vector[6][5] ,
    \input_vector[5][5] ,
    \input_vector[4][5] ,
    \input_vector[3][5] ,
    \input_vector[2][5] ,
    \input_vector[1][5] ,
    \input_vector[0][5] ,
    \input_vector[7][4] ,
    \input_vector[6][4] ,
    \input_vector[5][4] ,
    \input_vector[4][4] ,
    \input_vector[3][4] ,
    \input_vector[2][4] ,
    \input_vector[1][4] ,
    \input_vector[0][4] ,
    \input_vector[7][3] ,
    \input_vector[6][3] ,
    \input_vector[5][3] ,
    \input_vector[4][3] ,
    \input_vector[3][3] ,
    \input_vector[2][3] ,
    \input_vector[1][3] ,
    \input_vector[0][3] ,
    \input_vector[7][2] ,
    \input_vector[6][2] ,
    \input_vector[5][2] ,
    \input_vector[4][2] ,
    \input_vector[3][2] ,
    \input_vector[2][2] ,
    \input_vector[1][2] ,
    \input_vector[0][2] ,
    \input_vector[7][1] ,
    \input_vector[6][1] ,
    \input_vector[5][1] ,
    \input_vector[4][1] ,
    \input_vector[3][1] ,
    \input_vector[2][1] ,
    \input_vector[1][1] ,
    \input_vector[0][1] ,
    \input_vector[7][0] ,
    \input_vector[6][0] ,
    \input_vector[5][0] ,
    \input_vector[4][0] ,
    \input_vector[3][0] ,
    \input_vector[2][0] ,
    \input_vector[1][0] ,
    \input_vector[0][0] ,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_rep_0 ,
    \write_count_reg[0]_rep_1 ,
    \write_count_reg[0]_rep_2 ,
    \write_count_reg[0]_rep_3 ,
    \write_count_reg[0]_rep_4 ,
    \write_count_reg[0]_rep_5 ,
    \write_count_reg[0]_rep_6 ,
    \write_count_reg[0]_rep_7 ,
    \write_count_reg[0]_rep_8 ,
    \write_count_reg[0]_rep_9 ,
    \write_count_reg[0]_rep_10 ,
    \write_count_reg[0]_rep_11 ,
    \write_count_reg[0]_rep_12 ,
    \write_count_reg[0]_rep_13 ,
    \write_count_reg[0]_rep_14 );
  output [32:0]P;
  output ACC_reg_0;
  output ACC_reg_1;
  output ACC_reg_2;
  output ACC_reg_3;
  output ACC_reg_4;
  output ACC_reg_5;
  output ACC_reg_6;
  output ACC_reg_7;
  output ACC_reg_8;
  output ACC_reg_9;
  output ACC_reg_10;
  output ACC_reg_11;
  output ACC_reg_12;
  output ACC_reg_13;
  output ACC_reg_14;
  output ACC_reg_15;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]out;
  input [2:0]addr_in_1;
  input \input_vector[7][15] ;
  input \input_vector[6][15] ;
  input \input_vector[5][15] ;
  input \input_vector[4][15] ;
  input \input_vector[3][15] ;
  input \input_vector[2][15] ;
  input [0:0]\mul_count_reg[1]_rep__0 ;
  input \input_vector[1][15] ;
  input \input_vector[0][15] ;
  input \input_vector[7][14] ;
  input \input_vector[6][14] ;
  input \input_vector[5][14] ;
  input \input_vector[4][14] ;
  input \input_vector[3][14] ;
  input \input_vector[2][14] ;
  input \input_vector[1][14] ;
  input \input_vector[0][14] ;
  input \input_vector[7][13] ;
  input \input_vector[6][13] ;
  input \input_vector[5][13] ;
  input \input_vector[4][13] ;
  input \input_vector[3][13] ;
  input \input_vector[2][13] ;
  input \input_vector[1][13] ;
  input \input_vector[0][13] ;
  input \input_vector[7][12] ;
  input \input_vector[6][12] ;
  input \input_vector[5][12] ;
  input \input_vector[4][12] ;
  input \input_vector[3][12] ;
  input \input_vector[2][12] ;
  input \input_vector[1][12] ;
  input \input_vector[0][12] ;
  input \input_vector[7][11] ;
  input \input_vector[6][11] ;
  input \input_vector[5][11] ;
  input \input_vector[4][11] ;
  input \input_vector[3][11] ;
  input \input_vector[2][11] ;
  input \input_vector[1][11] ;
  input \input_vector[0][11] ;
  input \input_vector[7][10] ;
  input \input_vector[6][10] ;
  input \input_vector[5][10] ;
  input \input_vector[4][10] ;
  input \input_vector[3][10] ;
  input \input_vector[2][10] ;
  input \input_vector[1][10] ;
  input \input_vector[0][10] ;
  input \input_vector[7][9] ;
  input \input_vector[6][9] ;
  input \input_vector[5][9] ;
  input \input_vector[4][9] ;
  input \input_vector[3][9] ;
  input \input_vector[2][9] ;
  input \input_vector[1][9] ;
  input \input_vector[0][9] ;
  input \input_vector[7][8] ;
  input \input_vector[6][8] ;
  input \input_vector[5][8] ;
  input \input_vector[4][8] ;
  input \input_vector[3][8] ;
  input \input_vector[2][8] ;
  input \input_vector[1][8] ;
  input \input_vector[0][8] ;
  input \input_vector[7][7] ;
  input \input_vector[6][7] ;
  input \input_vector[5][7] ;
  input \input_vector[4][7] ;
  input \input_vector[3][7] ;
  input \input_vector[2][7] ;
  input \input_vector[1][7] ;
  input \input_vector[0][7] ;
  input \input_vector[7][6] ;
  input \input_vector[6][6] ;
  input \input_vector[5][6] ;
  input \input_vector[4][6] ;
  input \input_vector[3][6] ;
  input \input_vector[2][6] ;
  input \input_vector[1][6] ;
  input \input_vector[0][6] ;
  input \input_vector[7][5] ;
  input \input_vector[6][5] ;
  input \input_vector[5][5] ;
  input \input_vector[4][5] ;
  input \input_vector[3][5] ;
  input \input_vector[2][5] ;
  input \input_vector[1][5] ;
  input \input_vector[0][5] ;
  input \input_vector[7][4] ;
  input \input_vector[6][4] ;
  input \input_vector[5][4] ;
  input \input_vector[4][4] ;
  input \input_vector[3][4] ;
  input \input_vector[2][4] ;
  input \input_vector[1][4] ;
  input \input_vector[0][4] ;
  input \input_vector[7][3] ;
  input \input_vector[6][3] ;
  input \input_vector[5][3] ;
  input \input_vector[4][3] ;
  input \input_vector[3][3] ;
  input \input_vector[2][3] ;
  input \input_vector[1][3] ;
  input \input_vector[0][3] ;
  input \input_vector[7][2] ;
  input \input_vector[6][2] ;
  input \input_vector[5][2] ;
  input \input_vector[4][2] ;
  input \input_vector[3][2] ;
  input \input_vector[2][2] ;
  input \input_vector[1][2] ;
  input \input_vector[0][2] ;
  input \input_vector[7][1] ;
  input \input_vector[6][1] ;
  input \input_vector[5][1] ;
  input \input_vector[4][1] ;
  input \input_vector[3][1] ;
  input \input_vector[2][1] ;
  input \input_vector[1][1] ;
  input \input_vector[0][1] ;
  input \input_vector[7][0] ;
  input \input_vector[6][0] ;
  input \input_vector[5][0] ;
  input \input_vector[4][0] ;
  input \input_vector[3][0] ;
  input \input_vector[2][0] ;
  input \input_vector[1][0] ;
  input \input_vector[0][0] ;
  input \write_count_reg[0]_rep ;
  input \write_count_reg[0]_rep_0 ;
  input \write_count_reg[0]_rep_1 ;
  input \write_count_reg[0]_rep_2 ;
  input \write_count_reg[0]_rep_3 ;
  input \write_count_reg[0]_rep_4 ;
  input \write_count_reg[0]_rep_5 ;
  input \write_count_reg[0]_rep_6 ;
  input \write_count_reg[0]_rep_7 ;
  input \write_count_reg[0]_rep_8 ;
  input \write_count_reg[0]_rep_9 ;
  input \write_count_reg[0]_rep_10 ;
  input \write_count_reg[0]_rep_11 ;
  input \write_count_reg[0]_rep_12 ;
  input \write_count_reg[0]_rep_13 ;
  input \write_count_reg[0]_rep_14 ;

  wire [15:0]A;
  wire ACC_reg_0;
  wire ACC_reg_1;
  wire ACC_reg_10;
  wire ACC_reg_11;
  wire ACC_reg_12;
  wire ACC_reg_13;
  wire ACC_reg_14;
  wire ACC_reg_15;
  wire ACC_reg_2;
  wire ACC_reg_3;
  wire ACC_reg_4;
  wire ACC_reg_5;
  wire ACC_reg_6;
  wire ACC_reg_7;
  wire ACC_reg_8;
  wire ACC_reg_9;
  wire ACC_reg_i_49_n_0;
  wire ACC_reg_i_50_n_0;
  wire ACC_reg_i_51_n_0;
  wire ACC_reg_i_52_n_0;
  wire ACC_reg_i_53_n_0;
  wire ACC_reg_i_54_n_0;
  wire ACC_reg_i_55_n_0;
  wire ACC_reg_i_56_n_0;
  wire ACC_reg_i_57_n_0;
  wire ACC_reg_i_58_n_0;
  wire ACC_reg_i_59_n_0;
  wire ACC_reg_i_60_n_0;
  wire ACC_reg_i_61_n_0;
  wire ACC_reg_i_62_n_0;
  wire ACC_reg_i_63_n_0;
  wire ACC_reg_i_64_n_0;
  wire ACC_reg_i_65_n_0;
  wire ACC_reg_i_66_n_0;
  wire ACC_reg_i_67_n_0;
  wire ACC_reg_i_68_n_0;
  wire ACC_reg_i_69_n_0;
  wire ACC_reg_i_70_n_0;
  wire ACC_reg_i_71_n_0;
  wire ACC_reg_i_72_n_0;
  wire ACC_reg_i_73_n_0;
  wire ACC_reg_i_74_n_0;
  wire ACC_reg_i_75_n_0;
  wire ACC_reg_i_76_n_0;
  wire ACC_reg_i_77_n_0;
  wire ACC_reg_i_78_n_0;
  wire ACC_reg_i_79_n_0;
  wire ACC_reg_i_80_n_0;
  wire [15:0]B;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire [32:0]P;
  wire RST_IBUF;
  wire [2:0]addr_in_1;
  wire \input_vector[0][0] ;
  wire \input_vector[0][10] ;
  wire \input_vector[0][11] ;
  wire \input_vector[0][12] ;
  wire \input_vector[0][13] ;
  wire \input_vector[0][14] ;
  wire \input_vector[0][15] ;
  wire \input_vector[0][1] ;
  wire \input_vector[0][2] ;
  wire \input_vector[0][3] ;
  wire \input_vector[0][4] ;
  wire \input_vector[0][5] ;
  wire \input_vector[0][6] ;
  wire \input_vector[0][7] ;
  wire \input_vector[0][8] ;
  wire \input_vector[0][9] ;
  wire \input_vector[1][0] ;
  wire \input_vector[1][10] ;
  wire \input_vector[1][11] ;
  wire \input_vector[1][12] ;
  wire \input_vector[1][13] ;
  wire \input_vector[1][14] ;
  wire \input_vector[1][15] ;
  wire \input_vector[1][1] ;
  wire \input_vector[1][2] ;
  wire \input_vector[1][3] ;
  wire \input_vector[1][4] ;
  wire \input_vector[1][5] ;
  wire \input_vector[1][6] ;
  wire \input_vector[1][7] ;
  wire \input_vector[1][8] ;
  wire \input_vector[1][9] ;
  wire \input_vector[2][0] ;
  wire \input_vector[2][10] ;
  wire \input_vector[2][11] ;
  wire \input_vector[2][12] ;
  wire \input_vector[2][13] ;
  wire \input_vector[2][14] ;
  wire \input_vector[2][15] ;
  wire \input_vector[2][1] ;
  wire \input_vector[2][2] ;
  wire \input_vector[2][3] ;
  wire \input_vector[2][4] ;
  wire \input_vector[2][5] ;
  wire \input_vector[2][6] ;
  wire \input_vector[2][7] ;
  wire \input_vector[2][8] ;
  wire \input_vector[2][9] ;
  wire \input_vector[3][0] ;
  wire \input_vector[3][10] ;
  wire \input_vector[3][11] ;
  wire \input_vector[3][12] ;
  wire \input_vector[3][13] ;
  wire \input_vector[3][14] ;
  wire \input_vector[3][15] ;
  wire \input_vector[3][1] ;
  wire \input_vector[3][2] ;
  wire \input_vector[3][3] ;
  wire \input_vector[3][4] ;
  wire \input_vector[3][5] ;
  wire \input_vector[3][6] ;
  wire \input_vector[3][7] ;
  wire \input_vector[3][8] ;
  wire \input_vector[3][9] ;
  wire \input_vector[4][0] ;
  wire \input_vector[4][10] ;
  wire \input_vector[4][11] ;
  wire \input_vector[4][12] ;
  wire \input_vector[4][13] ;
  wire \input_vector[4][14] ;
  wire \input_vector[4][15] ;
  wire \input_vector[4][1] ;
  wire \input_vector[4][2] ;
  wire \input_vector[4][3] ;
  wire \input_vector[4][4] ;
  wire \input_vector[4][5] ;
  wire \input_vector[4][6] ;
  wire \input_vector[4][7] ;
  wire \input_vector[4][8] ;
  wire \input_vector[4][9] ;
  wire \input_vector[5][0] ;
  wire \input_vector[5][10] ;
  wire \input_vector[5][11] ;
  wire \input_vector[5][12] ;
  wire \input_vector[5][13] ;
  wire \input_vector[5][14] ;
  wire \input_vector[5][15] ;
  wire \input_vector[5][1] ;
  wire \input_vector[5][2] ;
  wire \input_vector[5][3] ;
  wire \input_vector[5][4] ;
  wire \input_vector[5][5] ;
  wire \input_vector[5][6] ;
  wire \input_vector[5][7] ;
  wire \input_vector[5][8] ;
  wire \input_vector[5][9] ;
  wire \input_vector[6][0] ;
  wire \input_vector[6][10] ;
  wire \input_vector[6][11] ;
  wire \input_vector[6][12] ;
  wire \input_vector[6][13] ;
  wire \input_vector[6][14] ;
  wire \input_vector[6][15] ;
  wire \input_vector[6][1] ;
  wire \input_vector[6][2] ;
  wire \input_vector[6][3] ;
  wire \input_vector[6][4] ;
  wire \input_vector[6][5] ;
  wire \input_vector[6][6] ;
  wire \input_vector[6][7] ;
  wire \input_vector[6][8] ;
  wire \input_vector[6][9] ;
  wire \input_vector[7][0] ;
  wire \input_vector[7][10] ;
  wire \input_vector[7][11] ;
  wire \input_vector[7][12] ;
  wire \input_vector[7][13] ;
  wire \input_vector[7][14] ;
  wire \input_vector[7][15] ;
  wire \input_vector[7][1] ;
  wire \input_vector[7][2] ;
  wire \input_vector[7][3] ;
  wire \input_vector[7][4] ;
  wire \input_vector[7][5] ;
  wire \input_vector[7][6] ;
  wire \input_vector[7][7] ;
  wire \input_vector[7][8] ;
  wire \input_vector[7][9] ;
  wire [0:0]\mul_count_reg[1]_rep__0 ;
  wire [1:0]out;
  wire \write_count_reg[0]_rep ;
  wire \write_count_reg[0]_rep_0 ;
  wire \write_count_reg[0]_rep_1 ;
  wire \write_count_reg[0]_rep_10 ;
  wire \write_count_reg[0]_rep_11 ;
  wire \write_count_reg[0]_rep_12 ;
  wire \write_count_reg[0]_rep_13 ;
  wire \write_count_reg[0]_rep_14 ;
  wire \write_count_reg[0]_rep_2 ;
  wire \write_count_reg[0]_rep_3 ;
  wire \write_count_reg[0]_rep_4 ;
  wire \write_count_reg[0]_rep_5 ;
  wire \write_count_reg[0]_rep_6 ;
  wire \write_count_reg[0]_rep_7 ;
  wire \write_count_reg[0]_rep_8 ;
  wire \write_count_reg[0]_rep_9 ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({B[15],B[15],B}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(CE_common_reg),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],P}),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep ),
        .I2(out[1]),
        .O(B[15]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_10
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_8 ),
        .I2(out[1]),
        .O(B[6]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_11
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_9 ),
        .I2(out[1]),
        .O(B[5]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_12
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_10 ),
        .I2(out[1]),
        .O(B[4]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_13
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_11 ),
        .I2(out[1]),
        .O(B[3]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_14
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_12 ),
        .I2(out[1]),
        .O(B[2]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_15
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_13 ),
        .I2(out[1]),
        .O(B[1]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_16
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_14 ),
        .I2(out[1]),
        .O(B[0]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_17__6
       (.I0(P[15]),
        .I1(out[1]),
        .I2(ACC_reg_0),
        .I3(out[0]),
        .O(A[15]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_18__6
       (.I0(P[14]),
        .I1(out[1]),
        .I2(ACC_reg_1),
        .I3(out[0]),
        .O(A[14]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_19__6
       (.I0(P[13]),
        .I1(out[1]),
        .I2(ACC_reg_2),
        .I3(out[0]),
        .O(A[13]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_0 ),
        .I2(out[1]),
        .O(B[14]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_20__6
       (.I0(P[12]),
        .I1(out[1]),
        .I2(ACC_reg_3),
        .I3(out[0]),
        .O(A[12]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_21__6
       (.I0(P[11]),
        .I1(out[1]),
        .I2(ACC_reg_4),
        .I3(out[0]),
        .O(A[11]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_22__6
       (.I0(P[10]),
        .I1(out[1]),
        .I2(ACC_reg_5),
        .I3(out[0]),
        .O(A[10]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_23__6
       (.I0(P[9]),
        .I1(out[1]),
        .I2(ACC_reg_6),
        .I3(out[0]),
        .O(A[9]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_24__6
       (.I0(P[8]),
        .I1(out[1]),
        .I2(ACC_reg_7),
        .I3(out[0]),
        .O(A[8]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_25__6
       (.I0(P[7]),
        .I1(out[1]),
        .I2(ACC_reg_8),
        .I3(out[0]),
        .O(A[7]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_26__6
       (.I0(P[6]),
        .I1(out[1]),
        .I2(ACC_reg_9),
        .I3(out[0]),
        .O(A[6]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_27__6
       (.I0(P[5]),
        .I1(out[1]),
        .I2(ACC_reg_10),
        .I3(out[0]),
        .O(A[5]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_28__6
       (.I0(P[4]),
        .I1(out[1]),
        .I2(ACC_reg_11),
        .I3(out[0]),
        .O(A[4]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_29__6
       (.I0(P[3]),
        .I1(out[1]),
        .I2(ACC_reg_12),
        .I3(out[0]),
        .O(A[3]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_3
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_1 ),
        .I2(out[1]),
        .O(B[13]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_30__6
       (.I0(P[2]),
        .I1(out[1]),
        .I2(ACC_reg_13),
        .I3(out[0]),
        .O(A[2]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_31__6
       (.I0(P[1]),
        .I1(out[1]),
        .I2(ACC_reg_14),
        .I3(out[0]),
        .O(A[1]));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_32__6
       (.I0(P[0]),
        .I1(out[1]),
        .I2(ACC_reg_15),
        .I3(out[0]),
        .O(A[0]));
  MUXF7 ACC_reg_i_33
       (.I0(ACC_reg_i_49_n_0),
        .I1(ACC_reg_i_50_n_0),
        .O(ACC_reg_0),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_34
       (.I0(ACC_reg_i_51_n_0),
        .I1(ACC_reg_i_52_n_0),
        .O(ACC_reg_1),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_35
       (.I0(ACC_reg_i_53_n_0),
        .I1(ACC_reg_i_54_n_0),
        .O(ACC_reg_2),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_36
       (.I0(ACC_reg_i_55_n_0),
        .I1(ACC_reg_i_56_n_0),
        .O(ACC_reg_3),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_37
       (.I0(ACC_reg_i_57_n_0),
        .I1(ACC_reg_i_58_n_0),
        .O(ACC_reg_4),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_38
       (.I0(ACC_reg_i_59_n_0),
        .I1(ACC_reg_i_60_n_0),
        .O(ACC_reg_5),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_39
       (.I0(ACC_reg_i_61_n_0),
        .I1(ACC_reg_i_62_n_0),
        .O(ACC_reg_6),
        .S(addr_in_1[2]));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_4
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_2 ),
        .I2(out[1]),
        .O(B[12]));
  MUXF7 ACC_reg_i_40
       (.I0(ACC_reg_i_63_n_0),
        .I1(ACC_reg_i_64_n_0),
        .O(ACC_reg_7),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_41
       (.I0(ACC_reg_i_65_n_0),
        .I1(ACC_reg_i_66_n_0),
        .O(ACC_reg_8),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_42
       (.I0(ACC_reg_i_67_n_0),
        .I1(ACC_reg_i_68_n_0),
        .O(ACC_reg_9),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_43
       (.I0(ACC_reg_i_69_n_0),
        .I1(ACC_reg_i_70_n_0),
        .O(ACC_reg_10),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_44
       (.I0(ACC_reg_i_71_n_0),
        .I1(ACC_reg_i_72_n_0),
        .O(ACC_reg_11),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_45
       (.I0(ACC_reg_i_73_n_0),
        .I1(ACC_reg_i_74_n_0),
        .O(ACC_reg_12),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_46
       (.I0(ACC_reg_i_75_n_0),
        .I1(ACC_reg_i_76_n_0),
        .O(ACC_reg_13),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_47
       (.I0(ACC_reg_i_77_n_0),
        .I1(ACC_reg_i_78_n_0),
        .O(ACC_reg_14),
        .S(addr_in_1[2]));
  MUXF7 ACC_reg_i_48
       (.I0(ACC_reg_i_79_n_0),
        .I1(ACC_reg_i_80_n_0),
        .O(ACC_reg_15),
        .S(addr_in_1[2]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_49
       (.I0(\input_vector[3][15] ),
        .I1(\input_vector[2][15] ),
        .I2(\mul_count_reg[1]_rep__0 ),
        .I3(\input_vector[1][15] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][15] ),
        .O(ACC_reg_i_49_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_5
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_3 ),
        .I2(out[1]),
        .O(B[11]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_50
       (.I0(\input_vector[7][15] ),
        .I1(\input_vector[6][15] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][15] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][15] ),
        .O(ACC_reg_i_50_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_51
       (.I0(\input_vector[3][14] ),
        .I1(\input_vector[2][14] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][14] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][14] ),
        .O(ACC_reg_i_51_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_52
       (.I0(\input_vector[7][14] ),
        .I1(\input_vector[6][14] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][14] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][14] ),
        .O(ACC_reg_i_52_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_53
       (.I0(\input_vector[3][13] ),
        .I1(\input_vector[2][13] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][13] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][13] ),
        .O(ACC_reg_i_53_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_54
       (.I0(\input_vector[7][13] ),
        .I1(\input_vector[6][13] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][13] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][13] ),
        .O(ACC_reg_i_54_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_55
       (.I0(\input_vector[3][12] ),
        .I1(\input_vector[2][12] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][12] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][12] ),
        .O(ACC_reg_i_55_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_56
       (.I0(\input_vector[7][12] ),
        .I1(\input_vector[6][12] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][12] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][12] ),
        .O(ACC_reg_i_56_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_57
       (.I0(\input_vector[3][11] ),
        .I1(\input_vector[2][11] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][11] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][11] ),
        .O(ACC_reg_i_57_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_58
       (.I0(\input_vector[7][11] ),
        .I1(\input_vector[6][11] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][11] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][11] ),
        .O(ACC_reg_i_58_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_59
       (.I0(\input_vector[3][10] ),
        .I1(\input_vector[2][10] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][10] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][10] ),
        .O(ACC_reg_i_59_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_6
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_4 ),
        .I2(out[1]),
        .O(B[10]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_60
       (.I0(\input_vector[7][10] ),
        .I1(\input_vector[6][10] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][10] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][10] ),
        .O(ACC_reg_i_60_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_61
       (.I0(\input_vector[3][9] ),
        .I1(\input_vector[2][9] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][9] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][9] ),
        .O(ACC_reg_i_61_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_62
       (.I0(\input_vector[7][9] ),
        .I1(\input_vector[6][9] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][9] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][9] ),
        .O(ACC_reg_i_62_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_63
       (.I0(\input_vector[3][8] ),
        .I1(\input_vector[2][8] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][8] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][8] ),
        .O(ACC_reg_i_63_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_64
       (.I0(\input_vector[7][8] ),
        .I1(\input_vector[6][8] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][8] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][8] ),
        .O(ACC_reg_i_64_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_65
       (.I0(\input_vector[3][7] ),
        .I1(\input_vector[2][7] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][7] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][7] ),
        .O(ACC_reg_i_65_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_66
       (.I0(\input_vector[7][7] ),
        .I1(\input_vector[6][7] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][7] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][7] ),
        .O(ACC_reg_i_66_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_67
       (.I0(\input_vector[3][6] ),
        .I1(\input_vector[2][6] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][6] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][6] ),
        .O(ACC_reg_i_67_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_68
       (.I0(\input_vector[7][6] ),
        .I1(\input_vector[6][6] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][6] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][6] ),
        .O(ACC_reg_i_68_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_69
       (.I0(\input_vector[3][5] ),
        .I1(\input_vector[2][5] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][5] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][5] ),
        .O(ACC_reg_i_69_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_7
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_5 ),
        .I2(out[1]),
        .O(B[9]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_70
       (.I0(\input_vector[7][5] ),
        .I1(\input_vector[6][5] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][5] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][5] ),
        .O(ACC_reg_i_70_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_71
       (.I0(\input_vector[3][4] ),
        .I1(\input_vector[2][4] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][4] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][4] ),
        .O(ACC_reg_i_71_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_72
       (.I0(\input_vector[7][4] ),
        .I1(\input_vector[6][4] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][4] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][4] ),
        .O(ACC_reg_i_72_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_73
       (.I0(\input_vector[3][3] ),
        .I1(\input_vector[2][3] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][3] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][3] ),
        .O(ACC_reg_i_73_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_74
       (.I0(\input_vector[7][3] ),
        .I1(\input_vector[6][3] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][3] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][3] ),
        .O(ACC_reg_i_74_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_75
       (.I0(\input_vector[3][2] ),
        .I1(\input_vector[2][2] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][2] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][2] ),
        .O(ACC_reg_i_75_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_76
       (.I0(\input_vector[7][2] ),
        .I1(\input_vector[6][2] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][2] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][2] ),
        .O(ACC_reg_i_76_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_77
       (.I0(\input_vector[3][1] ),
        .I1(\input_vector[2][1] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][1] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][1] ),
        .O(ACC_reg_i_77_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_78
       (.I0(\input_vector[7][1] ),
        .I1(\input_vector[6][1] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][1] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][1] ),
        .O(ACC_reg_i_78_n_0));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_79
       (.I0(\input_vector[3][0] ),
        .I1(\input_vector[2][0] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[1][0] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[0][0] ),
        .O(ACC_reg_i_79_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_8
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_6 ),
        .I2(out[1]),
        .O(B[8]));
  LUT6 #(
    .INIT(64'hAFA0CFCFAFA0C0C0)) 
    ACC_reg_i_80
       (.I0(\input_vector[7][0] ),
        .I1(\input_vector[6][0] ),
        .I2(addr_in_1[1]),
        .I3(\input_vector[5][0] ),
        .I4(addr_in_1[0]),
        .I5(\input_vector[4][0] ),
        .O(ACC_reg_i_80_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_9
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_7 ),
        .I2(out[1]),
        .O(B[7]));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_20
   (\S1[1][32] ,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    \write_count_reg[0] ,
    \write_count_reg[0]_0 ,
    \write_count_reg[0]_1 ,
    \write_count_reg[0]_2 ,
    \write_count_reg[0]_3 ,
    \write_count_reg[0]_4 ,
    \write_count_reg[0]_5 ,
    \write_count_reg[0]_6 ,
    \write_count_reg[0]_7 ,
    \write_count_reg[0]_8 ,
    \write_count_reg[0]_9 ,
    \write_count_reg[0]_10 ,
    \write_count_reg[0]_11 ,
    \write_count_reg[0]_12 ,
    \write_count_reg[0]_13 ,
    \write_count_reg[0]_14 );
  output [32:0]\S1[1][32] ;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input \write_count_reg[0] ;
  input \write_count_reg[0]_0 ;
  input \write_count_reg[0]_1 ;
  input \write_count_reg[0]_2 ;
  input \write_count_reg[0]_3 ;
  input \write_count_reg[0]_4 ;
  input \write_count_reg[0]_5 ;
  input \write_count_reg[0]_6 ;
  input \write_count_reg[0]_7 ;
  input \write_count_reg[0]_8 ;
  input \write_count_reg[0]_9 ;
  input \write_count_reg[0]_10 ;
  input \write_count_reg[0]_11 ;
  input \write_count_reg[0]_12 ;
  input \write_count_reg[0]_13 ;
  input \write_count_reg[0]_14 ;

  wire ACC_reg_i_10__0_n_0;
  wire ACC_reg_i_11__0_n_0;
  wire ACC_reg_i_12__0_n_0;
  wire ACC_reg_i_13__0_n_0;
  wire ACC_reg_i_14__0_n_0;
  wire ACC_reg_i_15__0_n_0;
  wire ACC_reg_i_16__0_n_0;
  wire ACC_reg_i_17__5_n_0;
  wire ACC_reg_i_18__5_n_0;
  wire ACC_reg_i_19__5_n_0;
  wire ACC_reg_i_1__0_n_0;
  wire ACC_reg_i_20__5_n_0;
  wire ACC_reg_i_21__5_n_0;
  wire ACC_reg_i_22__5_n_0;
  wire ACC_reg_i_23__5_n_0;
  wire ACC_reg_i_24__5_n_0;
  wire ACC_reg_i_25__5_n_0;
  wire ACC_reg_i_26__5_n_0;
  wire ACC_reg_i_27__5_n_0;
  wire ACC_reg_i_28__5_n_0;
  wire ACC_reg_i_29__5_n_0;
  wire ACC_reg_i_2__0_n_0;
  wire ACC_reg_i_30__5_n_0;
  wire ACC_reg_i_31__5_n_0;
  wire ACC_reg_i_32__5_n_0;
  wire ACC_reg_i_3__0_n_0;
  wire ACC_reg_i_4__0_n_0;
  wire ACC_reg_i_5__0_n_0;
  wire ACC_reg_i_6__0_n_0;
  wire ACC_reg_i_7__0_n_0;
  wire ACC_reg_i_8__0_n_0;
  wire ACC_reg_i_9__0_n_0;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire RST_IBUF;
  wire [32:0]\S1[1][32] ;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0] ;
  wire \write_count_reg[0]_0 ;
  wire \write_count_reg[0]_1 ;
  wire \write_count_reg[0]_10 ;
  wire \write_count_reg[0]_11 ;
  wire \write_count_reg[0]_12 ;
  wire \write_count_reg[0]_13 ;
  wire \write_count_reg[0]_14 ;
  wire \write_count_reg[0]_2 ;
  wire \write_count_reg[0]_3 ;
  wire \write_count_reg[0]_4 ;
  wire \write_count_reg[0]_5 ;
  wire \write_count_reg[0]_6 ;
  wire \write_count_reg[0]_7 ;
  wire \write_count_reg[0]_8 ;
  wire \write_count_reg[0]_9 ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_17__5_n_0,ACC_reg_i_18__5_n_0,ACC_reg_i_19__5_n_0,ACC_reg_i_20__5_n_0,ACC_reg_i_21__5_n_0,ACC_reg_i_22__5_n_0,ACC_reg_i_23__5_n_0,ACC_reg_i_24__5_n_0,ACC_reg_i_25__5_n_0,ACC_reg_i_26__5_n_0,ACC_reg_i_27__5_n_0,ACC_reg_i_28__5_n_0,ACC_reg_i_29__5_n_0,ACC_reg_i_30__5_n_0,ACC_reg_i_31__5_n_0,ACC_reg_i_32__5_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({ACC_reg_i_1__0_n_0,ACC_reg_i_1__0_n_0,ACC_reg_i_1__0_n_0,ACC_reg_i_2__0_n_0,ACC_reg_i_3__0_n_0,ACC_reg_i_4__0_n_0,ACC_reg_i_5__0_n_0,ACC_reg_i_6__0_n_0,ACC_reg_i_7__0_n_0,ACC_reg_i_8__0_n_0,ACC_reg_i_9__0_n_0,ACC_reg_i_10__0_n_0,ACC_reg_i_11__0_n_0,ACC_reg_i_12__0_n_0,ACC_reg_i_13__0_n_0,ACC_reg_i_14__0_n_0,ACC_reg_i_15__0_n_0,ACC_reg_i_16__0_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(CE_common_reg),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],\S1[1][32] }),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_10__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_8 ),
        .I2(out[1]),
        .O(ACC_reg_i_10__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_11__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_9 ),
        .I2(out[1]),
        .O(ACC_reg_i_11__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_12__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_10 ),
        .I2(out[1]),
        .O(ACC_reg_i_12__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_13__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_11 ),
        .I2(out[1]),
        .O(ACC_reg_i_13__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_14__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_12 ),
        .I2(out[1]),
        .O(ACC_reg_i_14__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_15__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_13 ),
        .I2(out[1]),
        .O(ACC_reg_i_15__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_16__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_14 ),
        .I2(out[1]),
        .O(ACC_reg_i_16__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_17__5
       (.I0(\S1[1][32] [15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(ACC_reg_i_17__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_18__5
       (.I0(\S1[1][32] [14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(ACC_reg_i_18__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_19__5
       (.I0(\S1[1][32] [13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(ACC_reg_i_19__5_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_1__0
       (.I0(out[0]),
        .I1(\write_count_reg[0] ),
        .I2(out[1]),
        .O(ACC_reg_i_1__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_20__5
       (.I0(\S1[1][32] [12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(ACC_reg_i_20__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_21__5
       (.I0(\S1[1][32] [11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(ACC_reg_i_21__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_22__5
       (.I0(\S1[1][32] [10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(ACC_reg_i_22__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_23__5
       (.I0(\S1[1][32] [9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(ACC_reg_i_23__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_24__5
       (.I0(\S1[1][32] [8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(ACC_reg_i_24__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_25__5
       (.I0(\S1[1][32] [7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(ACC_reg_i_25__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_26__5
       (.I0(\S1[1][32] [6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(ACC_reg_i_26__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_27__5
       (.I0(\S1[1][32] [5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(ACC_reg_i_27__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_28__5
       (.I0(\S1[1][32] [4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(ACC_reg_i_28__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_29__5
       (.I0(\S1[1][32] [3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(ACC_reg_i_29__5_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_2__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_0 ),
        .I2(out[1]),
        .O(ACC_reg_i_2__0_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_30__5
       (.I0(\S1[1][32] [2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(ACC_reg_i_30__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_31__5
       (.I0(\S1[1][32] [1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(ACC_reg_i_31__5_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_32__5
       (.I0(\S1[1][32] [0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(ACC_reg_i_32__5_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_3__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_1 ),
        .I2(out[1]),
        .O(ACC_reg_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_4__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_2 ),
        .I2(out[1]),
        .O(ACC_reg_i_4__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_5__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_3 ),
        .I2(out[1]),
        .O(ACC_reg_i_5__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_6__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_4 ),
        .I2(out[1]),
        .O(ACC_reg_i_6__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_7__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_5 ),
        .I2(out[1]),
        .O(ACC_reg_i_7__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_8__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_6 ),
        .I2(out[1]),
        .O(ACC_reg_i_8__0_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_9__0
       (.I0(out[0]),
        .I1(\write_count_reg[0]_7 ),
        .I2(out[1]),
        .O(ACC_reg_i_9__0_n_0));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_21
   (\S1[2][32] ,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    \write_count_reg[0]_rep ,
    \write_count_reg[0]_rep_0 ,
    \write_count_reg[0]_rep_1 ,
    \write_count_reg[0]_rep_2 ,
    \write_count_reg[0]_rep_3 ,
    \write_count_reg[0]_rep_4 ,
    \write_count_reg[0]_rep_5 ,
    \write_count_reg[0]_rep_6 ,
    \write_count_reg[0]_rep_7 ,
    \write_count_reg[0]_rep_8 ,
    \write_count_reg[0]_rep_9 ,
    \write_count_reg[0]_rep_10 ,
    \write_count_reg[0]_rep_11 ,
    \write_count_reg[0]_rep_12 ,
    \write_count_reg[0]_rep_13 ,
    \write_count_reg[0]_rep_14 );
  output [32:0]\S1[2][32] ;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input \write_count_reg[0]_rep ;
  input \write_count_reg[0]_rep_0 ;
  input \write_count_reg[0]_rep_1 ;
  input \write_count_reg[0]_rep_2 ;
  input \write_count_reg[0]_rep_3 ;
  input \write_count_reg[0]_rep_4 ;
  input \write_count_reg[0]_rep_5 ;
  input \write_count_reg[0]_rep_6 ;
  input \write_count_reg[0]_rep_7 ;
  input \write_count_reg[0]_rep_8 ;
  input \write_count_reg[0]_rep_9 ;
  input \write_count_reg[0]_rep_10 ;
  input \write_count_reg[0]_rep_11 ;
  input \write_count_reg[0]_rep_12 ;
  input \write_count_reg[0]_rep_13 ;
  input \write_count_reg[0]_rep_14 ;

  wire ACC_reg_i_10__1_n_0;
  wire ACC_reg_i_11__1_n_0;
  wire ACC_reg_i_12__1_n_0;
  wire ACC_reg_i_13__1_n_0;
  wire ACC_reg_i_14__1_n_0;
  wire ACC_reg_i_15__1_n_0;
  wire ACC_reg_i_16__1_n_0;
  wire ACC_reg_i_17__4_n_0;
  wire ACC_reg_i_18__4_n_0;
  wire ACC_reg_i_19__4_n_0;
  wire ACC_reg_i_1__1_n_0;
  wire ACC_reg_i_20__4_n_0;
  wire ACC_reg_i_21__4_n_0;
  wire ACC_reg_i_22__4_n_0;
  wire ACC_reg_i_23__4_n_0;
  wire ACC_reg_i_24__4_n_0;
  wire ACC_reg_i_25__4_n_0;
  wire ACC_reg_i_26__4_n_0;
  wire ACC_reg_i_27__4_n_0;
  wire ACC_reg_i_28__4_n_0;
  wire ACC_reg_i_29__4_n_0;
  wire ACC_reg_i_2__1_n_0;
  wire ACC_reg_i_30__4_n_0;
  wire ACC_reg_i_31__4_n_0;
  wire ACC_reg_i_32__4_n_0;
  wire ACC_reg_i_3__1_n_0;
  wire ACC_reg_i_4__1_n_0;
  wire ACC_reg_i_5__1_n_0;
  wire ACC_reg_i_6__1_n_0;
  wire ACC_reg_i_7__1_n_0;
  wire ACC_reg_i_8__1_n_0;
  wire ACC_reg_i_9__1_n_0;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire RST_IBUF;
  wire [32:0]\S1[2][32] ;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0]_rep ;
  wire \write_count_reg[0]_rep_0 ;
  wire \write_count_reg[0]_rep_1 ;
  wire \write_count_reg[0]_rep_10 ;
  wire \write_count_reg[0]_rep_11 ;
  wire \write_count_reg[0]_rep_12 ;
  wire \write_count_reg[0]_rep_13 ;
  wire \write_count_reg[0]_rep_14 ;
  wire \write_count_reg[0]_rep_2 ;
  wire \write_count_reg[0]_rep_3 ;
  wire \write_count_reg[0]_rep_4 ;
  wire \write_count_reg[0]_rep_5 ;
  wire \write_count_reg[0]_rep_6 ;
  wire \write_count_reg[0]_rep_7 ;
  wire \write_count_reg[0]_rep_8 ;
  wire \write_count_reg[0]_rep_9 ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_17__4_n_0,ACC_reg_i_18__4_n_0,ACC_reg_i_19__4_n_0,ACC_reg_i_20__4_n_0,ACC_reg_i_21__4_n_0,ACC_reg_i_22__4_n_0,ACC_reg_i_23__4_n_0,ACC_reg_i_24__4_n_0,ACC_reg_i_25__4_n_0,ACC_reg_i_26__4_n_0,ACC_reg_i_27__4_n_0,ACC_reg_i_28__4_n_0,ACC_reg_i_29__4_n_0,ACC_reg_i_30__4_n_0,ACC_reg_i_31__4_n_0,ACC_reg_i_32__4_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({ACC_reg_i_1__1_n_0,ACC_reg_i_1__1_n_0,ACC_reg_i_1__1_n_0,ACC_reg_i_2__1_n_0,ACC_reg_i_3__1_n_0,ACC_reg_i_4__1_n_0,ACC_reg_i_5__1_n_0,ACC_reg_i_6__1_n_0,ACC_reg_i_7__1_n_0,ACC_reg_i_8__1_n_0,ACC_reg_i_9__1_n_0,ACC_reg_i_10__1_n_0,ACC_reg_i_11__1_n_0,ACC_reg_i_12__1_n_0,ACC_reg_i_13__1_n_0,ACC_reg_i_14__1_n_0,ACC_reg_i_15__1_n_0,ACC_reg_i_16__1_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(CE_common_reg),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],\S1[2][32] }),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_10__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_8 ),
        .I2(out[1]),
        .O(ACC_reg_i_10__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_11__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_9 ),
        .I2(out[1]),
        .O(ACC_reg_i_11__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_12__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_10 ),
        .I2(out[1]),
        .O(ACC_reg_i_12__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_13__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_11 ),
        .I2(out[1]),
        .O(ACC_reg_i_13__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_14__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_12 ),
        .I2(out[1]),
        .O(ACC_reg_i_14__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_15__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_13 ),
        .I2(out[1]),
        .O(ACC_reg_i_15__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_16__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_14 ),
        .I2(out[1]),
        .O(ACC_reg_i_16__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_17__4
       (.I0(\S1[2][32] [15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(ACC_reg_i_17__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_18__4
       (.I0(\S1[2][32] [14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(ACC_reg_i_18__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_19__4
       (.I0(\S1[2][32] [13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(ACC_reg_i_19__4_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_1__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep ),
        .I2(out[1]),
        .O(ACC_reg_i_1__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_20__4
       (.I0(\S1[2][32] [12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(ACC_reg_i_20__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_21__4
       (.I0(\S1[2][32] [11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(ACC_reg_i_21__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_22__4
       (.I0(\S1[2][32] [10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(ACC_reg_i_22__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_23__4
       (.I0(\S1[2][32] [9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(ACC_reg_i_23__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_24__4
       (.I0(\S1[2][32] [8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(ACC_reg_i_24__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_25__4
       (.I0(\S1[2][32] [7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(ACC_reg_i_25__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_26__4
       (.I0(\S1[2][32] [6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(ACC_reg_i_26__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_27__4
       (.I0(\S1[2][32] [5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(ACC_reg_i_27__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_28__4
       (.I0(\S1[2][32] [4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(ACC_reg_i_28__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_29__4
       (.I0(\S1[2][32] [3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(ACC_reg_i_29__4_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_2__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_0 ),
        .I2(out[1]),
        .O(ACC_reg_i_2__1_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_30__4
       (.I0(\S1[2][32] [2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(ACC_reg_i_30__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_31__4
       (.I0(\S1[2][32] [1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(ACC_reg_i_31__4_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_32__4
       (.I0(\S1[2][32] [0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(ACC_reg_i_32__4_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_3__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_1 ),
        .I2(out[1]),
        .O(ACC_reg_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_4__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_2 ),
        .I2(out[1]),
        .O(ACC_reg_i_4__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_5__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_3 ),
        .I2(out[1]),
        .O(ACC_reg_i_5__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_6__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_4 ),
        .I2(out[1]),
        .O(ACC_reg_i_6__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_7__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_5 ),
        .I2(out[1]),
        .O(ACC_reg_i_7__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_8__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_6 ),
        .I2(out[1]),
        .O(ACC_reg_i_8__1_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_9__1
       (.I0(out[0]),
        .I1(\write_count_reg[0]_rep_7 ),
        .I2(out[1]),
        .O(ACC_reg_i_9__1_n_0));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_22
   (\S1[3][32] ,
    CE_common_reg,
    CLK_IBUF_BUFG,
    RST_IBUF,
    out,
    \mul_count_reg[2]_rep__0 ,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 ,
    \write_count_reg[0] ,
    \write_count_reg[0]_0 ,
    \write_count_reg[0]_1 ,
    \write_count_reg[0]_2 ,
    \write_count_reg[0]_3 ,
    \write_count_reg[0]_4 ,
    \write_count_reg[0]_5 ,
    \write_count_reg[0]_6 ,
    \write_count_reg[0]_7 ,
    \write_count_reg[0]_8 ,
    \write_count_reg[0]_9 ,
    \write_count_reg[0]_10 ,
    \write_count_reg[0]_11 ,
    \write_count_reg[0]_12 ,
    \write_count_reg[0]_13 ,
    \write_count_reg[0]_14 );
  output [32:0]\S1[3][32] ;
  input CE_common_reg;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [1:0]out;
  input \mul_count_reg[2]_rep__0 ;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;
  input \write_count_reg[0] ;
  input \write_count_reg[0]_0 ;
  input \write_count_reg[0]_1 ;
  input \write_count_reg[0]_2 ;
  input \write_count_reg[0]_3 ;
  input \write_count_reg[0]_4 ;
  input \write_count_reg[0]_5 ;
  input \write_count_reg[0]_6 ;
  input \write_count_reg[0]_7 ;
  input \write_count_reg[0]_8 ;
  input \write_count_reg[0]_9 ;
  input \write_count_reg[0]_10 ;
  input \write_count_reg[0]_11 ;
  input \write_count_reg[0]_12 ;
  input \write_count_reg[0]_13 ;
  input \write_count_reg[0]_14 ;

  wire ACC_reg_i_10__2_n_0;
  wire ACC_reg_i_11__2_n_0;
  wire ACC_reg_i_12__2_n_0;
  wire ACC_reg_i_13__2_n_0;
  wire ACC_reg_i_14__2_n_0;
  wire ACC_reg_i_15__2_n_0;
  wire ACC_reg_i_16__2_n_0;
  wire ACC_reg_i_17__3_n_0;
  wire ACC_reg_i_18__3_n_0;
  wire ACC_reg_i_19__3_n_0;
  wire ACC_reg_i_1__2_n_0;
  wire ACC_reg_i_20__3_n_0;
  wire ACC_reg_i_21__3_n_0;
  wire ACC_reg_i_22__3_n_0;
  wire ACC_reg_i_23__3_n_0;
  wire ACC_reg_i_24__3_n_0;
  wire ACC_reg_i_25__3_n_0;
  wire ACC_reg_i_26__3_n_0;
  wire ACC_reg_i_27__3_n_0;
  wire ACC_reg_i_28__3_n_0;
  wire ACC_reg_i_29__3_n_0;
  wire ACC_reg_i_2__2_n_0;
  wire ACC_reg_i_30__3_n_0;
  wire ACC_reg_i_31__3_n_0;
  wire ACC_reg_i_32__3_n_0;
  wire ACC_reg_i_3__2_n_0;
  wire ACC_reg_i_4__2_n_0;
  wire ACC_reg_i_5__2_n_0;
  wire ACC_reg_i_6__2_n_0;
  wire ACC_reg_i_7__2_n_0;
  wire ACC_reg_i_8__2_n_0;
  wire ACC_reg_i_9__2_n_0;
  wire CE_common_reg;
  wire CLK_IBUF_BUFG;
  wire RST_IBUF;
  wire [32:0]\S1[3][32] ;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [1:0]out;
  wire \write_count_reg[0] ;
  wire \write_count_reg[0]_0 ;
  wire \write_count_reg[0]_1 ;
  wire \write_count_reg[0]_10 ;
  wire \write_count_reg[0]_11 ;
  wire \write_count_reg[0]_12 ;
  wire \write_count_reg[0]_13 ;
  wire \write_count_reg[0]_14 ;
  wire \write_count_reg[0]_2 ;
  wire \write_count_reg[0]_3 ;
  wire \write_count_reg[0]_4 ;
  wire \write_count_reg[0]_5 ;
  wire \write_count_reg[0]_6 ;
  wire \write_count_reg[0]_7 ;
  wire \write_count_reg[0]_8 ;
  wire \write_count_reg[0]_9 ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_17__3_n_0,ACC_reg_i_18__3_n_0,ACC_reg_i_19__3_n_0,ACC_reg_i_20__3_n_0,ACC_reg_i_21__3_n_0,ACC_reg_i_22__3_n_0,ACC_reg_i_23__3_n_0,ACC_reg_i_24__3_n_0,ACC_reg_i_25__3_n_0,ACC_reg_i_26__3_n_0,ACC_reg_i_27__3_n_0,ACC_reg_i_28__3_n_0,ACC_reg_i_29__3_n_0,ACC_reg_i_30__3_n_0,ACC_reg_i_31__3_n_0,ACC_reg_i_32__3_n_0}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({ACC_reg_i_1__2_n_0,ACC_reg_i_1__2_n_0,ACC_reg_i_1__2_n_0,ACC_reg_i_2__2_n_0,ACC_reg_i_3__2_n_0,ACC_reg_i_4__2_n_0,ACC_reg_i_5__2_n_0,ACC_reg_i_6__2_n_0,ACC_reg_i_7__2_n_0,ACC_reg_i_8__2_n_0,ACC_reg_i_9__2_n_0,ACC_reg_i_10__2_n_0,ACC_reg_i_11__2_n_0,ACC_reg_i_12__2_n_0,ACC_reg_i_13__2_n_0,ACC_reg_i_14__2_n_0,ACC_reg_i_15__2_n_0,ACC_reg_i_16__2_n_0}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(CE_common_reg),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(CE_common_reg),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(CE_common_reg),
        .CEP(CE_common_reg),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],\S1[3][32] }),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_10__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_8 ),
        .I2(out[1]),
        .O(ACC_reg_i_10__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_11__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_9 ),
        .I2(out[1]),
        .O(ACC_reg_i_11__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_12__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_10 ),
        .I2(out[1]),
        .O(ACC_reg_i_12__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_13__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_11 ),
        .I2(out[1]),
        .O(ACC_reg_i_13__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_14__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_12 ),
        .I2(out[1]),
        .O(ACC_reg_i_14__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_15__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_13 ),
        .I2(out[1]),
        .O(ACC_reg_i_15__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_16__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_14 ),
        .I2(out[1]),
        .O(ACC_reg_i_16__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_17__3
       (.I0(\S1[3][32] [15]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0 ),
        .I3(out[0]),
        .O(ACC_reg_i_17__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_18__3
       (.I0(\S1[3][32] [14]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_0 ),
        .I3(out[0]),
        .O(ACC_reg_i_18__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_19__3
       (.I0(\S1[3][32] [13]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_1 ),
        .I3(out[0]),
        .O(ACC_reg_i_19__3_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_1__2
       (.I0(out[0]),
        .I1(\write_count_reg[0] ),
        .I2(out[1]),
        .O(ACC_reg_i_1__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_20__3
       (.I0(\S1[3][32] [12]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_2 ),
        .I3(out[0]),
        .O(ACC_reg_i_20__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_21__3
       (.I0(\S1[3][32] [11]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_3 ),
        .I3(out[0]),
        .O(ACC_reg_i_21__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_22__3
       (.I0(\S1[3][32] [10]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_4 ),
        .I3(out[0]),
        .O(ACC_reg_i_22__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_23__3
       (.I0(\S1[3][32] [9]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_5 ),
        .I3(out[0]),
        .O(ACC_reg_i_23__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_24__3
       (.I0(\S1[3][32] [8]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_6 ),
        .I3(out[0]),
        .O(ACC_reg_i_24__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_25__3
       (.I0(\S1[3][32] [7]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_7 ),
        .I3(out[0]),
        .O(ACC_reg_i_25__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_26__3
       (.I0(\S1[3][32] [6]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_8 ),
        .I3(out[0]),
        .O(ACC_reg_i_26__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_27__3
       (.I0(\S1[3][32] [5]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_9 ),
        .I3(out[0]),
        .O(ACC_reg_i_27__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_28__3
       (.I0(\S1[3][32] [4]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_10 ),
        .I3(out[0]),
        .O(ACC_reg_i_28__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_29__3
       (.I0(\S1[3][32] [3]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_11 ),
        .I3(out[0]),
        .O(ACC_reg_i_29__3_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_2__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_0 ),
        .I2(out[1]),
        .O(ACC_reg_i_2__2_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_30__3
       (.I0(\S1[3][32] [2]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_12 ),
        .I3(out[0]),
        .O(ACC_reg_i_30__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_31__3
       (.I0(\S1[3][32] [1]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_13 ),
        .I3(out[0]),
        .O(ACC_reg_i_31__3_n_0));
  LUT4 #(
    .INIT(16'hB888)) 
    ACC_reg_i_32__3
       (.I0(\S1[3][32] [0]),
        .I1(out[1]),
        .I2(\mul_count_reg[2]_rep__0_14 ),
        .I3(out[0]),
        .O(ACC_reg_i_32__3_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_3__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_1 ),
        .I2(out[1]),
        .O(ACC_reg_i_3__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_4__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_2 ),
        .I2(out[1]),
        .O(ACC_reg_i_4__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_5__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_3 ),
        .I2(out[1]),
        .O(ACC_reg_i_5__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_6__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_4 ),
        .I2(out[1]),
        .O(ACC_reg_i_6__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_7__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_5 ),
        .I2(out[1]),
        .O(ACC_reg_i_7__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_8__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_6 ),
        .I2(out[1]),
        .O(ACC_reg_i_8__2_n_0));
  LUT3 #(
    .INIT(8'h08)) 
    ACC_reg_i_9__2
       (.I0(out[0]),
        .I1(\write_count_reg[0]_7 ),
        .I2(out[1]),
        .O(ACC_reg_i_9__2_n_0));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_26
   (P,
    common_enable,
    CLK_IBUF_BUFG,
    RST_IBUF,
    B,
    A);
  output [32:0]P;
  input common_enable;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [15:0]B;
  input [15:0]A;

  wire [15:0]A;
  wire [15:0]B;
  wire CLK_IBUF_BUFG;
  wire [32:0]P;
  wire RST_IBUF;
  wire common_enable;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({B[15],B[15],B}),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(common_enable),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(common_enable),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(common_enable),
        .CEP(common_enable),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],P}),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_27
   (\S4[1][32] ,
    common_enable,
    CLK_IBUF_BUFG,
    RST_IBUF,
    \write_count_reg[0] ,
    A);
  output [32:0]\S4[1][32] ;
  input common_enable;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [15:0]\write_count_reg[0] ;
  input [15:0]A;

  wire [15:0]A;
  wire CLK_IBUF_BUFG;
  wire RST_IBUF;
  wire [32:0]\S4[1][32] ;
  wire common_enable;
  wire [15:0]\write_count_reg[0] ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({\write_count_reg[0] [15],\write_count_reg[0] [15],\write_count_reg[0] }),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(common_enable),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(common_enable),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(common_enable),
        .CEP(common_enable),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],\S4[1][32] }),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_28
   (\S4[2][32] ,
    common_enable,
    CLK_IBUF_BUFG,
    RST_IBUF,
    \write_count_reg[0]_rep ,
    A);
  output [32:0]\S4[2][32] ;
  input common_enable;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [15:0]\write_count_reg[0]_rep ;
  input [15:0]A;

  wire [15:0]A;
  wire CLK_IBUF_BUFG;
  wire RST_IBUF;
  wire [32:0]\S4[2][32] ;
  wire common_enable;
  wire [15:0]\write_count_reg[0]_rep ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({\write_count_reg[0]_rep [15],\write_count_reg[0]_rep [15],\write_count_reg[0]_rep }),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(common_enable),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(common_enable),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(common_enable),
        .CEP(common_enable),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],\S4[2][32] }),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
endmodule

(* ORIG_REF_NAME = "simple_multiplier" *) 
module simple_multiplier_29
   (\S4[3][32] ,
    A,
    common_enable,
    CLK_IBUF_BUFG,
    RST_IBUF,
    \write_count_reg[0] ,
    \mul_count_reg[2]_rep__0 ,
    Q,
    \mul_count_reg[2]_rep__0_0 ,
    \mul_count_reg[2]_rep__0_1 ,
    \mul_count_reg[2]_rep__0_2 ,
    \mul_count_reg[2]_rep__0_3 ,
    \mul_count_reg[2]_rep__0_4 ,
    \mul_count_reg[2]_rep__0_5 ,
    \mul_count_reg[2]_rep__0_6 ,
    \mul_count_reg[2]_rep__0_7 ,
    \mul_count_reg[2]_rep__0_8 ,
    \mul_count_reg[2]_rep__0_9 ,
    \mul_count_reg[2]_rep__0_10 ,
    \mul_count_reg[2]_rep__0_11 ,
    \mul_count_reg[2]_rep__0_12 ,
    \mul_count_reg[2]_rep__0_13 ,
    \mul_count_reg[2]_rep__0_14 );
  output [32:0]\S4[3][32] ;
  output [15:0]A;
  input common_enable;
  input CLK_IBUF_BUFG;
  input RST_IBUF;
  input [15:0]\write_count_reg[0] ;
  input \mul_count_reg[2]_rep__0 ;
  input [0:0]Q;
  input \mul_count_reg[2]_rep__0_0 ;
  input \mul_count_reg[2]_rep__0_1 ;
  input \mul_count_reg[2]_rep__0_2 ;
  input \mul_count_reg[2]_rep__0_3 ;
  input \mul_count_reg[2]_rep__0_4 ;
  input \mul_count_reg[2]_rep__0_5 ;
  input \mul_count_reg[2]_rep__0_6 ;
  input \mul_count_reg[2]_rep__0_7 ;
  input \mul_count_reg[2]_rep__0_8 ;
  input \mul_count_reg[2]_rep__0_9 ;
  input \mul_count_reg[2]_rep__0_10 ;
  input \mul_count_reg[2]_rep__0_11 ;
  input \mul_count_reg[2]_rep__0_12 ;
  input \mul_count_reg[2]_rep__0_13 ;
  input \mul_count_reg[2]_rep__0_14 ;

  wire [15:0]A;
  wire CLK_IBUF_BUFG;
  wire [0:0]Q;
  wire RST_IBUF;
  wire [32:0]\S4[3][32] ;
  wire common_enable;
  wire \mul_count_reg[2]_rep__0 ;
  wire \mul_count_reg[2]_rep__0_0 ;
  wire \mul_count_reg[2]_rep__0_1 ;
  wire \mul_count_reg[2]_rep__0_10 ;
  wire \mul_count_reg[2]_rep__0_11 ;
  wire \mul_count_reg[2]_rep__0_12 ;
  wire \mul_count_reg[2]_rep__0_13 ;
  wire \mul_count_reg[2]_rep__0_14 ;
  wire \mul_count_reg[2]_rep__0_2 ;
  wire \mul_count_reg[2]_rep__0_3 ;
  wire \mul_count_reg[2]_rep__0_4 ;
  wire \mul_count_reg[2]_rep__0_5 ;
  wire \mul_count_reg[2]_rep__0_6 ;
  wire \mul_count_reg[2]_rep__0_7 ;
  wire \mul_count_reg[2]_rep__0_8 ;
  wire \mul_count_reg[2]_rep__0_9 ;
  wire [15:0]\write_count_reg[0] ;
  wire NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED;
  wire NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED;
  wire NLW_ACC_reg_OVERFLOW_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED;
  wire NLW_ACC_reg_PATTERNDETECT_UNCONNECTED;
  wire NLW_ACC_reg_UNDERFLOW_UNCONNECTED;
  wire [29:0]NLW_ACC_reg_ACOUT_UNCONNECTED;
  wire [17:0]NLW_ACC_reg_BCOUT_UNCONNECTED;
  wire [3:0]NLW_ACC_reg_CARRYOUT_UNCONNECTED;
  wire [47:33]NLW_ACC_reg_P_UNCONNECTED;
  wire [47:0]NLW_ACC_reg_PCOUT_UNCONNECTED;

  DSP48E1 #(
    .ACASCREG(1),
    .ADREG(1),
    .ALUMODEREG(0),
    .AREG(1),
    .AUTORESET_PATDET("NO_RESET"),
    .A_INPUT("DIRECT"),
    .BCASCREG(1),
    .BREG(1),
    .B_INPUT("DIRECT"),
    .CARRYINREG(0),
    .CARRYINSELREG(0),
    .CREG(1),
    .DREG(1),
    .INMODEREG(0),
    .MASK(48'h3FFFFFFFFFFF),
    .MREG(1),
    .OPMODEREG(0),
    .PATTERN(48'h000000000000),
    .PREG(1),
    .SEL_MASK("MASK"),
    .SEL_PATTERN("PATTERN"),
    .USE_DPORT("FALSE"),
    .USE_MULT("MULTIPLY"),
    .USE_PATTERN_DETECT("NO_PATDET"),
    .USE_SIMD("ONE48")) 
    ACC_reg
       (.A({A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A[15],A}),
        .ACIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ACOUT(NLW_ACC_reg_ACOUT_UNCONNECTED[29:0]),
        .ALUMODE({1'b0,1'b0,1'b0,1'b0}),
        .B({\write_count_reg[0] [15],\write_count_reg[0] [15],\write_count_reg[0] }),
        .BCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .BCOUT(NLW_ACC_reg_BCOUT_UNCONNECTED[17:0]),
        .C({1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1,1'b1}),
        .CARRYCASCIN(1'b0),
        .CARRYCASCOUT(NLW_ACC_reg_CARRYCASCOUT_UNCONNECTED),
        .CARRYIN(1'b0),
        .CARRYINSEL({1'b0,1'b0,1'b0}),
        .CARRYOUT(NLW_ACC_reg_CARRYOUT_UNCONNECTED[3:0]),
        .CEA1(1'b0),
        .CEA2(common_enable),
        .CEAD(1'b0),
        .CEALUMODE(1'b0),
        .CEB1(1'b0),
        .CEB2(common_enable),
        .CEC(1'b0),
        .CECARRYIN(1'b0),
        .CECTRL(1'b0),
        .CED(1'b0),
        .CEINMODE(1'b0),
        .CEM(common_enable),
        .CEP(common_enable),
        .CLK(CLK_IBUF_BUFG),
        .D({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .INMODE({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .MULTSIGNIN(1'b0),
        .MULTSIGNOUT(NLW_ACC_reg_MULTSIGNOUT_UNCONNECTED),
        .OPMODE({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .OVERFLOW(NLW_ACC_reg_OVERFLOW_UNCONNECTED),
        .P({NLW_ACC_reg_P_UNCONNECTED[47:33],\S4[3][32] }),
        .PATTERNBDETECT(NLW_ACC_reg_PATTERNBDETECT_UNCONNECTED),
        .PATTERNDETECT(NLW_ACC_reg_PATTERNDETECT_UNCONNECTED),
        .PCIN({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .PCOUT(NLW_ACC_reg_PCOUT_UNCONNECTED[47:0]),
        .RSTA(RST_IBUF),
        .RSTALLCARRYIN(1'b0),
        .RSTALUMODE(1'b0),
        .RSTB(RST_IBUF),
        .RSTC(1'b0),
        .RSTCTRL(1'b0),
        .RSTD(1'b0),
        .RSTINMODE(1'b0),
        .RSTM(RST_IBUF),
        .RSTP(RST_IBUF),
        .UNDERFLOW(NLW_ACC_reg_UNDERFLOW_UNCONNECTED));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_17__7
       (.I0(\mul_count_reg[2]_rep__0 ),
        .I1(Q),
        .O(A[15]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_18__7
       (.I0(\mul_count_reg[2]_rep__0_0 ),
        .I1(Q),
        .O(A[14]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_19__7
       (.I0(\mul_count_reg[2]_rep__0_1 ),
        .I1(Q),
        .O(A[13]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_20__7
       (.I0(\mul_count_reg[2]_rep__0_2 ),
        .I1(Q),
        .O(A[12]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_21__7
       (.I0(\mul_count_reg[2]_rep__0_3 ),
        .I1(Q),
        .O(A[11]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_22__7
       (.I0(\mul_count_reg[2]_rep__0_4 ),
        .I1(Q),
        .O(A[10]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_23__7
       (.I0(\mul_count_reg[2]_rep__0_5 ),
        .I1(Q),
        .O(A[9]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_24__7
       (.I0(\mul_count_reg[2]_rep__0_6 ),
        .I1(Q),
        .O(A[8]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_25__7
       (.I0(\mul_count_reg[2]_rep__0_7 ),
        .I1(Q),
        .O(A[7]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_26__7
       (.I0(\mul_count_reg[2]_rep__0_8 ),
        .I1(Q),
        .O(A[6]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_27__7
       (.I0(\mul_count_reg[2]_rep__0_9 ),
        .I1(Q),
        .O(A[5]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_28__7
       (.I0(\mul_count_reg[2]_rep__0_10 ),
        .I1(Q),
        .O(A[4]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_29__7
       (.I0(\mul_count_reg[2]_rep__0_11 ),
        .I1(Q),
        .O(A[3]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_30__7
       (.I0(\mul_count_reg[2]_rep__0_12 ),
        .I1(Q),
        .O(A[2]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_31__7
       (.I0(\mul_count_reg[2]_rep__0_13 ),
        .I1(Q),
        .O(A[1]));
  LUT2 #(
    .INIT(4'h2)) 
    ACC_reg_i_32__7
       (.I0(\mul_count_reg[2]_rep__0_14 ),
        .I1(Q),
        .O(A[0]));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
